(self.webpackChunkdoc_ops=self.webpackChunkdoc_ops||[]).push([[869],{4191:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return s},default:function(){return d}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),i=["components"],l={},c="Structure: Engine::Vault",u={unversionedId:"structure/vault",id:"structure/vault",isDocsHomePage:!1,title:"Structure: Engine::Vault",description:"| | | |",source:"@site/docs/structure/vault.md",sourceDirName:"structure",slug:"/structure/vault",permalink:"/docs/structure/vault",editUrl:"https://github.com/iotaledger/stronghold.rs/tree/dev/documentation/docs/structure/vault.md",version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Structure: Engine::Snapshot",permalink:"/docs/structure/snapshot"},next:{title:"Structure: Engine::Store",permalink:"/docs/structure/store"}},s=[],p={toc:s};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"structure-enginevault"},"Structure: Engine::Vault"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/iotaledger/stronghold.rs/tree/dev/engine/src/vault"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/github-source-blue.svg",alt:"github"}))),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://docs.rs/stronghold_engine/engine/latest/vault/index.html"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/rust-docs-green.svg",alt:"github"}))),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://crates.io/crates/stronghold-engine"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/crates/v/stronghold-engine.svg",alt:null})))))),(0,o.kt)("p",null,(0,o.kt)("h2",{parentName:"p"},"Stronghold Vault"),(0,o.kt)("p",{parentName:"p"},"Vault is an implementation of a secure database for secrets. From an abstract point of view, each database view is a vault which is a collection of records which are all encrypted using the same key.  And a collection of vaults is called a Stronghold. "),(0,o.kt)("p",{parentName:"p"},"The vault module defines a ",(0,o.kt)("inlineCode",{parentName:"p"},"Vault")," type. Each of these vaults is composed of ",(0,o.kt)("inlineCode",{parentName:"p"},"Records"),". Each ",(0,o.kt)("inlineCode",{parentName:"p"},"Record")," is split into multiple pieces: an id, a data transaction, an optional revocation transaction and the blob of encrypted data. Internally, the data uses the ",(0,o.kt)("inlineCode",{parentName:"p"},"GuardedVec")," type from the runtime module to guard the data for when it is accessed from the ",(0,o.kt)("inlineCode",{parentName:"p"},"DbView")," interface. On the ",(0,o.kt)("inlineCode",{parentName:"p"},"DbView")," interface there are methods for writing data, updating data and deleting data. To delete a record from a vault, a revocation transaction must be added to a record which marks it for garbage collection via the ",(0,o.kt)("inlineCode",{parentName:"p"},"revoke_record")," method. The records may then be garbage collected using the ",(0,o.kt)("inlineCode",{parentName:"p"},"garbage_collect_vault")," method. The ",(0,o.kt)("inlineCode",{parentName:"p"},"write")," method can be used to both write to a new record or update existing records. "),(0,o.kt)("p",{parentName:"p"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"get_guard")," method allows the user to insert a closure which accepts the ",(0,o.kt)("inlineCode",{parentName:"p"},"GuardedVec")," and returns a ",(0,o.kt)("inlineCode",{parentName:"p"},"engine::Result<()>"),".  Through this closure, the user can interact with the ",(0,o.kt)("inlineCode",{parentName:"p"},"GuardedVec")," to manipulate the data. The ",(0,o.kt)("inlineCode",{parentName:"p"},"exec_proc")," method is a version of ",(0,o.kt)("inlineCode",{parentName:"p"},"get_guard")," that accepts two vault locations, vault keys and also a closure of type ",(0,o.kt)("inlineCode",{parentName:"p"},"FnOnce(GuardedVec<u8>) -> crate::Result<Vec<u8>>"),". This method places the result of the closure into the newly specified ",(0,o.kt)("inlineCode",{parentName:"p"},"Record")," in the vault. ")))}d.isMDXComponent=!0},3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(r),m=a,h=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return r?n.createElement(h,i(i({ref:t},s),{},{components:r})):n.createElement(h,i({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);