var searchIndex = JSON.parse('{\
"communication":{"doc":"Stronghold Communication","t":[0,0,3,12,11,11,11,11,0,24,3,12,11,11,3,12,11,11,11,11,11,11,11,11,8,10,8,10,4,13,13,4,13,12,12,12,12,13,12,12,12,12,13,12,12,12,12,13,12,12,3,12,12,12,12,11,11,11,11,11,11,11,11,0,6,6,3,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,4,13,13,13,4,13,12,12,13,13,12,12,12,13,13,13,13,13,13,12,12,13,13,13,4,13,13,13,3,12,12,12,11,4,13,13,13,13,12,12,13,12,12,12,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,3,12,4,13,12,12,12,12,13,12,12,12,12,13,12,12,12,12,13,12,12,3,12,4,13,13,24,8,10,8,10,4,13,13,13,4,13,12,12,13,13,12,12,12,13,13,13,13,13,13,12,12,13,13,13,4,13,13,13,3,12,12,12,4,13,13,13,13,12,12,13,12,12,12,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,3,12,12,12,3,12,12,12,12,11,0,0,8,3,3,12,12,0,4,13,13,3,12,12,12,12,12,12,4,13,13,13,4,13,12,12,13,12,13,12,13,12,12,4,13,13,13,13,4,13,13,13,13,4,13,12,12,12,13,12,12,12,13,12,12,12,13,12,12,12,13,12,12,4,13,13,13,8,4,13,13,3,12,12,12,12,12,12,4,13,13,13,4,13,12,12,13,12,13,12,13,12,12,4,13,13,13,13,4,13,13,13,13,4,13,12,12,12,13,12,12,12,13,12,12,12,13,12,12,12,13,12,12,4,13,13,13,4,13,13,13,3,12,12,12,12,11,3,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,0,3,12,12,4,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,12,13,12,12,3,12,3,12,6,4,13,13,12,12,12,13,12,12,12,12,13,12,12,13,12,12,12,13,12,12,13,12,12,12,12,13,12,12,13,13,13,12,12,13,12,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["actor","connections","ConnectionManager","map","new","current_connections","insert","remove_connection","firewall","RequestPermissions","PermissionValue","0","new","value","FirewallPermission","0","none","all","add_permission","add_permissions","remove_permission","remove_permissions","permits","value","VariantPermission","permission","ToPermissionVariants","to_permissioned","RequestDirection","In","Out","FirewallRule","SetRules","direction","peers","set_default","permission","AddPermissions","direction","peers","change_default","permissions","RemovePermissions","direction","peers","change_default","permissions","RemoveRule","peers","direction","FirewallConfiguration","default_in","default_out","rules_in","rules_out","new","get_default","set_default","has_rule","get_rule","set_rule","remove_rule","is_permitted","swarm_task","HandleErr","P2PSwarmEvent","SwarmTask","system","client","firewall","swarm","swarm_rx","listener","dialing_relays","listening_relays","relay_addr","connection_manager","_marker","new","poll_swarm","shutdown","send_response","await_event","start_listening","stop_listening","await_connect_result","connect_peer_via_addr","connect_peer","add_peer","send_request","add_listener_relay","set_relay","remove_relay","update_firewall_rule","configure_firewall","handle_actor_request","ask_client","handle_incoming_request","handle_swarm_event","types","RelayDirection","Dialing","Listening","Both","CommunicationRequest","RequestMsg","peer_id","request","SetClientRef","AddPeer","peer_id","addr","is_relay","GetSwarmInfo","BanPeer","UnbanPeer","StartListening","RemoveListener","ConfigRelay","peer_id","direction","RemoveRelay","ConfigureFirewall","Shutdown","RequestMessageError","Outbound","Inbound","LocalFirewallRejected","EstablishedConnection","start","connected_point","is_relay","new","CommunicationResults","RequestMsgResult","SetClientRefAck","AddPeerResult","CheckConnectionResult","peer_id","is_connected","SwarmInfo","peer_id","listeners","connections","BannedPeerAck","UnbannedPeerAck","StartListeningResult","RemoveListenerAck","ConfigRelayResult","RemoveRelayAck","ConfigureFirewallAck","ConnectPeerError","Banned","NoAddresses","Transport","InvalidPeerId","ConnectionLimit","Io","Handler","Timeout","InvalidAddress","FirewallPermission","0","FirewallRule","SetRules","direction","peers","set_default","permission","AddPermissions","direction","peers","change_default","permissions","RemovePermissions","direction","peers","change_default","permissions","RemoveRule","peers","direction","PermissionValue","0","RequestDirection","In","Out","RequestPermissions","ToPermissionVariants","to_permissioned","VariantPermission","permission","RelayDirection","Dialing","Listening","Both","CommunicationRequest","RequestMsg","peer_id","request","SetClientRef","AddPeer","peer_id","addr","is_relay","GetSwarmInfo","BanPeer","UnbanPeer","StartListening","RemoveListener","ConfigRelay","peer_id","direction","RemoveRelay","ConfigureFirewall","Shutdown","RequestMessageError","Outbound","Inbound","LocalFirewallRejected","EstablishedConnection","start","connected_point","is_relay","CommunicationResults","RequestMsgResult","SetClientRefAck","AddPeerResult","CheckConnectionResult","peer_id","is_connected","SwarmInfo","peer_id","listeners","connections","BannedPeerAck","UnbannedPeerAck","StartListeningResult","RemoveListenerAck","ConfigRelayResult","RemoveRelayAck","ConfigureFirewallAck","ConnectPeerError","Banned","NoAddresses","Transport","InvalidPeerId","ConnectionLimit","Io","Handler","Timeout","InvalidAddress","CommunicationActorConfig","client","firewall_default_in","firewall_default_out","CommunicationActor","swarm_tx","swarm_task_config","poll_swarm_handle","_marker","send_swarm_task","behaviour","protocol","MessageEvent","MessageProtocol","MessageCodec","p","q","types","P2PMdnsEvent","Discovered","Expired","P2PIdentifyInfo","public_key","protocol_version","agent_version","listen_addrs","protocols","observed_addr","P2PProtocolsHandlerUpgrErr","Timeout","Timer","Upgrade","P2PIdentifyEvent","Received","peer_id","info","Sent","peer_id","Pushed","peer_id","Error","peer_id","error","P2POutboundFailure","DialFailure","Timeout","ConnectionClosed","UnsupportedProtocols","P2PInboundFailure","Timeout","UnsupportedProtocols","ResponseOmission","ConnectionClosed","P2PReqResEvent","Req","peer_id","request_id","request","Res","peer_id","request_id","response","InboundFailure","peer_id","request_id","error","OutboundFailure","peer_id","request_id","error","ResSent","peer_id","request_id","P2PEvent","Mdns","Identify","RequestResponse","MessageEvent","P2PMdnsEvent","Discovered","Expired","P2PIdentifyInfo","public_key","protocol_version","agent_version","listen_addrs","protocols","observed_addr","P2PProtocolsHandlerUpgrErr","Timeout","Timer","Upgrade","P2PIdentifyEvent","Received","peer_id","info","Sent","peer_id","Pushed","peer_id","Error","peer_id","error","P2POutboundFailure","DialFailure","Timeout","ConnectionClosed","UnsupportedProtocols","P2PInboundFailure","Timeout","UnsupportedProtocols","ResponseOmission","ConnectionClosed","P2PReqResEvent","Req","peer_id","request_id","request","Res","peer_id","request_id","response","InboundFailure","peer_id","request_id","error","OutboundFailure","peer_id","request_id","error","ResSent","peer_id","request_id","P2PEvent","Mdns","Identify","RequestResponse","BehaviourError","TransportError","NoiseAuthenticError","MdnsError","BehaviourConfig","timeout","keep_alive","mdns_ttl","mdns_query_interval","new","P2PNetworkBehaviour","mdns","identify","msg_proto","relay","peers","events","response_channels","init_swarm","poll","add_peer_addr","remove_peer_addr","remove_peer","get_peer_addr","get_all_peers","get_active_mdns_peers","send_request","send_response","libp2p","ConnectionLimit","limit","current","Keypair","Ed25519","Rsa","Secp256k1","Protocol","Dccp","Dns","Dns4","Dns6","Dnsaddr","Http","Https","Ip4","Ip6","P2pWebRtcDirect","P2pWebRtcStar","P2pWebSocketStar","Memory","Onion","Onion3","P2p","P2pCircuit","Quic","Sctp","Tcp","Udp","Udt","Unix","Utp","Ws","Wss","ConnectedPoint","Dialer","address","Listener","local_addr","send_back_addr","Multiaddr","bytes","PeerId","multihash","Swarm","SwarmEvent","Behaviour","ConnectionEstablished","peer_id","endpoint","num_established","ConnectionClosed","peer_id","endpoint","num_established","cause","IncomingConnection","local_addr","send_back_addr","IncomingConnectionError","local_addr","send_back_addr","error","BannedPeer","peer_id","endpoint","UnreachableAddr","peer_id","address","error","attempts_remaining","UnknownPeerUnreachableAddr","address","error","NewListenAddr","ExpiredListenAddr","ListenerClosed","addresses","reason","ListenerError","error","Dialing","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","get_hash","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","protocol_name","vzip","get_hash","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","get_hash","equivalent","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","deserialize","as_ref","hash","from","from","from","from","from","from","from","eq","ne","eq","ne","cmp","from_str","fmt","fmt","clone","clone","try_from","try_from","try_from","serialize","partial_cmp","fmt","fmt","from_iter","hash","hash","fmt","fmt","cmp","try_from","try_from","as_ref","from","fmt","fmt","fmt","eq","ne","eq","ne","from_str","clone","clone","clone","clone","partial_cmp","fmt","from","from","from","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","eq","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","protocol_name","new_handler","addresses_of_peer","inject_connected","inject_disconnected","inject_connection_established","inject_address_change","inject_connection_closed","inject_addr_reach_failure","inject_dial_failure","inject_new_listener","inject_new_listen_addr","inject_expired_listen_addr","inject_new_external_addr","inject_expired_external_addr","inject_listener_error","inject_listener_closed","inject_event","poll","inject_event","inject_event","inject_event","inject_event","read_request","read_response","write_request","write_response","create_args","post_start","post_stop","recv","generate_ed25519","generate_secp256k1","rsa_from_pkcs8","secp256k1_from_der","sign","public","from_str_parts","from_bytes","write_bytes","acquire","to_endpoint","is_dialer","is_listener","get_remote_address","set_remote_address","empty","with_capacity","len","is_empty","to_vec","push","pop","with","iter","replace","ends_with","from_public_key","from_bytes","from_multihash","random","to_bytes","to_base58","is_public_key"],"q":["communication","communication::actor","communication::actor::connections","","","","","","communication::actor","communication::actor::firewall","","","","","","","","","","","","","","","","","","","","","","","","communication::actor::firewall::FirewallRule","","","","communication::actor::firewall","communication::actor::firewall::FirewallRule","","","","communication::actor::firewall","communication::actor::firewall::FirewallRule","","","","communication::actor::firewall","communication::actor::firewall::FirewallRule","","communication::actor::firewall","","","","","","","","","","","","","communication::actor","communication::actor::swarm_task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","communication::actor","communication::actor::types","","","","","","communication::actor::types::CommunicationRequest","","communication::actor::types","","communication::actor::types::CommunicationRequest","","","communication::actor::types","","","","","","communication::actor::types::CommunicationRequest","","communication::actor::types","","","","","","","","","","","","","","","","","communication::actor::types::CommunicationResults","","communication::actor::types","communication::actor::types::CommunicationResults","","","communication::actor::types","","","","","","","","","","","","","","","","","communication::actor","","","","communication::actor::FirewallRule","","","","communication::actor","communication::actor::FirewallRule","","","","communication::actor","communication::actor::FirewallRule","","","","communication::actor","communication::actor::FirewallRule","","communication::actor","","","","","","","","","","","","","","","","communication::actor::CommunicationRequest","","communication::actor","","communication::actor::CommunicationRequest","","","communication::actor","","","","","","communication::actor::CommunicationRequest","","communication::actor","","","","","","","","","","","","","","","","communication::actor::CommunicationResults","","communication::actor","communication::actor::CommunicationResults","","","communication::actor","","","","","","","","","","","","","","","","","","","","","","","","","","","communication","communication::behaviour","communication::behaviour::protocol","","","","","communication::behaviour","communication::behaviour::types","","","","","","","","","","","","","","","","communication::behaviour::types::P2PIdentifyEvent","","communication::behaviour::types","communication::behaviour::types::P2PIdentifyEvent","communication::behaviour::types","communication::behaviour::types::P2PIdentifyEvent","communication::behaviour::types","communication::behaviour::types::P2PIdentifyEvent","","communication::behaviour::types","","","","","","","","","","","","communication::behaviour::types::P2PReqResEvent","","","communication::behaviour::types","communication::behaviour::types::P2PReqResEvent","","","communication::behaviour::types","communication::behaviour::types::P2PReqResEvent","","","communication::behaviour::types","communication::behaviour::types::P2PReqResEvent","","","communication::behaviour::types","communication::behaviour::types::P2PReqResEvent","","communication::behaviour::types","","","","communication::behaviour","","","","","","","","","","","","","","","","","communication::behaviour::P2PIdentifyEvent","","communication::behaviour","communication::behaviour::P2PIdentifyEvent","communication::behaviour","communication::behaviour::P2PIdentifyEvent","communication::behaviour","communication::behaviour::P2PIdentifyEvent","","communication::behaviour","","","","","","","","","","","","communication::behaviour::P2PReqResEvent","","","communication::behaviour","communication::behaviour::P2PReqResEvent","","","communication::behaviour","communication::behaviour::P2PReqResEvent","","","communication::behaviour","communication::behaviour::P2PReqResEvent","","","communication::behaviour","communication::behaviour::P2PReqResEvent","","communication::behaviour","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","communication","communication::libp2p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","communication::libp2p::ConnectedPoint","communication::libp2p","communication::libp2p::ConnectedPoint","","communication::libp2p","","","","","","","","communication::libp2p::SwarmEvent","","","communication::libp2p","communication::libp2p::SwarmEvent","","","","communication::libp2p","communication::libp2p::SwarmEvent","","communication::libp2p","communication::libp2p::SwarmEvent","","","communication::libp2p","communication::libp2p::SwarmEvent","","communication::libp2p","communication::libp2p::SwarmEvent","","","","communication::libp2p","communication::libp2p::SwarmEvent","","communication::libp2p","","","communication::libp2p::SwarmEvent","","communication::libp2p","communication::libp2p::SwarmEvent","communication::libp2p","communication::actor::connections","","","","","","","","communication::actor::firewall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","communication::actor::swarm_task","","","","","","","","communication::actor::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","communication::actor","","","","","","","","","","","","","","","","","","communication::behaviour::protocol","","","","","","","","","","","","","","","","","","","","communication::behaviour::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","communication::behaviour","","","","","","","","","","","","","","","","","","","","","","","","","","","communication::libp2p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","communication::actor::firewall","communication::actor::types","","","","communication::behaviour::types","","","communication::actor::firewall","","","","","communication::actor::types","","","","","","communication::actor","communication::behaviour::protocol","","communication::behaviour::types","","","","","","","","communication::behaviour","communication::actor::firewall","communication::behaviour::protocol","communication::behaviour","communication::actor::firewall","","","","","","communication::behaviour::types","","","","","","","","","","","","","communication::actor::firewall","","","","","communication::actor::types","","","","","","communication::actor","communication::behaviour::protocol","communication::behaviour::types","","","","","","","","communication::behaviour","","","communication::behaviour::protocol","communication::behaviour","","","","","","","","","","","","","","","","","","","","","","communication::behaviour::protocol","","","","communication::actor","","","","communication::libp2p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Actor","","","","","","","","","Implements the [<code>VariantPermission</code>] for struct/ unions …","The permission value for request variants. It is a  bit …","","Create a new permission value for an index, the value …","","The sum of allowed permissions. This is using the same …","","No values are allowed.","All values are allowed.","Adds a new value to the sum and therefore allows this …","Adds a new value to the sum and therefore allows this …","Remove a certain value from the sum to remove permission.","Remove a certain value from the sum to remove permission.","Check if the sum includes this value i.g. if a certain …","","The permission value for the different variants of an …","","Convert an element to implement permissions.","","The direction of a [<code>CommunicationRequest::RequestMsg</code>] …","Incoming request from a remote peer to the local system.","Outgoing request from the local system to a remote peer.","Configure the firewall.","Set new rules either for specific peers, or the default …","","","","","Add specific permissions for certain peers and optionally …","","","","","Remove specific permissions from certain peers and …","","","","","Remove a rule for a specific peer, which results in using …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Direction for which a relay peer is used.","Use the relay if a peer can not be dialed directly.","Maintain a keep-alive connection to a relay peer that …","Use the peer for Dialing and Listening.","Requests for the [<code>CommunicationActor</code>].","Send a request to a remote peer. This requires that a …","","","Set the actor reference that incoming request are …","Add dialing information for a peer. This will attempt to …","","","","Get information about the swarm with local peer id, …","Ban a peer, which prevents any communication from / to …","Unban a peer to allow future communication.","Start listening to a port on the swarm. If no <code>Multiaddr</code> …","Stop listening locally to the swarm. Without a listener, …","Configure to use a peer as relay for dialing, listening, …","","","Stop using the peer as relay.","Add or remove a rule of the firewall. If a rule for a …","Shutdown communication actor.","","Possible failures occurring in the context of sending an …","Possible failures occurring in the context of receiving …","The request was rejected by the local firewall.","Information about the connection with a remote peer as …","","","","","Returned results from the [<code>CommunicationActor</code>]","Response or Error for an [<code>RequestMsg</code>] to a remote peer","New client actor reference was set.","Result of trying to connect a peer after adding it.","Check if the connection exists.","","","Information about the local swarm.","The local peer id.","The listening addresses of the local system. Not all of …","Established connections.","","","Result of starting a new listener on the swarm. If it was …","Stopped listening to the swarm for incoming connections.","Result for configuring the Relay. Error if the relay …","Successfully removed relay.","Successfully set firewall rule.","Errors that can occur in the context of a pending …","The peer is currently banned.","No addresses for the peer to dial","An error occurred while negotiating the transport …","The peer identity obtained on the connection did not …","The connection was dropped because the connection limit …","An I/O error occurred on the connection.","The connection handler produced an error.","Timout on connection attempt","The address given for dialing is invalid.","The sum of allowed permissions. This is using the same …","","Configure the firewall.","Set new rules either for specific peers, or the default …","","","","","Add specific permissions for certain peers and optionally …","","","","","Remove specific permissions from certain peers and …","","","","","Remove a rule for a specific peer, which results in using …","","","The permission value for request variants. It is a  bit …","","The direction of a [<code>CommunicationRequest::RequestMsg</code>] …","Incoming request from a remote peer to the local system.","Outgoing request from the local system to a remote peer.","Implements the [<code>VariantPermission</code>] for struct/ unions …","Convert an element to implement permissions.","","The permission value for the different variants of an …","","Direction for which a relay peer is used.","Use the relay if a peer can not be dialed directly.","Maintain a keep-alive connection to a relay peer that …","Use the peer for Dialing and Listening.","Requests for the [<code>CommunicationActor</code>].","Send a request to a remote peer. This requires that a …","","","Set the actor reference that incoming request are …","Add dialing information for a peer. This will attempt to …","","","","Get information about the swarm with local peer id, …","Ban a peer, which prevents any communication from / to …","Unban a peer to allow future communication.","Start listening to a port on the swarm. If no <code>Multiaddr</code> …","Stop listening locally to the swarm. Without a listener, …","Configure to use a peer as relay for dialing, listening, …","","","Stop using the peer as relay.","Add or remove a rule of the firewall. If a rule for a …","Shutdown communication actor.","","Possible failures occurring in the context of sending an …","Possible failures occurring in the context of receiving …","The request was rejected by the local firewall.","Information about the connection with a remote peer as …","","","","Returned results from the [<code>CommunicationActor</code>]","Response or Error for an [<code>RequestMsg</code>] to a remote peer","New client actor reference was set.","Result of trying to connect a peer after adding it.","Check if the connection exists.","","","Information about the local swarm.","The local peer id.","The listening addresses of the local system. Not all of …","Established connections.","","","Result of starting a new listener on the swarm. If it was …","Stopped listening to the swarm for incoming connections.","Result for configuring the Relay. Error if the relay …","Successfully removed relay.","Successfully set firewall rule.","Errors that can occur in the context of a pending …","The peer is currently banned.","No addresses for the peer to dial","An error occurred while negotiating the transport …","The peer identity obtained on the connection did not …","The connection was dropped because the connection limit …","An I/O error occurred on the connection.","The connection handler produced an error.","Timout on connection attempt","The address given for dialing is invalid.","The actor configuration","Target client for incoming request","Default restriction for incoming requests.","Default restriction for outgoing requests.","Actor responsible for creating a [<code>P2PNetworkBehaviour</code>] …","","","","","","P2PNetworkBehaviour","","Trait for the generic Request and Response types","Custom protocol that extends libp2ps …","Describes how messages are read from and written to the …","","","","Event that can be produced by the <code>Mdns</code> behaviour.","Discovered nodes through mDNS.","Each discovered record has a time-to-live. When this TTL …","Information of a peer sent in <code>Identify</code> protocol responses.","The public key underlying the peer’s <code>PeerId</code>.","Version of the protocol family used by the peer, e.g. …","Name and version of the peer, similar to the <code>User-Agent</code> …","The addresses that the peer is listening on.","The list of protocols supported by the peer, e.g. …","The address observed by the peer for the local node.","Error that can happen on an outbound substream opening …","The opening attempt timed out before the negotiation was …","There was an error in the timer used.","Error while upgrading the substream to the protocol we …","Event emitted  by the <code>Identify</code> behaviour.","Identifying information has been received from a peer.","","","Identifying information of the local node has been sent …","","Identification information of the local node has been …","The peer that the information has been sent to.","Error while attempting to identify the remote.","","","Possible failures occurring in the context of sending an …","The request could not be sent because a dialing attempt …","The request timed out before a response was received.","The connection closed before a response was received.","The remote supports none of the requested protocols.","Possible failures occurring in the context of receiving an…","The inbound request timed out, either while reading the …","The local peer supports none of the requested protocols.","The local peer failed to respond to an inbound request …","The connection closed before a response could be send.","Event emitted  by the <code>RequestResponse</code> behaviour.","Request Message","","","","Response Message to a received <code>Req</code>.","","","","","","","","","","","","A response to an inbound request has been sent.","","","Event that was emitted by one of the protocols of the …","Events from the libp2p mDNS protocol","Events from the libp2p identify protocol","Events from the custom request-response protocol","Trait for the generic Request and Response types","Event that can be produced by the <code>Mdns</code> behaviour.","Discovered nodes through mDNS.","Each discovered record has a time-to-live. When this TTL …","Information of a peer sent in <code>Identify</code> protocol responses.","The public key underlying the peer’s <code>PeerId</code>.","Version of the protocol family used by the peer, e.g. …","Name and version of the peer, similar to the <code>User-Agent</code> …","The addresses that the peer is listening on.","The list of protocols supported by the peer, e.g. …","The address observed by the peer for the local node.","Error that can happen on an outbound substream opening …","The opening attempt timed out before the negotiation was …","There was an error in the timer used.","Error while upgrading the substream to the protocol we …","Event emitted  by the <code>Identify</code> behaviour.","Identifying information has been received from a peer.","","","Identifying information of the local node has been sent …","","Identification information of the local node has been …","The peer that the information has been sent to.","Error while attempting to identify the remote.","","","Possible failures occurring in the context of sending an …","The request could not be sent because a dialing attempt …","The request timed out before a response was received.","The connection closed before a response was received.","The remote supports none of the requested protocols.","Possible failures occurring in the context of receiving an…","The inbound request timed out, either while reading the …","The local peer supports none of the requested protocols.","The local peer failed to respond to an inbound request …","The connection closed before a response could be send.","Event emitted  by the <code>RequestResponse</code> behaviour.","Request Message","","","","Response Message to a received <code>Req</code>.","","","","","","","","","","","","A response to an inbound request has been sent.","","","Event that was emitted by one of the protocols of the …","Events from the libp2p mDNS protocol","Events from the libp2p identify protocol","Events from the custom request-response protocol","Error upon creating a new [<code>P2PNetworkBehaviour</code>]","Error on the transport layer","Error on upgrading the transport with noise authentication","Error creating new mDNS behaviour","Configuration for initiating the [<code>P2PNetworkBehaviour</code>].","Timeout for outgoing requests until a […","Duration to keep an idle connection alive when no Request …","TTL to use for mDNS record","Frequency for new peers via mDNS","","The [<code>P2PNetworkBehaviour</code>] determines the behaviour of the …","","","","","","","","Creates a new [<code>P2PNetworkBehaviour</code>] and returns the swarm …","","","","","","","Get the peers discovered by mdns","","","Re-export [<code>libp2p</code>] types.","Information about a connection limit.","The maximum number of connections.","The current number of connections.","Identity keypair of a node.","An Ed25519 keypair.","An RSA keypair.","A Secp256k1 keypair.","<code>Protocol</code> describes all possible multiaddress protocols.","","","","","","","","","","","","","Contains the “port” to contact. Similar to TCP or …","","","","","","","","","","","","","","The endpoint roles associated with a peer-to-peer …","We dialed the node.","Multiaddress that was successfully dialed.","We received the node.","Local connection address.","Stack of protocols used to send back data to the remote.","Representation of a Multiaddr.","","Identifier of a peer of the network.","","Contains the state of the network, plus the way it should …","Event generated by the <code>Swarm</code>.","Event generated by the <code>NetworkBehaviour</code>.","A connection to the given peer has been opened.","Identity of the peer that we have connected to.","Endpoint of the connection that has been opened.","Number of established connections to this peer, including …","A connection with the given peer has been closed, …","Identity of the peer that we have connected to.","Endpoint of the connection that has been closed.","Number of other remaining connections to this same peer.","Reason for the disconnection, if it was not a successful …","A new connection arrived on a listener and is in the …","Local connection address. This address has been earlier …","Address used to send back data to the remote.","An error happened on a connection during its initial …","Local connection address. This address has been earlier …","Address used to send back data to the remote.","The error that happened.","We connected to a peer, but we immediately closed the …","Identity of the banned peer.","Endpoint of the connection that has been closed.","Tried to dial an address but it ended up being …","<code>PeerId</code> that we were trying to reach.","Address that we failed to reach.","Error that has been encountered.","Number of remaining connection attempts that are being …","Tried to dial an address but it ended up being …","Address that we failed to reach.","Error that has been encountered.","One of our listeners has reported a new local listening …","One of our listeners has reported the expiration of a …","One of the listeners gracefully closed.","The addresses that the listener was listening on. These …","Reason for the closure. Contains <code>Ok(())</code> if the stream …","One of the listeners reported a non-fatal error.","The listener error.","A new dialing attempt has been initiatedonvert a Multiaddr to a string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate a new Ed25519 keypair.","Generate a new Secp256k1 keypair.","Decode an keypair from a DER-encoded secret key in PKCS#8 …","Decode a keypair from a DER-encoded Secp256k1 secret key …","Sign a message using the private key of this keypair, …","Get the public key of this keypair.","Parse a protocol value from the given iterator of string …","Parse a single <code>Protocol</code> value from its byte slice …","Encode this protocol by writing its binary representation …","Turn this <code>Protocol</code> into one that owns its data, thus …","Turns the <code>ConnectedPoint</code> into the corresponding <code>Endpoint</code>.","Returns true if we are <code>Dialer</code>.","Returns true if we are <code>Listener</code>.","Returns the address of the remote stored in this struct.","Modifies the address of the remote stored in this struct.","Create a new, empty multiaddress.","Create a new, empty multiaddress with the given capacity.","Return the length in bytes of this multiaddress.","Returns true if the length of this multiaddress is 0.","Return a copy of this [<code>Multiaddr</code>]’s byte representation.","Adds an already-parsed address component to the end of …","Pops the last <code>Protocol</code> of this multiaddr, or <code>None</code> if the …","Like [<code>Multiaddr::push</code>] but consumes <code>self</code>.","Returns the components of this multiaddress.","Replace a [<code>Protocol</code>] at some position in this <code>Multiaddr</code>.","Checks whether the given <code>Multiaddr</code> is a suffix of this …","Builds a <code>PeerId</code> from a public key.","Parses a <code>PeerId</code> from bytes.","Tries to turn a <code>Multihash</code> into a <code>PeerId</code>.","Generates a random peer ID from a cryptographically …","Returns a raw bytes representation of this <code>PeerId</code>.","Returns a base-58 encoded string of this <code>PeerId</code>.","Checks whether the public key passed as parameter matches …"],"i":[0,0,0,1,1,1,1,1,0,0,0,2,2,2,0,3,3,3,3,3,3,3,3,3,0,4,0,5,0,6,6,0,7,8,8,8,8,7,9,9,9,9,7,10,10,10,10,7,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,14,14,14,0,15,16,16,15,15,17,17,17,15,15,15,15,15,15,18,18,15,15,15,0,19,19,19,0,20,20,20,20,0,21,21,21,21,22,22,21,23,23,23,21,21,21,21,21,21,21,0,24,24,24,24,24,24,24,24,24,0,3,0,7,8,8,8,8,7,9,9,9,9,7,10,10,10,10,7,11,11,0,2,0,6,6,0,0,5,0,4,0,14,14,14,0,15,16,16,15,15,17,17,17,15,15,15,15,15,15,18,18,15,15,15,0,19,19,19,0,20,20,20,0,21,21,21,21,22,22,21,23,23,23,21,21,21,21,21,21,21,0,24,24,24,24,24,24,24,24,24,0,25,25,25,0,26,26,26,26,26,0,0,0,0,0,27,27,0,0,28,28,0,29,29,29,29,29,29,0,30,30,30,0,31,32,32,31,33,31,34,31,35,35,0,36,36,36,36,0,37,37,37,37,0,38,39,39,39,38,40,40,40,38,41,41,41,38,42,42,42,38,43,43,0,44,44,44,0,0,28,28,0,29,29,29,29,29,29,0,30,30,30,0,31,32,32,31,33,31,34,31,35,35,0,36,36,36,36,0,37,37,37,37,0,38,39,39,39,38,40,40,40,38,41,41,41,38,42,42,42,38,43,43,0,44,44,44,0,45,45,45,0,46,46,46,46,46,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,48,48,0,49,49,49,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,51,52,51,53,53,0,54,0,55,0,0,56,56,57,57,57,56,58,58,58,58,56,59,59,56,60,60,60,56,61,61,56,62,62,62,62,56,63,63,56,56,56,64,64,56,65,56,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,66,66,66,66,66,66,66,66,66,66,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,51,51,54,54,54,54,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,54,54,54,54,54,54,50,54,50,50,54,54,50,50,54,54,54,50,50,54,54,54,54,54,54,50,54,54,55,51,55,48,55,55,55,55,55,55,51,48,55,55,51,51,55,55,51,48,49,55,56,3,24,24,24,24,44,44,44,2,3,6,7,12,14,15,19,20,21,24,25,66,27,28,29,30,31,36,37,38,44,46,12,27,46,2,2,2,3,3,3,28,28,29,29,30,31,31,36,37,38,38,44,44,2,3,6,7,12,14,15,19,20,21,24,25,66,28,29,30,31,36,37,38,44,45,46,45,66,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,27,27,27,27,26,26,26,26,49,49,49,49,49,49,50,50,50,50,51,51,51,51,51,54,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55],"f":[null,null,null,null,[[]],[[],["vec",3]],[[["relaydirection",4],["option",4],["connectedpoint",4],["peerid",3]]],[[["peerid",3]]],null,null,null,null,[[["u8",15]],["option",4]],[[],["u32",15]],null,null,[[]],[[]],[[["permissionvalue",3]]],[[]],[[["permissionvalue",3]]],[[]],[[["permissionvalue",3]],["bool",15]],[[],["u32",15]],null,[[],["permissionvalue",3]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["firewallpermission",3]],["firewallconfiguration",3]],[[["requestdirection",4]],["firewallpermission",3]],[[["firewallpermission",3],["requestdirection",4]]],[[["peerid",3],["requestdirection",4]],["bool",15]],[[["peerid",3],["requestdirection",4]],[["option",4],["firewallpermission",3]]],[[["requestdirection",4],["firewallpermission",3],["peerid",3]]],[[["peerid",3],["requestdirection",4]]],[[["peerid",3],["requestdirection",4]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["communicationactorconfig",3],["keypair",4],["behaviourconfig",3],["actorsystem",3],["unboundedreceiver",3]]],[[]],[[]],[[["sender",6],["communicationresults",4]]],[[["duration",3],["fn",8]],["option",4]],[[["multiaddr",3],["option",4]],["result",4]],[[["multiaddr",3],["listenerid",3]],["result",4]],[[["peerid",3],["option",4]],[["result",4],["connectedpoint",4],["connectpeererror",4]]],[[["peerid",3],["multiaddr",3]],[["result",4],["connectedpoint",4],["connectpeererror",4]]],[[["peerid",3]],[["result",4],["connectedpoint",4],["connectpeererror",4]]],[[["multiaddr",3],["option",4],["relaydirection",4],["option",4],["peerid",3]],[["peerid",3],["connectpeererror",4],["result",4]]],[[["peerid",3]],[["result",4],["requestmessageerror",4]]],[[["peerid",3]],[["peerid",3],["connectpeererror",4],["result",4]]],[[["relaydirection",4],["peerid",3]],[["peerid",3],["connectpeererror",4],["result",4]]],[[["peerid",3]]],[[["peerid",3],["vec",3],["permissionvalue",3],["bool",15],["vec",3],["requestdirection",4]]],[[["firewallrule",4]]],[[["sender",6],["communicationrequest",4]]],[[],["option",4]],[[["requestid",3],["peerid",3]]],[[["swarmevent",4],["p2pevent",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["option",4],["connectedpoint",4],["relaydirection",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[],["permissionvalue",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["sender",6],["communicationrequest",4]],[["result",4],["senderror",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["option",4],["duration",3]]],null,null,null,null,null,null,null,null,[[["keypair",4],["behaviourconfig",3]]],[[["context",3]],[["networkbehaviouraction",4],["poll",4]]],[[["multiaddr",3],["peerid",3]]],[[["peerid",3],["multiaddr",3]]],[[["peerid",3]],[["option",4],["vec",3]]],[[["peerid",3]],[["option",4],["vec",3]]],[[],[["vec",3],["peerid",3]]],[[],[["vec",3],["peerid",3]]],[[["peerid",3]],["requestid",3]],[[["requestid",3]],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["u64",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["u64",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["u64",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],[["result",4],["multiaddr",3]]],[[]],[[]],[[["ipaddr",4]],["multiaddr",3]],[[["ipv4addr",3]],["multiaddr",3]],[[["ipv6addr",3]],["multiaddr",3]],[[["ipv4addr",3]],["protocol",4]],[[["protocol",4]],["multiaddr",3]],[[["ipv6addr",3]],["protocol",4]],[[["ipaddr",4]],["protocol",4]],[[["multiaddr",3]],["bool",15]],[[["multiaddr",3]],["bool",15]],[[["protocol",4]],["bool",15]],[[["protocol",4]],["bool",15]],[[["multiaddr",3]],["ordering",4]],[[["str",15]],[["result",4],["error",4],["multiaddr",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["protocol",4]],[[],["multiaddr",3]],[[["str",15]],[["result",4],["error",4],["multiaddr",3]]],[[["string",3]],[["result",4],["error",4],["multiaddr",3]]],[[["global",3],["vec",3],["u8",15]],[["result",4],["error",4],["multiaddr",3]]],[[],["result",4]],[[["multiaddr",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["multiaddr",3]],[[]],[[]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["peerid",3]],["ordering",4]],[[["multihash",3],["uint",3]],[["result",4],["peerid",3]]],[[["global",3],["vec",3],["u8",15]],[["peerid",3],["result",4]]],[[],["multihash",3]],[[["publickey",4]],["peerid",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["peerid",3]],["bool",15]],[[["peerid",3]],["bool",15]],[[["connectedpoint",4]],["bool",15]],[[["connectedpoint",4]],["bool",15]],[[["str",15]],[["peerid",3],["result",4]]],[[],["peerid",3]],[[],["connectedpoint",4]],[[],["connectionlimit",3]],[[],["keypair",4]],[[["peerid",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["u32",15]]],[[["pendingconnectionerror",4]]],[[["pendingconnectionerror",4]]],[[["dialerror",4]]],[[["connectionerror",4]]],[[["mdnsevent",4]],["p2pevent",4]],[[["identifyevent",4]],["p2pevent",4]],[[["requestresponseevent",4]],["p2pevent",4]],[[],["permissionvalue",3]],[[],["firewallpermission",3]],[[],["requestdirection",4]],[[],["firewallrule",4]],[[],["firewallconfiguration",3]],[[],["relaydirection",4]],[[],["communicationrequest",4]],[[],["requestmessageerror",4]],[[],["establishedconnection",3]],[[],["communicationresults",4]],[[],["connectpeererror",4]],[[],["communicationactorconfig",3]],[[],["messageprotocol",3]],[[],["messagecodec",3]],[[],["p2pmdnsevent",4]],[[],["p2pidentifyinfo",3]],[[],["p2pprotocolshandlerupgrerr",4]],[[],["p2pidentifyevent",4]],[[],["p2poutboundfailure",4]],[[],["p2pinboundfailure",4]],[[],["p2preqresevent",4]],[[],["p2pevent",4]],[[],["behaviourconfig",3]],[[]],[[]],[[]],[[["permissionvalue",3]],["bool",15]],[[["permissionvalue",3]],["bool",15]],[[["u32",15]],["bool",15]],[[["firewallpermission",3]],["bool",15]],[[["firewallpermission",3]],["bool",15]],[[["u32",15]],["bool",15]],[[["p2pmdnsevent",4]],["bool",15]],[[["p2pmdnsevent",4]],["bool",15]],[[["p2pidentifyinfo",3]],["bool",15]],[[["p2pidentifyinfo",3]],["bool",15]],[[["p2pprotocolshandlerupgrerr",4]],["bool",15]],[[["p2pidentifyevent",4]],["bool",15]],[[["p2pidentifyevent",4]],["bool",15]],[[["p2poutboundfailure",4]],["bool",15]],[[["p2pinboundfailure",4]],["bool",15]],[[["p2preqresevent",4]],["bool",15]],[[["p2preqresevent",4]],["bool",15]],[[["p2pevent",4]],["bool",15]],[[["p2pevent",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["peerid",3]],[["multiaddr",3],["vec",3]]],[[["peerid",3]]],[[["peerid",3]]],[[["peerid",3],["connectedpoint",4],["connectionid",3]]],[[["connectedpoint",4],["connectionid",3],["peerid",3]]],[[["peerid",3],["connectedpoint",4],["connectionid",3]]],[[["peerid",3],["option",4],["multiaddr",3],["error",8]]],[[["peerid",3]]],[[["listenerid",3]]],[[["listenerid",3],["multiaddr",3]]],[[["listenerid",3],["multiaddr",3]]],[[["multiaddr",3]]],[[["multiaddr",3]]],[[["listenerid",3],["error",8]]],[[["listenerid",3],["error",3],["result",4]]],[[["peerid",3],["connectionid",3]]],[[["context",3]],[["poll",4],["networkbehaviouraction",4]]],[[["mdnsevent",4]]],[[["requestresponseevent",4]]],[[["identifyevent",4]]],[[]],[[["messageprotocol",3]],[["pin",3],["box",3]]],[[["messageprotocol",3]],[["pin",3],["box",3]]],[[["messageprotocol",3]],[["box",3],["pin",3]]],[[["messageprotocol",3]],[["box",3],["pin",3]]],[[]],[[["context",3]]],[[]],[[["context",3],["sender",6]]],[[],["keypair",4]],[[],["keypair",4]],[[],[["decodingerror",3],["result",4],["keypair",4]]],[[],[["decodingerror",3],["result",4],["keypair",4]]],[[],[["vec",3],["signingerror",3],["result",4]]],[[],["publickey",4]],[[],[["error",4],["result",4],["protocol",4]]],[[],[["result",4],["error",4]]],[[],[["result",4],["error",4]]],[[],["protocol",4]],[[],["endpoint",4]],[[],["bool",15]],[[],["bool",15]],[[],["multiaddr",3]],[[["multiaddr",3]]],[[],["multiaddr",3]],[[["usize",15]],["multiaddr",3]],[[],["usize",15]],[[],["bool",15]],[[],[["u8",15],["global",3],["vec",3]]],[[["protocol",4]]],[[],[["option",4],["protocol",4]]],[[["protocol",4]],["multiaddr",3]],[[],["iter",3]],[[["usize",15]],[["multiaddr",3],["option",4]]],[[["multiaddr",3]],["bool",15]],[[["publickey",4]],["peerid",3]],[[],[["error",4],["peerid",3],["result",4]]],[[["multihash",3],["uint",3]],[["result",4],["peerid",3],["multihash",3]]],[[],["peerid",3]],[[],[["u8",15],["global",3],["vec",3]]],[[],["string",3]],[[["publickey",4]],[["bool",15],["option",4]]]],"p":[[3,"ConnectionManager"],[3,"PermissionValue"],[3,"FirewallPermission"],[8,"VariantPermission"],[8,"ToPermissionVariants"],[4,"RequestDirection"],[4,"FirewallRule"],[13,"SetRules"],[13,"AddPermissions"],[13,"RemovePermissions"],[13,"RemoveRule"],[3,"FirewallConfiguration"],[3,"SwarmTask"],[4,"RelayDirection"],[4,"CommunicationRequest"],[13,"RequestMsg"],[13,"AddPeer"],[13,"ConfigRelay"],[4,"RequestMessageError"],[3,"EstablishedConnection"],[4,"CommunicationResults"],[13,"CheckConnectionResult"],[13,"SwarmInfo"],[4,"ConnectPeerError"],[3,"CommunicationActorConfig"],[3,"CommunicationActor"],[3,"MessageCodec"],[4,"P2PMdnsEvent"],[3,"P2PIdentifyInfo"],[4,"P2PProtocolsHandlerUpgrErr"],[4,"P2PIdentifyEvent"],[13,"Received"],[13,"Sent"],[13,"Pushed"],[13,"Error"],[4,"P2POutboundFailure"],[4,"P2PInboundFailure"],[4,"P2PReqResEvent"],[13,"Req"],[13,"Res"],[13,"InboundFailure"],[13,"OutboundFailure"],[13,"ResSent"],[4,"P2PEvent"],[4,"BehaviourError"],[3,"BehaviourConfig"],[3,"P2PNetworkBehaviour"],[3,"ConnectionLimit"],[4,"Keypair"],[4,"Protocol"],[4,"ConnectedPoint"],[13,"Dialer"],[13,"Listener"],[3,"Multiaddr"],[3,"PeerId"],[4,"SwarmEvent"],[13,"ConnectionEstablished"],[13,"ConnectionClosed"],[13,"IncomingConnection"],[13,"IncomingConnectionError"],[13,"BannedPeer"],[13,"UnreachableAddr"],[13,"UnknownPeerUnreachableAddr"],[13,"ListenerClosed"],[13,"ListenerError"],[3,"MessageProtocol"]]},\
"engine":{"doc":"A system for securely managing secrets.","t":[0,0,0,5,5,3,12,12,12,11,11,11,11,11,11,11,11,11,0,17,5,5,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,3,12,12,3,12,12,0,5,5,5,5,0,5,0,17,17,17,6,17,6,5,5,5,5,5,5,5,5,17,17,6,6,5,5,5,5,0,0,0,0,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,3,12,12,11,11,3,12,12,12,12,0,0,3,18,11,11,11,11,8,10,8,10,0,8,10,10,10,10,10,11,3,12,12,11,11,11,8,11,8,11,0,0,4,13,13,11,3,12,3,12,12,3,12,12,12,12,12,8,10,3,12,12,11,11,11,11,17,3,12,3,12,0,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,8,11,0,3,12,3,12,12,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,8,10,8,10,10,10,10,10,11,8,11,8,11,3,12,12,3,12,3,12,3,12,3,12,3,12,3,12,7,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["snapshot","compression","decoder","decompress_into","decompress","Lz4Decoder","input","output","token","take","take_internal","output","duplicate","read_int","read_u16","read_literal","read_duplicate","complete","encoder","DICT_SIZE","compress_into","compress","Lz4Encoder","input","output","cursor","dict","step_forward","insert_cursor","remaining","get_cursor_hash","get","get_at_cursor","find_duplicate","write_int","pop_block","complete","Block","literal_length","duplicates","Duplicate","offset","padding","files","home_dir","snapshot_dir","verify_or_create","get_path","kdf","naive_kdf","logic","MAGIC","VERSION","KEY_SIZE","Key","NONCE_SIZE","Nonce","write","read","write_to","read_from","check_min_file_len","check_header","compress","decompress","MAGIC","VERSION","Key","Nonce","write","read","write_to","read_from","store","macros","storage","cache","Cache","table","scan_freq","created_at","last_scan_at","new","create_with_scanner","get","get_or_insert","insert","remove","contains_key","get_last_scanned_at","get_scan_freq","clear","try_remove_expired_items","Value","val","expiration","new","has_expired","Cache","table","scan_freq","created_at","last_scan_at","vault","base64","Base64","PADDING","encode_data","decode_data","encode_byte","decode_byte","Base64Encodable","base64","Base64Decodable","from_base64","crypto_box","BoxProvider","box_key_len","box_overhead","box_seal","box_open","random_buf","random_vec","Key","key","_box_provider","random","load","bytes","Encrypt","encrypt","Decrypt","decrypt","types","transactions","TransactionType","Data","Revocation","val","Transaction","0","UntypedTransaction","type_id","id","DataTransaction","type_id","len","id","blob","record_hint","TypedTransaction","type_id","RevocationTransaction","type_id","id","new","new","untyped","typed","TRANSACTION_MAX_BYTES","SealedTransaction","0","SealedBlob","0","utils","RecordHint","0","RecordId","0","ClientId","0","VaultId","0","ChainId","0","Id","0","TransactionId","0","BlobId","0","Val","0","new","u64","random","load","random","load","random","random","load","random","load","random","load","random","load","AsView","view","AsViewMut","view_mut","view","DbView","vaults","Vault","key","entries","Record","id","data","revoke","blob","new","init_vault","write","list_hints_and_ids","contains_record","get_guard","exec_proc","revoke_record","garbage_collect_vault","clear","init_vault","add_or_update_record","list_hints_and_ids","contains_record","revoke","get_guard","garbage_collect","new","get_hint_and_id","check_id","get_blob","update","revoke","Base64Decodable","from_base64","Base64Encodable","base64","BoxProvider","box_key_len","box_overhead","box_seal","box_open","random_buf","random_vec","Decrypt","decrypt","Encrypt","encrypt","Key","key","_box_provider","ChainId","0","ClientId","0","Id","0","RecordHint","0","RecordId","0","VaultId","0","ALLOC","Error","IoError","SnapshotError","CryptoError","Lz4Error","TryIntoError","DatabaseError","VersionError","ChainError","Base64Error","Base64ErrorDetailed","InterfaceError","OtherError","ProviderError","ValueError","ProtocolError","Result","cache","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","encode_hex","encode_hex_upper","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","encode_hex","encode_hex_upper","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","encode_hex","encode_hex_upper","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","encode_hex","encode_hex_upper","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","encode_hex","encode_hex_upper","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","encode_hex","encode_hex_upper","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","encode_hex","encode_hex_upper","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","encode_hex","encode_hex_upper","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","encode_hex","encode_hex_upper","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","encode_hex","encode_hex_upper","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","type_id","type_id","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","from","from","from","from","from","from","from","from","from","into","into","into","into","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","add","add_assign","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","source","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize"],"q":["engine","engine::snapshot","engine::snapshot::compression","engine::snapshot::compression::decoder","","","","","","","","","","","","","","","engine::snapshot::compression","engine::snapshot::compression::encoder","","","","","","","","","","","","","","","","","","engine::snapshot::compression","","","","","","engine::snapshot","engine::snapshot::files","","","","engine::snapshot","engine::snapshot::kdf","engine::snapshot","engine::snapshot::logic","","","","","","","","","","","","engine::snapshot","","","","","","","","","","engine","engine::store","","engine::store::storage","engine::store::storage::cache","","","","","","","","","","","","","","","","engine::store::storage","","","","","engine::store","","","","","engine","engine::vault","engine::vault::base64","","","","","","","","","","engine::vault","engine::vault::crypto_box","","","","","","","","","","","","","","","","","engine::vault","engine::vault::types","engine::vault::types::transactions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","engine::vault::types","engine::vault::types::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","engine::vault::types","","","","engine::vault","engine::vault::view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","engine::vault","","","","","","","","","","engine::vault::crypto_box","engine::vault","engine::vault::crypto_box","engine::vault","engine::vault::crypto_box","engine::vault","","","","","","","","","","","","","","","engine","","","","","","","","","","","","","","","","","","","engine::snapshot::compression::decoder","","","","","","","engine::snapshot::compression::encoder","","","","","","","engine::snapshot::compression","","","","","","","","","","","","","","","","engine::store::storage::cache","","","","","","","","","engine::store::storage","","","","","","","","","engine::vault::base64","","","","","","","engine::vault::crypto_box","","","","","","","","","engine::vault::types::transactions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","engine::vault::types::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","engine::vault::view","","","","","","","","","","","","","","","","","","","","","","","","","","","engine","","","","","","","","engine::vault::types::transactions","","","","","","","","engine::vault::types::utils","","","","","","","engine::vault::types::transactions","","","","engine::vault::types::utils","","engine","","","engine::vault::types::utils","","","","engine::snapshot::compression","engine::store::storage::cache","engine::store::storage","engine::vault::crypto_box","engine::vault::types::transactions","","","","engine::vault::types::utils","","","","","","","","","engine::vault::view","","","engine::store::storage::cache","engine::vault::types::transactions","engine::vault::types::utils","","engine::vault::view","engine::vault::crypto_box","engine::vault::types::transactions","engine::vault::types::utils","","","","","","","","","engine::vault::crypto_box","engine::vault::types::transactions","","","engine::vault::types::utils","","","","","","","","","","","","","","","","","","engine::vault::crypto_box","engine::vault::types::transactions","engine::vault::types::utils","","","","","","","","","engine::snapshot::compression","","engine::store::storage::cache","engine::store::storage","engine::vault::crypto_box","engine::vault::types::transactions","","","","","engine::vault::types::utils","","","","","","","","","engine","engine::vault::types::utils","engine","engine::vault::types::utils","","engine::vault::crypto_box","engine::vault::types::transactions","","engine::vault::types::utils","","","","","","","","","engine::vault::types::transactions","","engine::vault::types::utils","","","","","","","","","","","","engine","engine::store::storage::cache","engine::store::storage","engine::vault::crypto_box","engine::vault::types::transactions","","","engine::vault::types::utils","","","","","","","","engine::vault::view","","","engine::store::storage::cache","engine::store::storage","engine::vault::crypto_box","engine::vault::types::transactions","","","engine::vault::types::utils","","","","","","","","engine::vault::view","",""],"d":["This crate defines and implements the encrypted offline …","","","","Decompress data using an LZ4 Algorithm.","","","","","","","","","","","","","","","","","Compress data using an LZ4 Algorithm.","","","","","","","","","","","","","","","","","","","","","","","Get the preferred Stronghold home directory","Get the preferred snapshot directory","","Construct the path to a snapshot file with the specifed …","","a wrapper around the <code>HMAC_SHA256</code> function used to derive …","","Magic bytes (bytes 0-4 in a snapshot file)","Current version bytes (bytes 5-6 in a snapshot file)","","","","","Encrypt the opaque plaintext bytestring using the …","Read ciphertext from the input, decrypts it using the …","Atomically encrypt and <code>write</code> the specified plaintext to …","<code>read</code> and decrypt the ciphertext from the specified path","","","Compress data using an LZ4 Algorithm.","Decompress data using an LZ4 Algorithm.","Magic bytes (bytes 0-4 in a snapshot file)","Current version bytes (bytes 5-6 in a snapshot file)","","","Encrypt the opaque plaintext bytestring using the …","Read ciphertext from the input, decrypts it using the …","Atomically encrypt and <code>write</code> the specified plaintext to …","<code>read</code> and decrypt the ciphertext from the specified path","This crate contains a key/value cache for the stronghold …","","","","The cache struct used to store the data in an ordered …","","","","","creates a new empty <code>Cache</code>","creates an empty <code>Cache</code> with a periodic scanner which …","Gets the value associated with the specified key.","Gets the value associated with the specified key.  If the …","Insert a key-value pair into the cache. If key was not …","Removes a key from the cache.  Returns the value from the …","","","Get the cache’s scan frequency.","Clear the stored cache and reset.","attempts to remove expired items based on the current …","The general value used for the Store.","","","","","The cache struct used to store the data in an ordered …","","","","","Vault is an in-memory database specification which is …","","","base64 padding character","encode <code>data</code> using a base64 uri-safe character set.","decode data from base64 based off of the URI safe …","encode a single byte","decode a single byte","a trait to make types base64 encodable","","a trait to make types base64 decodable","","","A provider interface between the vault and a crypto box. …","function for the key length of the crypto box","gets the crypto box’s overhead","seals some data into the crypto box using the <code>key</code> and the …","opens a crypto box to get data using the <code>key</code> and the <code>ad</code>.","fills a buffer <code>buf</code> with secure random bytes.","creates a vector with secure random bytes based off of an …","A key to the crypto box.  Key is stored on the heap which …","the guarded raw bytes that make up the key","","generate a random key using secure random bytes","attempts to load a key from inputted data","get the key’s bytes","trait for encryptable data. Allows the data to be …","encrypts a raw data and creates a type T from the …","Trait for decryptable data.  Allows the data to be …","decrypts raw data and creates a new type T from the …","","","generic transaction type enum","","","convert transaction type into its associated number value.","a generic transaction (untyped)","","untyped transaction view","transaction type","id identifer","a data transaction","transaction type","Length of the unencrypted blob data","id identifer","the blob identifier for the data referred to by this …","a record hint","a typed transaction","","a revocation transaction","transaction type","id identifer","create a new data transaction.","create a new revocation transaction.","","","","a sealed transaction","","a sealed blob","","","a record hint.  Used as a hint to what this data is.","","A record identifier.  Contains a ChainID which refers to …","","Client Id type used to identify a client.","","Vault Id type used to identify a vault.","","A chain identifier.  Used to identify a set of …","","A generic Id type used as the underlying type for the …","","A transaction identifier","","A blob identifier","","a big endian encoded number","","create a new random Id for hint","","","","","","","","load record_id from data","Create a new random <code>Id</code>.","Load an <code>Id</code> from some data.","Create a new random <code>VaultId</code>.","Load a <code>VaultId</code> from some data.","Create a new random <code>ClientId</code>.","Load a <code>ClientId</code> from some data.","a view over raw data.","creates a view over <code>self</code>.","a mutable view over raw data.","creates a mutable view over <code>self</code>.","","A view over the data inside of the Stronghold database.","","A enclave of data that is encrypted under one key.","","","A bit of data inside of a Vault.","","","","","Create a new Database View.","Initialize a new vault if it doesn’t exist.","Write a new record to the Vault.","Lists all of the hints and ids for the given vault.","Check to see if vault contains a specific record id.","execute a procedure on the guarded record data.","","mark a record as revoked.","Garbage collect a vault.","","","Adds a new entry to the vault if the entry doesn’t …","List the hints and ids of the specified vault.","","Revokes an entry by its chain id.  Does nothing if the …","","Sorts through all of the vault entries and garbage …","","Get the id and record hint for this record.","Check to see if a record id is in this vault.","Get the blob from this entry.","Update the data in an existing entry.","","a trait to make types base64 decodable","","a trait to make types base64 encodable","","A provider interface between the vault and a crypto box. …","function for the key length of the crypto box","gets the crypto box’s overhead","seals some data into the crypto box using the <code>key</code> and the …","opens a crypto box to get data using the <code>key</code> and the <code>ad</code>.","fills a buffer <code>buf</code> with secure random bytes.","creates a vector with secure random bytes based off of an …","Trait for decryptable data.  Allows the data to be …","decrypts raw data and creates a new type T from the …","trait for encryptable data. Allows the data to be …","encrypts a raw data and creates a type T from the …","A key to the crypto box.  Key is stored on the heap which …","the guarded raw bytes that make up the key","","A chain identifier.  Used to identify a set of …","","Client Id type used to identify a client.","","A generic Id type used as the underlying type for the …","","a record hint.  Used as a hint to what this data is.","","A record identifier.  Contains a ChainID which refers to …","","Vault Id type used to identify a vault.","","A Zeroing Allocator which wraps the standard memory …","","","","","","","","","","","","","","","","","","A macro for defining functions whose return values will …i":[0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,6,0,5,5,5,5,0,0,0,7,7,7,7,7,0,8,0,9,0,0,10,10,10,10,10,10,0,11,11,11,11,11,0,12,0,13,0,0,0,14,14,14,0,15,0,16,16,0,17,17,17,17,17,0,18,0,19,19,17,19,15,15,0,0,20,0,21,0,0,22,0,23,0,24,0,25,0,26,0,27,0,28,0,29,0,30,22,30,26,26,28,28,29,23,23,27,27,25,25,24,24,0,31,0,32,0,0,33,0,34,34,0,35,35,35,35,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,35,35,35,35,35,35,0,9,0,8,0,10,10,10,10,10,10,0,13,0,12,0,11,11,0,26,0,24,0,27,0,22,0,23,0,25,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,11,11,11,11,11,11,11,11,11,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,17,19,15,20,21,15,20,21,22,26,28,29,27,25,24,20,20,21,21,22,30,36,36,36,25,24,24,25,4,5,6,11,14,15,20,21,22,23,24,25,26,27,28,29,30,33,34,35,5,15,24,27,33,11,14,22,23,24,25,26,27,28,29,30,11,14,15,15,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,11,14,22,23,24,25,26,27,28,29,30,3,4,5,6,11,14,15,16,17,19,22,30,26,28,29,23,27,24,25,36,23,36,30,30,11,14,15,22,23,24,25,26,27,28,29,30,14,15,26,26,28,29,23,23,27,27,24,24,25,25,36,5,6,11,15,20,21,22,23,24,25,26,27,28,29,33,34,35,5,6,11,15,20,21,22,23,24,25,26,27,28,29,33,34,35],"f":[null,null,null,[[["vec",3]],["result",6]],[[],[["result",6],["vec",3]]],null,null,null,null,[[["usize",15]],["result",6]],[[["usize",15]],["result",6]],[[["vec",3]]],[[["usize",15]]],[[],[["usize",15],["result",6]]],[[],[["u16",15],["result",6]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],null,null,[[["vec",3]]],[[],[["vec",3],["u8",15]]],null,null,null,null,null,[[["usize",15]],["bool",15]],[[]],[[],["bool",15]],[[],["usize",15]],[[["usize",15]],["u32",15]],[[],["u32",15]],[[],[["option",4],["duplicate",3]]],[[["usize",15]]],[[],["block",3]],[[]],null,null,null,null,null,null,null,[[],[["pathbuf",3],["result",6]]],[[],[["pathbuf",3],["result",6]]],[[["path",3]],["result",6]],[[["option",4],["str",15]],[["pathbuf",3],["result",6]]],null,[[],["result",6]],null,null,null,null,null,null,null,[[["key",6]],["result",6]],[[["key",6]],[["result",6],["vec",3]]],[[["key",6],["path",3]],["result",6]],[[["key",6],["path",3]],[["result",6],["vec",3]]],[[["file",3]],["result",6]],[[],["result",6]],[[],[["vec",3],["u8",15]]],[[],[["result",6],["vec",3]]],null,null,null,null,[[["key",6]],["result",6]],[[["key",6]],[["result",6],["vec",3]]],[[["key",6],["path",3]],["result",6]],[[["key",6],["path",3]],[["result",6],["vec",3]]],null,null,null,null,null,null,null,null,null,[[]],[[["duration",3]]],[[],["option",4]],[[["duration",3],["option",4]]],[[["duration",3],["option",4]],["option",4]],[[],["option",4]],[[],["bool",15]],[[],[["option",4],["systemtime",3]]],[[],[["duration",3],["option",4]]],[[]],[[["systemtime",3]]],null,null,null,[[["duration",3],["option",4]]],[[["systemtime",3]],["bool",15]],null,null,null,null,null,null,null,null,null,[[],["string",3]],[[],[["result",6],["vec",3]]],[[["usize",15]],["u8",15]],[[["u8",15]],[["usize",15],["result",6]]],null,[[],["string",3]],null,[[],["result",6]],null,null,[[],["usize",15]],[[],["usize",15]],[[["key",3]],[["result",6],["vec",3]]],[[["key",3]],[["result",6],["vec",3]]],[[],["result",6]],[[["usize",15]],[["result",6],["vec",3]]],null,null,null,[[],["result",6]],[[["vec",3],["u8",15]],["result",6]],[[],[["vec",3],["u8",15]]],null,[[["asref",8],["key",3]],["result",6]],null,[[["asref",8],["key",3]],["result",6]],null,null,null,null,null,[[],["val",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["val",3]],null,null,null,[[["chainid",3],["u64",15],["recordhint",3],["blobid",3]],["transaction",3]],[[["chainid",3]],["transaction",3]],[[],["untypedtransaction",3]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",6]],[[],["u64",15]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],null,[[]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["dbview",3]],[[["key",3],["vaultid",3]],["result",6]],[[["key",3],["recordhint",3],["vaultid",3],["recordid",3]],["result",6]],[[["key",3],["vaultid",3]],["vec",3]],[[["key",3],["vaultid",3],["recordid",3]],["bool",15]],[[["key",3],["vaultid",3],["recordid",3]],["result",6]],[[["key",3],["recordhint",3],["vaultid",3],["recordid",3]],["result",6]],[[["key",3],["vaultid",3],["recordid",3]],["result",6]],[[["key",3],["vaultid",3]],["result",6]],[[],["result",6]],[[["key",3]],[["result",6],["vault",3]]],[[["chainid",3],["key",3],["recordhint",3]],["result",6]],[[["key",3]],["vec",3]],[[["key",3],["recordid",3]],["bool",15]],[[["chainid",3],["key",3]],["result",6]],[[["chainid",3],["key",3]],[["guardedvec",3],["result",6]]],[[]],[[["chainid",3],["key",3],["recordhint",3],["blobid",3]],[["result",6],["record",3]]],[[["key",3]],["option",4]],[[["recordid",3]],["bool",15]],[[["chainid",3],["key",3]],[["guardedvec",3],["result",6]]],[[["chainid",3],["key",3]],["result",6]],[[["chainid",3],["key",3]],["result",6]],null,[[],["result",6]],null,[[],["string",3]],null,[[],["usize",15]],[[],["usize",15]],[[["key",3]],[["result",6],["vec",3]]],[[["key",3]],[["result",6],["vec",3]]],[[],["result",6]],[[["usize",15]],[["result",6],["vec",3]]],null,[[["asref",8],["key",3]],["result",6]],null,[[["asref",8],["key",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["val",3]],[[],["val",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3],["u8",15]]],[[]],[[["vec",3],["u8",15]]],[[]],[[]],[[["u64",15]]],[[["error",3]]],[[["tryfromsliceerror",3]]],[[["error",4]]],[[],[["vec",3],["u8",15]]],[[],[["vec",3],["u8",15]]],[[],["string",3]],[[],["string",3]],[[],["duplicate",3]],[[],["cache",3]],[[],["value",3]],[[]],[[],["transactiontype",4]],[[],["transaction",3]],[[],["sealedtransaction",3]],[[],["sealedblob",3]],[[],["recordhint",3]],[[],["recordid",3]],[[],["clientid",3]],[[],["vaultid",3]],[[],["chainid",3]],[[],["id",3]],[[],["transactionid",3]],[[],["blobid",3]],[[],["val",3]],[[],["dbview",3]],[[],["vault",3]],[[],["record",3]],[[]],[[]],[[],["clientid",3]],[[],["id",3]],[[],["dbview",3]],[[],["ordering",4]],[[["transactiontype",4]],["ordering",4]],[[["recordhint",3]],["ordering",4]],[[["recordid",3]],["ordering",4]],[[["clientid",3]],["ordering",4]],[[["vaultid",3]],["ordering",4]],[[["chainid",3]],["ordering",4]],[[["id",3]],["ordering",4]],[[["transactionid",3]],["ordering",4]],[[["blobid",3]],["ordering",4]],[[],["ordering",4]],[[],["bool",15]],[[["transactiontype",4]],["bool",15]],[[["transaction",3]],["bool",15]],[[["transaction",3]],["bool",15]],[[["recordhint",3]],["bool",15]],[[["recordhint",3]],["bool",15]],[[["recordid",3]],["bool",15]],[[["recordid",3]],["bool",15]],[[["clientid",3]],["bool",15]],[[["clientid",3]],["bool",15]],[[["vaultid",3]],["bool",15]],[[["vaultid",3]],["bool",15]],[[["chainid",3]],["bool",15]],[[["chainid",3]],["bool",15]],[[["id",3]],["bool",15]],[[["id",3]],["bool",15]],[[["transactionid",3]],["bool",15]],[[["transactionid",3]],["bool",15]],[[["blobid",3]],["bool",15]],[[["blobid",3]],["bool",15]],[[["val",3]],["bool",15]],[[["val",3]],["bool",15]],[[],[["option",4],["ordering",4]]],[[["transactiontype",4]],[["ordering",4],["option",4]]],[[["recordhint",3]],[["ordering",4],["option",4]]],[[["recordid",3]],[["ordering",4],["option",4]]],[[["clientid",3]],[["ordering",4],["option",4]]],[[["vaultid",3]],[["ordering",4],["option",4]]],[[["chainid",3]],[["ordering",4],["option",4]]],[[["id",3]],[["ordering",4],["option",4]]],[[["transactionid",3]],[["ordering",4],["option",4]]],[[["blobid",3]],[["ordering",4],["option",4]]],[[],[["option",4],["ordering",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["u64",15]]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["val",3]],["result",4]],[[["vec",3],["u8",15]],["result",4]],[[],["result",4]],[[["vec",3],["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[["vec",3],["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[["vec",3],["u8",15]],["result",4]],[[["vec",3],["u8",15]],["result",4]],[[],["result",4]],[[["vec",3],["u8",15]],["result",4]],[[],["result",4]],[[],[["error",8],["option",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]]],"p":[[3,"Lz4Decoder"],[3,"Lz4Encoder"],[3,"Block"],[3,"Duplicate"],[3,"Cache"],[3,"Value"],[3,"Base64"],[8,"Base64Encodable"],[8,"Base64Decodable"],[8,"BoxProvider"],[3,"Key"],[8,"Encrypt"],[8,"Decrypt"],[4,"TransactionType"],[3,"Transaction"],[3,"UntypedTransaction"],[3,"DataTransaction"],[8,"TypedTransaction"],[3,"RevocationTransaction"],[3,"SealedTransaction"],[3,"SealedBlob"],[3,"RecordHint"],[3,"RecordId"],[3,"ClientId"],[3,"VaultId"],[3,"ChainId"],[3,"Id"],[3,"TransactionId"],[3,"BlobId"],[3,"Val"],[8,"AsView"],[8,"AsViewMut"],[3,"DbView"],[3,"Vault"],[3,"Record"],[4,"Error"]]},\
"iota_stronghold":{"doc":"","tn":["actors","client","SLIP10DeriveInput","Seed","Key","Procedure","SLIP10Generate","output","hint","size_bytes","SLIP10Derive","chain","input","output","hint","BIP39Recover","mnemonic","passphrase","output","hint","BIP39Generate","passphrase","output","hint","BIP39MnemonicSentence","seed","Ed25519PublicKey","private_key","Ed25519Sign","private_key","msg","ProcResult","SLIP10Generate","SLIP10Derive","BIP39Recover","BIP39Generate","BIP39MnemonicSentence","Ed25519PublicKey","Ed25519Sign","Error","SerdeProcResult","SLIP10Generate","SLIP10Derive","BIP39Recover","BIP39Generate","BIP39MnemonicSentence","Ed25519PublicKey","Ed25519Sign","Error","SHRequest","CheckVault","CheckRecord","location","WriteToStore","location","payload","lifetime","ReadFromStore","location","DeleteFromStore","CreateNewVault","WriteToVault","location","payload","hint","RevokeData","location","GarbageCollect","ListIds","ReadSnapshot","key","filename","path","cid","former_cid","WriteSnapshot","key","filename","path","FillSnapshot","ClearCache","kill","ControlRequest","SHResults","ReturnWriteStore","ReturnReadStore","ReturnDeleteStore","ReturnCreateVault","ReturnWriteVault","ReturnReadVault","ReturnRevoke","ReturnGarbage","ReturnList","ReturnFillSnap","ReturnWriteSnap","ReturnReadSnap","ReturnClearCache","ReturnControlRequest","ReturnExistsVault","ReturnExistsRecord","internal","InternalActor","client_id","keystore","db","InternalMsg","CreateVault","WriteToVault","RevokeData","GarbageCollect","ListIds","CheckRecord","ReadSnapshot","ReloadData","id","data","status","ClearCache","KillInternal","FillSnapshot","client","SLIP10Generate","vault_id","record_id","hint","size_bytes","SLIP10DeriveFromSeed","chain","seed_vault_id","seed_record_id","key_vault_id","key_record_id","hint","SLIP10DeriveFromKey","chain","parent_vault_id","parent_record_id","child_vault_id","child_record_id","hint","BIP39Generate","passphrase","vault_id","record_id","hint","BIP39Recover","mnemonic","passphrase","vault_id","record_id","hint","Ed25519PublicKey","vault_id","record_id","Ed25519Sign","vault_id","record_id","msg","InternalResults","ReturnCreateVault","ReturnWriteVault","ReturnReadVault","ReturnCheckRecord","ReturnRevoke","ReturnGarbage","ReturnList","ReturnWriteSnap","ReturnControlRequest","RebuildCache","id","vaults","store","status","ReturnClearCache","snapshot","SMsg","WriteSnapshot","key","filename","path","FillSnapshot","data","id","ReadFromSnapshot","key","filename","path","id","fid","interface","Stronghold","system","clients","target","init_stronghold_system","spawn_stronghold_actor","switch_actor_target","write_to_vault","write_to_store","read_from_store","delete_from_store","delete_data","garbage_collect","list_hints_and_ids","runtime_exec","record_exists","vault_exists","read_snapshot","write_all_to_snapshot","kill_stronghold","check_config_flags","internals","provider","Provider","NONCE_LEN","TAG_LEN","state","client","Store","Client","client_id","vaults","store","ClientMsg","SHResults","SHRequest","InternalResults","new","write_to_store","read_from_store","store_delete_item","store_key_exists","set_client_id","add_new_vault","clear_cache","rebuild_cache","resolve_location","derive_vault_id","derive_record_id","get_client_str","vault_exist","get_index_from_record_id","key_store","KeyStore","store","new","get_key","vault_exists","create_key","insert_key","rebuild_keystore","get_data","clear_keys","snapshot","Snapshot","state","SnapshotState","0","new","get_state","has_data","read_from_snapshot","write_to_snapshot","new","add_data","serialize","deserialize","utils","ids","LoadFromPath","load_from_path","types","StatusMessage","ResultMessage","Ok","Error","OK","is_ok","is_err","Location","Generic","vault_path","record_path","Counter","vault_path","counter","vault_path","generic","counter","increment_counter","const_generic","const_counter","StrongholdFlags","IsReadable","VaultFlags","index_of_unchecked","ProcResult","SLIP10Generate","SLIP10Derive","BIP39Recover","BIP39Generate","BIP39MnemonicSentence","Ed25519PublicKey","Ed25519Sign","Error","Procedure","SLIP10Generate","output","hint","size_bytes","SLIP10Derive","chain","input","output","hint","BIP39Recover","mnemonic","passphrase","output","hint","BIP39Generate","passphrase","output","hint","BIP39MnemonicSentence","seed","Ed25519PublicKey","private_key","Ed25519Sign","private_key","msg","SLIP10DeriveInput","Seed","Key","Stronghold","system","clients","target","Provider","Location","Generic","vault_path","record_path","Counter","vault_path","counter","ResultMessage","Ok","Error","StatusMessage","StrongholdFlags","IsReadable","VaultFlags","ActorSystem","proto","sys_actors","log","debug","exec","timer","sys_channels","provider","home_dir","snapshot_dir","naive_kdf","Key","RecordHint","0","Result","Error","IDError","EngineError","line_error","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","encode_hex","encode_hex_upper","base64","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","actor_of_props","actor_of","actor_of_args","stop","fmt","schedule","schedule_once","schedule_at_time","cancel_schedule","tmp_actor_of_props","tmp_actor_of","tmp_actor_of_args","select","run","clone","hash","cmp","fmt","as_ref","serialize","from","eq","ne","deserialize","clone","partial_cmp","as_ref","from","from","from","into","into","into","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","cmp","eq","eq","ne","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","try_from","source","create","create_args","create_args","recv","recv","recv","receive","receive","receive","receive","receive","receive","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","box_key_len","box_overhead","box_seal","box_open","random_buf","new","with_name","with_config","start_date","uptime","host","id","name","print_tree","user_root","sys_root","temp_root","sys_events","dead_letters","publish_event","config","sys_actor_of_props","sys_actor_of","sys_actor_of_args","log","shutdown","new"],"q":["iota_stronghold","iota_stronghold::actors","iota_stronghold::actors::client","","","","","iota_stronghold::actors::client::Procedure","","","iota_stronghold::actors::client","iota_stronghold::actors::client::Procedure","","","","iota_stronghold::actors::client","iota_stronghold::actors::client::Procedure","","","","iota_stronghold::actors::client","iota_stronghold::actors::client::Procedure","","","iota_stronghold::actors::client","iota_stronghold::actors::client::Procedure","iota_stronghold::actors::client","iota_stronghold::actors::client::Procedure","iota_stronghold::actors::client","iota_stronghold::actors::client::Procedure","","iota_stronghold::actors::client","","","","","","","","","","","","","","","","","","","","","iota_stronghold::actors::client::SHRequest","iota_stronghold::actors::client","iota_stronghold::actors::client::SHRequest","","","iota_stronghold::actors::client","iota_stronghold::actors::client::SHRequest","iota_stronghold::actors::client","","","iota_stronghold::actors::client::SHRequest","","","iota_stronghold::actors::client","iota_stronghold::actors::client::SHRequest","iota_stronghold::actors::client","","","iota_stronghold::actors::client::SHRequest","","","","","iota_stronghold::actors::client","iota_stronghold::actors::client::SHRequest","","","iota_stronghold::actors::client","","iota_stronghold::actors::client::SHRequest","iota_stronghold::actors::client","","","","","","","","","","","","","","","","","","iota_stronghold::actors","iota_stronghold::actors::internal","","","","","","","","","","","","","iota_stronghold::actors::internal::InternalMsg","","","iota_stronghold::actors::internal","","","iota_stronghold::actors::internal::InternalMsg","iota_stronghold::actors::internal","iota_stronghold::actors::internal::InternalMsg","","","","iota_stronghold::actors::internal","iota_stronghold::actors::internal::InternalMsg","","","","","","iota_stronghold::actors::internal","iota_stronghold::actors::internal::InternalMsg","","","","","","iota_stronghold::actors::internal","iota_stronghold::actors::internal::InternalMsg","","","","iota_stronghold::actors::internal","iota_stronghold::actors::internal::InternalMsg","","","","","iota_stronghold::actors::internal","iota_stronghold::actors::internal::InternalMsg","","iota_stronghold::actors::internal","iota_stronghold::actors::internal::InternalMsg","","","iota_stronghold::actors::internal","","","","","","","","","","","iota_stronghold::actors::internal::InternalResults","","","","iota_stronghold::actors::internal","iota_stronghold::actors","iota_stronghold::actors::snapshot","","iota_stronghold::actors::snapshot::SMsg","","","iota_stronghold::actors::snapshot","iota_stronghold::actors::snapshot::SMsg","","iota_stronghold::actors::snapshot","iota_stronghold::actors::snapshot::SMsg","","","","","iota_stronghold","iota_stronghold::interface","","","","","","","","","","","","","","","","","","","","","iota_stronghold","iota_stronghold::internals","iota_stronghold::internals::provider","","","iota_stronghold","iota_stronghold::state","iota_stronghold::state::client","","","","","","","","","","","","","","","","","","","","","","","","iota_stronghold::state","iota_stronghold::state::key_store","","","","","","","","","","iota_stronghold::state","iota_stronghold::state::snapshot","","","","","","","","","","","","","iota_stronghold","iota_stronghold::utils","iota_stronghold::utils::ids","","iota_stronghold::utils","iota_stronghold::utils::types","","","","","","","","","iota_stronghold::utils::types::Location","","iota_stronghold::utils::types","iota_stronghold::utils::types::Location","","iota_stronghold::utils::types","","","","","","","","","iota_stronghold::utils","iota_stronghold","","","","","","","","","","","iota_stronghold::Procedure","","","iota_stronghold","iota_stronghold::Procedure","","","","iota_stronghold","iota_stronghold::Procedure","","","","iota_stronghold","iota_stronghold::Procedure","","","iota_stronghold","iota_stronghold::Procedure","iota_stronghold","iota_stronghold::Procedure","iota_stronghold","iota_stronghold::Procedure","","iota_stronghold","","","","","","","","","","iota_stronghold::Location","","iota_stronghold","iota_stronghold::Location","","iota_stronghold","","","","","","","","","","","","","","","","","","","","","","","","","","","iota_stronghold::actors::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","iota_stronghold::actors::internal","","","","","","","","","","","","","","","","","","","","","","","","","","","","iota_stronghold::actors::snapshot","","","","","","","","","","iota_stronghold::interface","","","","","","","","iota_stronghold::internals::provider","","","","","","","","","","iota_stronghold::state::client","","","","","","","","","","","","","","","","","","","","iota_stronghold::state::key_store","","","","","","","","iota_stronghold::state::snapshot","","","","","","","","","","","","","","","","iota_stronghold::utils::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","iota_stronghold","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","iota_stronghold::utils::types","iota_stronghold::actors::client","iota_stronghold::utils::types","iota_stronghold","iota_stronghold::actors::client","","iota_stronghold::actors::internal","iota_stronghold::actors::client","","","","","","iota_stronghold::actors::internal","","iota_stronghold::actors::snapshot","iota_stronghold::internals::provider","iota_stronghold::state::client","","iota_stronghold::utils::types","","","","iota_stronghold::internals::provider","iota_stronghold::state::snapshot","iota_stronghold::internals::provider","","iota_stronghold::utils::types","","iota_stronghold::internals::provider","iota_stronghold::actors::client","","","","","iota_stronghold::actors::internal","","iota_stronghold::actors::snapshot","iota_stronghold::internals::provider","iota_stronghold::state::client","","iota_stronghold::utils::types","","","","iota_stronghold","","iota_stronghold::actors::client","iota_stronghold","iota_stronghold::state::snapshot","iota_stronghold::state::client","iota_stronghold::actors::internal","iota_stronghold::state::client","iota_stronghold::actors::internal","iota_stronghold::state::snapshot","iota_stronghold::state::client","","","iota_stronghold::actors::internal","iota_stronghold::state::snapshot","iota_stronghold::state::client","iota_stronghold::actors::client","","","","","","iota_stronghold::internals::provider","iota_stronghold::state::client","iota_stronghold::state::snapshot","iota_stronghold::utils::types","","iota_stronghold::actors::client","","","","","","iota_stronghold::internals::provider","iota_stronghold::state::client","iota_stronghold::state::snapshot","iota_stronghold::utils::types","","iota_stronghold::internals::provider","","","","","iota_stronghold","","","","","","","","","","","","","","","","","","","","",""],"d":["","","<code>SLIP10DeriveInput</code> type used to specify a Seed location or …","Note that BIP39 seeds are allowed to be used as SLIP10 …","","Procedure type used to call to the runtime via …","Generate a raw SLIP10 seed of the specified size (in …","","","","Derive a SLIP10 child key from a seed or a parent key, …","","","","","Use a BIP39 mnemonic sentence (optionally protected by a …","","","","","Generate a BIP39 seed and its corresponding mnemonic …","","","","Read a BIP39 seed and its corresponding mnemonic sentence …","","Derive an Ed25519 public key from the corresponding …","","Use the specified Ed25519 compatible key to sign the …","","","A Procedure return result type.  Contains the different …","Return from generating a <code>SLIP10</code> seed.","Returns the public key derived from the <code>SLIP10Derive</code> call.","<code>BIP39Recover</code> return value.","<code>BIP39Generate</code> return value.","<code>BIP39MnemonicSentence</code> return value. Returns the mnemonic …","Return value for <code>Ed25519PublicKey</code>. Returns an Ed25519 …","Return value for <code>Ed25519Sign</code>. Returns an Ed25519 …","Generic Error return message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Messages that come from stronghold","","","","","","","","","","","","","","","","","","","","","","Messages used for the KeyStore Actor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Messages used internally by the client.","","","","","","","","","","","","","","","","","Messages used for the Snapshot Actor.","","","","","","","","","","","","","","","The main type for the Stronghold System.  Used as the …","","","","Initializes a new instance of the system.  Sets up the …","Spawns a new set of actors for the Stronghold system. …","Switches the actor target to another actor in the system …","Writes data into the Stronghold. Uses the current target …","Writes data into an insecure cache.  This method, accepts …","A method that reads from an insecure cache.  This method, …","A method to delete data from an insecure cache. This …","Revokes the data from the specified location of type …","Garbage collects any revokes in a Vault based on the …","Returns a list of the available <code>RecordId</code> and <code>RecordHint</code> …","Executes a runtime command given a <code>Procedure</code>.  Returns a …","Checks whether a record exists in the client based off of …","checks whether a vault exists in the client.","Reads data from a given snapshot file.  Can only read the …","Writes the entire state of the <code>Stronghold</code> into a …","Used to kill a stronghold actor or clear the cache of the …","Unimplemented until Policies are implemented.","","","An implementation of the Vault’s `BoxProvider type.  …","","","","","","A <code>Client</code> Cache Actor which routes external messages to …","","","","","","","","Creates a new Client given a <code>ClientID</code> and …","Write unencrypted data to the store.  Returns <code>None</code> if the …","Attempts to read the data from the store.  Returns …","Deletes an item from the store by the given key.","Checks to see if the key exists in the store.","","","Get the head of a vault. Empty the Client Cache.","","","","","","","","","","","Creates a new <code>KeyStore</code>.","Gets the key from the <code>KeyStore</code> and removes it.  Returns …","","Returns an existing key for the <code>id</code> or creates one.","Inserts a key into the <code>KeyStore</code> by <code>VaultId</code>.  If the …","Rebuilds the <code>KeyStore</code> while throwing out any existing …","","","","","","","","Creates a new <code>Snapshot</code> from a buffer of <code>Vec<u8></code> state.","","","Reads state from the specified named snapshot or the …","Writes state to the specified named snapshot or the …","","","","","","","","Load from some data and a path.","","A type alias for the empty <code>ResultMessage<()></code> type.","Return value used for Actor Messages.  Can specify an …","","","","Returns true, if the [<code>ResultMessage</code>] contains an <code>Ok</code> value","Returns true, if the [<code>ResultMessage</code>] contains an <code>Error</code>","A <code>Location</code> type used to specify where in the <code>Stronghold</code> a …","","","","","","","Gets the vault_path from the Location.","Creates a generic location from types that implement …","Creates a counter location from a type that implements …","Helper method used to increment counter locations.","Used to generate a constant generic location.","used to generate a constant counter location.","Policy options for modifying an entire Stronghold.  Must …","","Policy options for for a specific vault.  Must be …","","A Procedure return result type.  Contains the different …","Return from generating a <code>SLIP10</code> seed.","Returns the public key derived from the <code>SLIP10Derive</code> call.","<code>BIP39Recover</code> return value.","<code>BIP39Generate</code> return value.","<code>BIP39MnemonicSentence</code> return value. Returns the mnemonic …","Return value for <code>Ed25519PublicKey</code>. Returns an Ed25519 …","Return value for <code>Ed25519Sign</code>. Returns an Ed25519 …","Generic Error return message.","Procedure type used to call to the runtime via …","Generate a raw SLIP10 seed of the specified size (in …","","","","Derive a SLIP10 child key from a seed or a parent key, …","","","","","Use a BIP39 mnemonic sentence (optionally protected by a …","","","","","Generate a BIP39 seed and its corresponding mnemonic …","","","","Read a BIP39 seed and its corresponding mnemonic sentence …","","Derive an Ed25519 public key from the corresponding …","","Use the specified Ed25519 compatible key to sign the …","","","<code>SLIP10DeriveInput</code> type used to specify a Seed location or …","Note that BIP39 seeds are allowed to be used as SLIP10 …","","The main type for the Stronghold System.  Used as the …","","","","An implementation of the Vault’s `BoxProvider type.  …","A <code>Location</code> type used to specify where in the <code>Stronghold</code> a …","","","","","","","Return value used for Actor Messages.  Can specify an …","","","A type alias for the empty <code>ResultMessage<()></code> type.","Policy options for modifying an entire Stronghold.  Must …","","Policy options for for a specific vault.  Must be …","The actor runtime and common services coordinator","","","","","","","","","Get the preferred Stronghold home directory","Get the preferred snapshot directory","a wrapper around the <code>HMAC_SHA256</code> function used to derive …","","a record hint.  Used as a hint to what this data is.","","","","","","TODO: Should be replaced with proper errorsreate a new <code>ActorSystem</code> instance","Create a new <code>ActorSystem</code> instance with provided name","Create a new <code>ActorSystem</code> instance bypassing default …","Returns the system start date","Returns the number of seconds since the system started","Returns the hostname used when the system started","Returns the UUID assigned to the system","Returns the name of the system","","Returns the user root actor reference","Returns the system root actor reference","Reutrns the temp root actor reference","Returns a reference to the system events channel","Returns a reference to the dead letters channel","","Returns the <code>Config</code> used by the system","Create an actor under the system root","","","","Shutdown the actor system","create a new random Id for hint"],"i":[0,0,0,1,1,0,2,3,3,3,2,4,4,4,4,2,5,5,5,5,2,6,6,6,2,7,2,8,2,9,9,0,10,10,10,10,10,10,10,10,0,11,11,11,11,11,11,11,11,0,12,12,13,12,14,14,14,12,15,12,12,12,16,16,16,12,17,12,12,12,18,18,18,18,18,12,19,19,19,12,12,20,12,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,22,22,22,0,23,23,23,23,23,23,23,23,24,24,24,23,23,23,25,23,26,26,26,26,23,27,27,27,27,27,27,23,28,28,28,28,28,28,23,29,29,29,29,23,30,30,30,30,30,23,31,31,23,32,32,32,0,33,33,33,33,33,33,33,33,33,33,34,34,34,34,33,0,0,35,36,36,36,35,37,37,35,38,38,38,38,38,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,40,40,0,0,0,0,41,41,41,0,42,42,42,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,43,43,43,43,43,43,43,43,43,0,0,44,0,45,44,44,44,44,44,45,45,45,45,0,0,0,46,0,0,0,47,47,47,47,47,0,48,49,49,48,50,50,48,48,48,48,48,48,0,51,0,0,0,10,10,10,10,10,10,10,10,0,2,3,3,3,2,4,4,4,4,2,5,5,5,5,2,6,6,6,2,7,2,8,2,9,9,0,1,1,0,39,39,39,0,0,48,49,49,48,50,50,0,47,47,0,0,51,0,0,52,52,52,52,52,52,52,52,0,0,0,0,0,53,0,0,54,54,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,33,33,33,33,33,33,33,33,33,33,35,35,35,35,35,35,35,35,35,35,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,51,51,51,51,51,51,51,51,51,51,55,55,55,55,55,55,55,55,55,55,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,53,48,11,47,54,21,12,33,1,2,10,11,12,21,23,33,35,40,41,42,47,48,51,55,40,45,40,40,47,47,40,1,2,10,12,21,23,33,35,40,41,42,47,48,51,55,54,54,10,54,44,41,22,41,22,44,41,41,41,22,44,41,1,2,10,11,12,21,40,41,45,47,48,1,2,10,11,12,21,40,41,45,47,48,40,40,40,40,40,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,53],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",15],["vec",3],["actorsystem",3],["vec",3],["strongholdflags",4]]],[[["u8",15],["vec",3],["vec",3],["strongholdflags",4]]],[[["vec",3],["u8",15]]],[[["recordhint",3],["vec",3],["u8",15],["vec",3],["vaultflags",4],["location",4]]],[[["duration",3],["u8",15],["vec",3],["option",4],["location",4]]],[[["location",4]]],[[["location",4]]],[[["bool",15],["location",4]]],[[["vec",3],["u8",15]]],[[["vec",3],["into",8]]],[[["procedure",4]]],[[["location",4]]],[[["location",4]]],[[["string",3],["option",4],["pathbuf",3],["u8",15],["vec",3],["option",4],["option",4]]],[[["string",3],["option",4],["pathbuf",3],["option",4]]],[[["vec",3],["bool",15],["u8",15]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["clientid",3]]],[[["duration",3],["u8",15],["vec",3],["option",4]],[["vec",3],["option",4]]],[[["vec",3],["u8",15]],[["vec",3],["option",4]]],[[["vec",3],["u8",15]]],[[["vec",3],["u8",15]],["bool",15]],[[["clientid",3]]],[[["vaultid",3]]],[[],["option",4]],[[["cache",3],["clientid",3],["hashset",3],["vaultid",3],["vec",3]]],[[["asref",8],["location",4]]],[[["vec",3],["asref",8]],["vaultid",3]],[[["vec",3],["asref",8],["usize",15]],["recordid",3]],[[],["string",3]],[[["vaultid",3]],[["vaultid",3],["option",4]]],[[["vec",3],["asref",8],["recordid",3]],["usize",15]],null,null,null,[[]],[[["vaultid",3]],[["option",4],["key",3]]],[[["vaultid",3]],["bool",15]],[[["vaultid",3]],["key",3]],[[["vaultid",3],["key",3]],["key",3]],[[["hashmap",3],["vaultid",3],["key",3]]],[[],[["hashmap",3],["vaultid",3],["key",3]]],[[]],null,null,null,null,null,[[["snapshotstate",3]]],[[["clientid",3]]],[[["clientid",3]],["bool",15]],[[["option",4],["key",6],["option",4],["path",3],["str",15]],["result",6]],[[["option",4],["key",6],["option",4],["path",3],["str",15]],["result",6]],[[["clientid",3]]],[[["clientid",3]]],[[],[["vec",3],["u8",15]]],[[["vec",3],["u8",15]]],null,null,null,[[],["result",6]],null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,[[]],[[["vec",3],["into",8]]],[[["usize",15],["into",8],["into",8],["vec",3]]],[[]],[[["vec",3],["u8",15]]],[[["vec",3],["usize",15],["u8",15]]],null,null,null,[[],["usize",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["error",4],["result",4],["pathbuf",3]]],[[],[["error",4],["result",4],["pathbuf",3]]],[[],[["error",4],["result",4]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["arc",3],["mutex",3],["str",15]],[["createerror",4],["actorref",3],["result",4]]],[[["str",15]],[["createerror",4],["actorref",3],["result",4]]],[[["str",15]],[["createerror",4],["actorref",3],["result",4]]],[[]],[[["formatter",3]],[["result",4],["error",3]]],[[["option",4],["basicactorref",3],["actorref",3],["duration",3]],["uuid",3]],[[["option",4],["basicactorref",3],["actorref",3],["duration",3]],["uuid",3]],[[["datetime",3],["utc",3],["actorref",3],["option",4],["basicactorref",3]],["uuid",3]],[[["uuid",3]]],[[["arc",3],["mutex",3]],[["createerror",4],["actorref",3],["result",4]]],[[],[["createerror",4],["actorref",3],["result",4]]],[[],[["createerror",4],["actorref",3],["result",4]]],[[["str",15]],[["actorselection",3],["invalidpath",3],["result",4]]],[[],[["result",4],["remotehandle",3],["spawnerror",3]]],[[],["actorsystem",3]],[[]],[[["recordhint",3]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[],["result",4]],[[],["recordhint",3]],[[["recordhint",3]],["bool",15]],[[["recordhint",3]],["bool",15]],[[],[["result",4],["recordhint",3]]],[[],["recordhint",3]],[[["recordhint",3]],[["ordering",4],["option",4]]],[[],["location",4]],[[["procresult",4]]],[[["string",3],["result",4]]],[[["error",4]]],[[],["clientmsg",4]],[[],["clientmsg",4]],[[],["clientmsg",4]],[[],["slip10deriveinput",4]],[[],["procedure",4]],[[],["procresult",4]],[[],["serdeprocresult",4]],[[],["shrequest",4]],[[],["shresults",4]],[[],["internalmsg",4]],[[],["internalresults",4]],[[],["smsg",4]],[[],["provider",3]],[[],["client",3]],[[],["clientmsg",4]],[[],["resultmessage",4]],[[],["location",4]],[[],["strongholdflags",4]],[[],["vaultflags",4]],[[],["provider",3]],[[],["snapshotstate",3]],[[["provider",3]],["ordering",4]],[[["provider",3]],["bool",15]],[[["resultmessage",4]],["bool",15]],[[["resultmessage",4]],["bool",15]],[[["provider",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["serdeprocresult",4]],[["tryfromsliceerror",3],["result",4]]],[[],[["error",8],["option",4]]],[[]],[[["clientid",3]]],[[["clientid",3]]],[[["sender",6],["context",3]]],[[["sender",6],["context",3]]],[[["sender",6],["context",3]]],[[["sender",6],["context",3],["shresults",4]]],[[["sender",6],["context",3],["shrequest",4]]],[[["sender",6],["context",3],["internalresults",4]]],[[["context",3],["sender",6]]],[[["context",3],["sender",6]]],[[["clientmsg",4],["option",4],["context",3],["basicactorref",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["usize",15]],[[],["usize",15]],[[["key",3]],[["result",6],["vec",3]]],[[["key",3]],[["result",6],["vec",3]]],[[],["result",6]],[[],[["systemerror",4],["result",4],["actorsystem",3]]],[[["str",15]],[["systemerror",4],["result",4],["actorsystem",3]]],[[["config",3],["str",15]],[["systemerror",4],["result",4],["actorsystem",3]]],[[],["datetime",3]],[[],["u64",15]],[[],[["arc",3],["str",15]]],[[],["uuid",3]],[[],["string",3]],[[]],[[],["basicactorref",3]],[[],["basicactorref",3]],[[],["basicactorref",3]],[[],["actorref",3]],[[],["actorref",3]],[[["systemevent",4]]],[[],["config",3]],[[["arc",3],["mutex",3],["str",15]],[["createerror",4],["actorref",3],["result",4]]],[[["str",15]],[["createerror",4],["actorref",3],["result",4]]],[[["str",15]],[["createerror",4],["actorref",3],["result",4]]],[[],["loggingsystem",3]],[[],["receiver",3]],[[],[["error",4],["recordhint",3],["result",4]]]],"p":[[4,"SLIP10DeriveInput"],[4,"Procedure"],[13,"SLIP10Generate"],[13,"SLIP10Derive"],[13,"BIP39Recover"],[13,"BIP39Generate"],[13,"BIP39MnemonicSentence"],[13,"Ed25519PublicKey"],[13,"Ed25519Sign"],[4,"ProcResult"],[4,"SerdeProcResult"],[4,"SHRequest"],[13,"CheckRecord"],[13,"WriteToStore"],[13,"ReadFromStore"],[13,"WriteToVault"],[13,"RevokeData"],[13,"ReadSnapshot"],[13,"WriteSnapshot"],[13,"ClearCache"],[4,"SHResults"],[3,"InternalActor"],[4,"InternalMsg"],[13,"ReloadData"],[13,"FillSnapshot"],[13,"SLIP10Generate"],[13,"SLIP10DeriveFromSeed"],[13,"SLIP10DeriveFromKey"],[13,"BIP39Generate"],[13,"BIP39Recover"],[13,"Ed25519PublicKey"],[13,"Ed25519Sign"],[4,"InternalResults"],[13,"RebuildCache"],[4,"SMsg"],[13,"WriteSnapshot"],[13,"FillSnapshot"],[13,"ReadFromSnapshot"],[3,"Stronghold"],[3,"Provider"],[3,"Client"],[4,"ClientMsg"],[3,"KeyStore"],[3,"Snapshot"],[3,"SnapshotState"],[8,"LoadFromPath"],[4,"ResultMessage"],[4,"Location"],[13,"Generic"],[13,"Counter"],[4,"StrongholdFlags"],[3,"ActorSystem"],[3,"RecordHint"],[4,"Error"],[4,"VaultFlags"]]},\
"runtime":{"doc":"Stronghold Protected-access Memory Runtime.","t":[0,3,12,5,0,4,13,13,13,6,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,0,3,12,3,12,3,12,11,11,11,11,11,11,11,11,11,0,3,12,3,12,3,12,11,11,11,11,11,11,11,11,11,11,11,3,12,11,0,3,12,3,12,11,11,11,11,11,0,5,5,0,0,17,8,11,11,11,11,8,10,10,10,11,11,0,8,11,0,8,11,0,8,11,11,3,12,3,12,3,12,3,12,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["allocator","ZeroingAlloc","0","zero","boxed","Prot","NoAccess","ReadOnly","ReadWrite","RefCount","Boxed","ptr","len","prot","refs","new","try_new","len","is_empty","size","unlock","unlock_mut","lock","as_ref","as_mut","as_slice","as_mut_slice","new_unlocked","retain","release","is_locked","random","zero","mprotect","free","lock_memory","guarded","Guarded","boxed","Ref","boxed","RefMut","boxed","new","try_new","size","borrow","borrow_mut","new","new","random","zero","guarded_vec","GuardedVec","boxed","Ref","boxed","RefMut","boxed","new","try_new","len","is_empty","size","borrow","borrow_mut","random","zero","new","new","GuardedVecVisitor","marker","new","secret","Secret","data","RefMut","data","new","zero","from","random","new","sodium","mlock","munlock","types","bytes","GARBAGE_VALUE","Bytes","uninitialized","size","as_u8_ptr","as_mut_u8_ptr","ContiguousBytes","size","as_u8_ptr","as_mut_u8_ptr","as_bytes","as_mut_bytes","const_eq","ConstEq","const_eq","rand","Randomized","randomize","zero","Zeroed","zero","copy_and_zero","ZeroingAlloc","0","Guarded","boxed","GuardedVec","boxed","Secret","data","Bytes","uninitialized","size","as_u8_ptr","as_mut_u8_ptr","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","fmt","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_owned","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","drop","drop","drop","drop","drop","drop","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","alloc","dealloc","alloc_zeroed","expecting","visit_seq","serialize","deserialize"],"q":["runtime","runtime::allocator","","","runtime","runtime::boxed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","runtime","runtime::guarded","","","","","","","","","","","","","","","runtime","runtime::guarded_vec","","","","","","","","","","","","","","","","","","","","runtime","runtime::secret","","","","","","","","","runtime","runtime::sodium","","runtime","runtime::types","runtime::types::bytes","","","","","","","","","","","","runtime::types","runtime::types::const_eq","","runtime::types","runtime::types::rand","","runtime::types","runtime::types::zero","","","runtime","","","","","","","","","runtime::types::bytes","","","","runtime::allocator","","","","","","","runtime::boxed","","","","","","","","","","","","","","","","","","runtime::guarded","","","","","","","","","","","","","","","","","","","","","","","","","runtime::guarded_vec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","runtime::secret","","","","","","","","","","","","","","","","runtime::guarded","","runtime::guarded_vec","","runtime::secret","runtime::guarded","runtime::guarded_vec","runtime::secret","runtime::boxed","","runtime::guarded","","","runtime::guarded_vec","","","runtime::secret","runtime::boxed","","runtime::guarded","","","","","runtime::guarded_vec","","","","","runtime::secret","runtime::boxed","runtime::guarded","","runtime::guarded_vec","","runtime::secret","runtime::boxed","","runtime::guarded","runtime::guarded_vec","runtime::boxed","","runtime::guarded","","runtime::guarded_vec","","runtime::secret","runtime::allocator","","","runtime::guarded_vec","","",""],"d":["","A Zeroing Allocator which wraps the standard memory …","","Zeroes out memory at pointer in place based on the given …","","","","","","","A protected piece of memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","A guarded type for protecting fixed-length secrets …","","","","","","","","","","","","","","","","A guarded type for protecting variable-length secrets …","","","","","","","","","","","","","","","","","","","","","A Type for guarding secrets allocated to the stack.","Internally protected data for the [<code>Secret</code>].","A mutable [<code>Deref</code>] wrapper around the [<code>Secret</code>]’s …","a reference to the underlying secret data that will be …","Creates a new [<code>Secret</code>] and invokes the provided callback …","Creates a new [<code>Secret</code>] filled with zeroed bytes and …","Creates a new [<code>Secret</code>] from existing, unprotected data, …","Creates a new [<code>Secret</code>] filled with random bytes and …","Creates a new <code>RefMut</code>.","","A wrapper around the [<code>sodium_mlock</code>] function.","A wrapper around the [<code>sodium_munlock</code>] function.","","","","A trait for dealing with Bytes.  Used as the underlying …","","","","","","","","","","","","","","","","","","","","","A Zeroing Allocator which wraps the standard memory …","","A guarded type for protecting fixed-length secrets …","","A guarded type for protecting variable-length secrets …","","A Type for guarding secrets allocated to the stack.","Internally protected data for the [<code>Secret</code>].","A trait for dealing with Bytes.  Used as the underlying …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensures that the [<code>Secret</code>]’s underlying memory is <code>munlock</code>…","","","","","","","","","","","","","Zero the memory before deallocation.","","","","",""],"i":[0,0,1,0,0,0,2,2,2,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,4,0,5,0,6,4,4,4,4,4,5,6,4,4,0,0,7,0,8,0,9,7,7,7,7,7,7,7,7,7,8,9,0,10,10,0,0,11,0,12,11,11,11,11,12,0,0,0,0,0,0,0,13,13,13,13,0,14,14,14,14,14,0,0,15,0,0,16,0,0,17,17,0,1,0,4,0,7,0,11,0,13,13,13,13,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,5,6,8,9,12,6,9,12,2,3,5,6,4,7,8,9,12,2,3,5,5,4,6,6,7,8,8,9,9,12,3,5,6,8,9,11,3,3,4,7,2,3,4,5,7,8,12,1,1,1,10,10,7,7],"f":[null,null,null,[[["usize",15]]],null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]]],[[["usize",15]],["result",4]],[[],["usize",15]],[[],["bool",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["prot",4]]],[[]],[[],["bool",15]],[[["usize",15]]],[[["usize",15]]],[[["prot",4]]],[[]],[[["usize",15]]],null,null,null,null,null,null,null,[[]],[[],["result",4]],[[],["usize",15]],[[],["ref",3]],[[],["refmut",3]],[[["boxed",3]]],[[["boxed",3]]],[[]],[[]],null,null,null,null,null,null,null,[[["usize",15]]],[[],["result",4]],[[],["usize",15]],[[],["bool",15]],[[],["usize",15]],[[],["ref",3]],[[],["refmut",3]],[[["usize",15]]],[[["usize",15]]],[[["boxed",3]]],[[["boxed",3]]],null,null,[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[],["bool",15]],null,null,null,null,[[]],[[],["usize",15]],[[]],[[]],null,[[],["usize",15]],[[]],[[]],[[]],[[]],null,null,[[],["bool",15]],null,null,[[]],null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["prot",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["refmut",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["ref",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["refmut",3]],["bool",15]],[[],["bool",15]],[[["ref",3]],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["prot",4]],[[]],[[],["guarded",3]],[[]],[[],["guardedvec",3]],[[]],[[]],[[["layout",3]]],[[["layout",3]]],[[["layout",3]]],[[["formatter",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]]],"p":[[3,"ZeroingAlloc"],[4,"Prot"],[3,"Boxed"],[3,"Guarded"],[3,"Ref"],[3,"RefMut"],[3,"GuardedVec"],[3,"Ref"],[3,"RefMut"],[3,"GuardedVecVisitor"],[3,"Secret"],[3,"RefMut"],[8,"Bytes"],[8,"ContiguousBytes"],[8,"ConstEq"],[8,"Randomized"],[8,"Zeroed"]]},\
"stronghold_derive":{"doc":"Proc macros for Stronghold.","t":[0,5,5,5,5,24,24],"n":["comm","build_plain","match_fields","impl_to_permissioned","impl_permission","GuardDebug","RequestPermissions"],"q":["stronghold_derive","stronghold_derive::comm","","","","stronghold_derive",""],"d":["","","","","","A version of the Debug macro that blocks parsing the data …","Implements the [<code>VariantPermission</code>] for struct/ unions …"],"i":[0,0,0,0,0,0,0],"f":[null,[[["dataenum",3],["ident",3]],["tokenstream",3]],[[["fields",4]],["tokenstream",3]],[[["dataenum",3],["ident",3]],["tokenstream",3]],[[["dataenum",3],["ident",3]],["tokenstream",3]],null,null],"p":[]},\
"stronghold_utils":{"doc":"","t":[0,5,3,12,11,0,0,5,5,5,5,5,5,5,5,5,5,24,24,11,11,11,11,11,11,11,11,11],"n":["ask","ask","AskActor","tx","boxed","test_utils","fresh","bytestring","non_empty_bytestring","string","coinflip","usize","corrupt","seek_to_beginning","corrupt_file","corrupt_file_at","ask","GuardDebug","RequestPermissions","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","recv"],"q":["stronghold_utils","stronghold_utils::ask","","","","stronghold_utils","stronghold_utils::test_utils","stronghold_utils::test_utils::fresh","","","","","stronghold_utils::test_utils","","","","stronghold_utils","","","stronghold_utils::ask","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","A version of the Debug macro that blocks parsing the data …","Implements the [<code>VariantPermission</code>] for struct/ unions …","","","","","","","","",""],"i":[0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1],"f":[null,[[],["remotehandle",3]],null,null,[[["mutex",3],["arc",3]],["boxactor",6]],null,null,[[],[["vec",3],["u8",15]]],[[],[["vec",3],["u8",15]]],[[],["string",3]],[[],["bool",15]],[[["usize",15]],["usize",15]],[[]],[[["file",3]]],[[["file",3]]],[[["path",3]]],[[],["remotehandle",3]],null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["sender",6],["context",3]]]],"p":[[3,"AskActor"]]}\
}');
initSearch(searchIndex);