var searchIndex = JSON.parse('{\
"crypto":{"doc":"","i":[[3,"ChaCha20Ietf","crypto","",null,null],[3,"ChaChaPolyIetf","","ChaChaPolyIETF cipher",null,null],[3,"Poly1305","","",null,null],[3,"XChaCha20","","",null,null],[3,"XChaChaPoly","","XChaChaPoly Cipher",null,null],[4,"Error","","",null,null],[13,"InvalidData","","",0,null],[13,"InterfaceError","","",0,null],[13,"CryptoError","","",0,null],[0,"internal","","",null,null],[0,"chacha","crypto::internal","",null,null],[5,"chacha20_rounds","crypto::internal::chacha","Does ChaCha20 Rounds over the state",null,[[]]],[5,"h_chacha20_hash","","HChaCha20 implementation",null,[[]]],[5,"chacha20_ietf_block","","calculates the nth ChaCha20-IETF block into a buffer",null,[[]]],[5,"chacha20_block","","calculates the nth ChaCha20 block into a buffer",null,[[]]],[17,"BASIS","","ChaCha20 Basis Constants",null,null],[0,"poly","crypto::internal","",null,null],[5,"poly1305_init","crypto::internal::poly","Loads a key into r and s and computes the key multipliers",null,[[]]],[5,"poly1305_update","","updates the value a with any data using the key and the…",null,[[]]],[5,"poly1305_finish","","finishes authentication",null,[[]]],[0,"verify","crypto","",null,null],[8,"USizeExt","crypto::verify","extension on usize for constrained values.",null,null],[10,"constrain_value","","",1,[[]]],[8,"SliceExt","","slice extension for constrainted values",null,null],[10,"constrain_value","","",2,[[]]],[0,"chacha_ietf","crypto","",null,null],[3,"ChaCha20Ietf","crypto::chacha_ietf","",null,null],[17,"CHACHA20_MAX","","max bytes that can be processed with a key/nonce combo",null,null],[17,"CHACHA20_KEY","","Size of Key",null,null],[17,"CHACHA20_NONCE","","Size of Nonce",null,null],[11,"cipher","crypto","create a new Cipher with ChaCha20IETF",3,[[],[["cipher",8],["box",3]]]],[11,"xor","","Xor data with ChaCha20 keystream",3,[[]]],[0,"chachapoly_ietf","","",null,null],[3,"ChaChaPolyIetf","crypto::chachapoly_ietf","ChaChaPolyIETF cipher",null,null],[5,"chachapoly_seal","","encrypts data in place",null,[[]]],[5,"chachapoly_open","","open data and decrypt it in place.",null,[[],[["box",3],["result",4]]]],[17,"CHACHAPOLY_MAX","","max bytes that can be processed with a key/nonce combo",null,null],[17,"CHACHAPOLY_KEY","","size of key",null,null],[17,"CHACHAPOLY_NONCE","","size of nonce",null,null],[17,"CHACHAPOLY_TAG","","size of auth tag",null,null],[11,"cipher","crypto","",4,[[],[["cipher",8],["box",3]]]],[11,"aead_cipher","","",4,[[],[["box",3],["aeadcipher",8]]]],[0,"poly","","",null,null],[3,"Poly1305","crypto::poly","",null,null],[17,"POLY1305_KEY","","Size of the Key",null,null],[17,"POLY1305_TAG","","Size of the auth tag",null,null],[11,"message_auth_code","crypto","creates a MAC",5,[[],[["box",3],["messageauthcode",8]]]],[11,"chachapoly_auth","","function to create ChaChaPoly-IETF AEAD",5,[[]]],[0,"xchacha","","",null,null],[3,"XChaCha20","crypto::xchacha","",null,null],[17,"XCHACHA20_MAX","","max bytes that can be processed with a key/nonce combo",null,null],[17,"XCHACHA20_KEY","","size of the key",null,null],[17,"XCHACHA20_NONCE","","size of the nonce",null,null],[11,"cipher","crypto","builds a new Cipher with XChaCha20",6,[[],[["cipher",8],["box",3]]]],[11,"xor","","Xor the bytes with XChaCha20 kestream.",6,[[]]],[0,"xchachapoly","","",null,null],[3,"XChaChaPoly","crypto::xchachapoly","XChaChaPoly Cipher",null,null],[5,"xchachapoly_seal","","encrypts data in-place and authenticates it",null,[[]]],[5,"xchachapoly_open","","decrypts data in-place after validation",null,[[],[["box",3],["result",4]]]],[17,"XCHACHAPOLY_MAX","","max bytes that can be processed with a key/nonce combo",null,null],[17,"XCHACHAPOLY_KEY","","size of the key",null,null],[17,"XCHACHAPOLY_NONCE","","size of the nonce",null,null],[17,"XCHACHAPOLY_TAG","","size of the auth tag",null,null],[11,"cipher","crypto","",7,[[],[["cipher",8],["box",3]]]],[11,"aead_cipher","","",7,[[],[["box",3],["aeadcipher",8]]]],[6,"Result","","",null,null],[14,"add","","all macros avoid overflow and underflow. addition macro",null,null],[14,"sub","","subtraction macro",null,null],[14,"mult","","multiplication macro",null,null],[14,"shift_right","","bit shift right macro",null,null],[14,"shift_left","","bit shift left macro",null,null],[14,"negate","","negation macro",null,null],[14,"or","","logical or macro",null,null],[14,"and","","logical and macro",null,null],[14,"xor","","logical xor macro",null,null],[14,"greater_than","","comparison macros: 1 is true and 0 is false. greater than…",null,null],[14,"equal","","equal to macro",null,null],[14,"not_bool","","logical Not macro",null,null],[14,"mux_bool","","Multiplexer macro",null,null],[14,"read32_little_endian","","Little Endian Decode macro",null,null],[14,"write32_little_endian","","Little Endian Encode macro u32",null,null],[14,"write64_little_endian","","Little Endian Encode macro u64",null,null],[14,"eq_const_time","","constant time comparison macro",null,null],[14,"split64_little_endian","","u64 to two u32s: Little Endian split macro",null,null],[14,"verify_keygen","","verify size of buffer",null,null],[14,"verify_auth","","verify auth parameters",null,null],[14,"verify_encrypt","","verify encryption parameters",null,null],[14,"verify_decrypt","","verify decryption parameters",null,null],[14,"verify_seal","","verify seal parameters",null,null],[14,"verify_open","","verify opening in place parameters",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"info","","",5,[[],["messageauthcodeinfo",3]]],[11,"auth","","",5,[[],[["result",4],["box",3]]]],[11,"new_secret_key","","",3,[[["securerng",8]],[["result",4],["box",3]]]],[11,"new_secret_key","","",4,[[["securerng",8]],[["result",4],["box",3]]]],[11,"new_secret_key","","",5,[[["securerng",8]],[["result",4],["box",3]]]],[11,"new_secret_key","","",6,[[["securerng",8]],[["result",4],["box",3]]]],[11,"new_secret_key","","generate a new secret key",7,[[["securerng",8]],[["result",4],["box",3]]]],[11,"info","","",3,[[],["cipherinfo",3]]],[11,"predict_encrypted_max","","",3,[[]]],[11,"encrypt","","",3,[[],[["result",4],["box",3]]]],[11,"encrypt_to","","",3,[[],[["result",4],["box",3]]]],[11,"decrypt","","",3,[[],[["result",4],["box",3]]]],[11,"decrypt_to","","",3,[[],[["result",4],["box",3]]]],[11,"info","","",4,[[],["cipherinfo",3]]],[11,"predict_encrypted_max","","",4,[[]]],[11,"encrypt","","",4,[[],[["result",4],["box",3]]]],[11,"encrypt_to","","",4,[[],[["result",4],["box",3]]]],[11,"decrypt","","",4,[[],[["result",4],["box",3]]]],[11,"decrypt_to","","",4,[[],[["result",4],["box",3]]]],[11,"info","","",6,[[],["cipherinfo",3]]],[11,"predict_encrypted_max","","",6,[[]]],[11,"encrypt","","",6,[[],[["result",4],["box",3]]]],[11,"encrypt_to","","",6,[[],[["result",4],["box",3]]]],[11,"decrypt","","",6,[[],[["result",4],["box",3]]]],[11,"decrypt_to","","",6,[[],[["result",4],["box",3]]]],[11,"info","","",7,[[],["cipherinfo",3]]],[11,"predict_encrypted_max","","",7,[[]]],[11,"encrypt","","",7,[[],[["result",4],["box",3]]]],[11,"encrypt_to","","",7,[[],[["result",4],["box",3]]]],[11,"decrypt","","",7,[[],[["result",4],["box",3]]]],[11,"decrypt_to","","",7,[[],[["result",4],["box",3]]]],[11,"seal","","",4,[[],[["result",4],["box",3]]]],[11,"seal_with","","",4,[[],[["result",4],["box",3]]]],[11,"open","","",4,[[],[["result",4],["box",3]]]],[11,"open_to","","",4,[[],[["result",4],["box",3]]]],[11,"seal","","",7,[[],[["result",4],["box",3]]]],[11,"seal_with","","",7,[[],[["result",4],["box",3]]]],[11,"open","","",7,[[],[["result",4],["box",3]]]],[11,"open_to","","",7,[[],[["result",4],["box",3]]]]],"p":[[4,"Error"],[8,"USizeExt"],[8,"SliceExt"],[3,"ChaCha20Ietf"],[3,"ChaChaPolyIetf"],[3,"Poly1305"],[3,"XChaCha20"],[3,"XChaChaPoly"]]},\
"engine":{"doc":"A system for securely managing secrets.","i":[],"p":[]},\
"iota_stronghold":{"doc":"","i":[[5,"home_dir","iota_stronghold","Get the preferred Stronghold home directory",null,[[],[["result",4],["pathbuf",3],["error",4]]]],[5,"snapshot_dir","","Get the preferred snapshot directory",null,[[],[["result",4],["pathbuf",3],["error",4]]]],[5,"naive_kdf","","",null,[[],[["result",4],["error",4]]]],[5,"recommended_kdf","","derive a key from password and salt using the currently…",null,[[],[["result",4],["error",4]]]],[6,"Key","","",null,null],[3,"RecordHint","","a record hint",null,null],[12,"0","","",0,null],[3,"Stronghold","","Main Interface for the Stronghold System. Contains the…",null,null],[12,"system","","",1,null],[12,"client_ids","","",1,null],[12,"actors","","",1,null],[12,"derive_data","","",1,null],[12,"current_target","","",1,null],[3,"Provider","","Provider for the xchacha20poly1305 encryption engine.…",null,null],[4,"ProcResult","","A Procedure return result type. Contains the different…",null,null],[13,"SLIP10Generate","","Return from generating a `SLIP10` seed.",2,null],[13,"SLIP10Derive","","Returns the public key derived from the `SLIP10Derive` call.",2,null],[13,"BIP39Recover","","`BIP39Recover` return value.",2,null],[13,"BIP39Generate","","`BIP39Generate` return value.",2,null],[13,"BIP39MnemonicSentence","","`BIP39MnemonicSentence` return value. Returns the mnemonic…",2,null],[13,"Ed25519PublicKey","","Return value for `Ed25519PublicKey`. Returns an Ed25519…",2,null],[13,"Ed25519Sign","","Return value for `Ed25519Sign`. Returns an Ed25519…",2,null],[4,"Procedure","","Procedure type used to call to the runtime via…",null,null],[13,"SLIP10Generate","","Generate a raw SLIP10 seed of the specified size (in…",3,null],[12,"output","iota_stronghold::Procedure","",4,null],[12,"hint","","",4,null],[12,"size_bytes","","",4,null],[13,"SLIP10Derive","iota_stronghold","Derive a SLIP10 child key from a seed or a parent key,…",3,null],[12,"chain","iota_stronghold::Procedure","",5,null],[12,"input","","",5,null],[12,"output","","",5,null],[12,"hint","","",5,null],[13,"BIP39Recover","iota_stronghold","Use a BIP39 mnemonic sentence (optionally protected by a…",3,null],[12,"mnemonic","iota_stronghold::Procedure","",6,null],[12,"passphrase","","",6,null],[12,"output","","",6,null],[12,"hint","","",6,null],[13,"BIP39Generate","iota_stronghold","Generate a BIP39 seed and its corresponding mnemonic…",3,null],[12,"passphrase","iota_stronghold::Procedure","",7,null],[12,"output","","",7,null],[12,"hint","","",7,null],[13,"BIP39MnemonicSentence","iota_stronghold","Read a BIP39 seed and its corresponding mnemonic sentence…",3,null],[12,"seed","iota_stronghold::Procedure","",8,null],[13,"Ed25519PublicKey","iota_stronghold","Derive an Ed25519 public key from the corresponding…",3,null],[12,"private_key","iota_stronghold::Procedure","",9,null],[13,"Ed25519Sign","iota_stronghold","Use the specified Ed25519 compatible key to sign the given…",3,null],[12,"private_key","iota_stronghold::Procedure","",10,null],[12,"msg","","",10,null],[4,"SLIP10DeriveInput","iota_stronghold","`SLIP10DeriveInput` type used to specify a Seed location…",null,null],[13,"Seed","","Note that BIP39 seeds are allowed to be used as SLIP10 seeds",11,null],[13,"Key","","",11,null],[4,"Location","","A `Location` type used to specify where in the…",null,null],[13,"Generic","","",12,null],[12,"vault_path","iota_stronghold::Location","",13,null],[12,"record_path","","",13,null],[13,"Counter","iota_stronghold","",12,null],[12,"vault_path","iota_stronghold::Location","",14,null],[12,"counter","","",14,null],[4,"ResultMessage","iota_stronghold","Return value used for Actor Messages. Can specify an Error…",null,null],[13,"Ok","","",15,null],[13,"Error","","",15,null],[4,"StrongholdFlags","","Policy options for modifying an entire Stronghold. Must be…",null,null],[13,"IsReadable","","",16,null],[4,"VaultFlags","","Policy options for for a specific vault. Must be specified…",null,null],[4,"Error","","",null,null],[13,"IDError","","",17,null],[13,"VaultError","","",17,null],[13,"SnapshotError","","",17,null],[0,"actors","","",null,null],[0,"client","iota_stronghold::actors","",null,null],[4,"SLIP10DeriveInput","iota_stronghold::actors::client","`SLIP10DeriveInput` type used to specify a Seed location…",null,null],[13,"Seed","","Note that BIP39 seeds are allowed to be used as SLIP10 seeds",11,null],[13,"Key","","",11,null],[4,"Procedure","","Procedure type used to call to the runtime via…",null,null],[13,"SLIP10Generate","","Generate a raw SLIP10 seed of the specified size (in…",3,null],[12,"output","iota_stronghold::actors::client::Procedure","",4,null],[12,"hint","","",4,null],[12,"size_bytes","","",4,null],[13,"SLIP10Derive","iota_stronghold::actors::client","Derive a SLIP10 child key from a seed or a parent key,…",3,null],[12,"chain","iota_stronghold::actors::client::Procedure","",5,null],[12,"input","","",5,null],[12,"output","","",5,null],[12,"hint","","",5,null],[13,"BIP39Recover","iota_stronghold::actors::client","Use a BIP39 mnemonic sentence (optionally protected by a…",3,null],[12,"mnemonic","iota_stronghold::actors::client::Procedure","",6,null],[12,"passphrase","","",6,null],[12,"output","","",6,null],[12,"hint","","",6,null],[13,"BIP39Generate","iota_stronghold::actors::client","Generate a BIP39 seed and its corresponding mnemonic…",3,null],[12,"passphrase","iota_stronghold::actors::client::Procedure","",7,null],[12,"output","","",7,null],[12,"hint","","",7,null],[13,"BIP39MnemonicSentence","iota_stronghold::actors::client","Read a BIP39 seed and its corresponding mnemonic sentence…",3,null],[12,"seed","iota_stronghold::actors::client::Procedure","",8,null],[13,"Ed25519PublicKey","iota_stronghold::actors::client","Derive an Ed25519 public key from the corresponding…",3,null],[12,"private_key","iota_stronghold::actors::client::Procedure","",9,null],[13,"Ed25519Sign","iota_stronghold::actors::client","Use the specified Ed25519 compatible key to sign the given…",3,null],[12,"private_key","iota_stronghold::actors::client::Procedure","",10,null],[12,"msg","","",10,null],[4,"ProcResult","iota_stronghold::actors::client","A Procedure return result type. Contains the different…",null,null],[13,"SLIP10Generate","","Return from generating a `SLIP10` seed.",2,null],[13,"SLIP10Derive","","Returns the public key derived from the `SLIP10Derive` call.",2,null],[13,"BIP39Recover","","`BIP39Recover` return value.",2,null],[13,"BIP39Generate","","`BIP39Generate` return value.",2,null],[13,"BIP39MnemonicSentence","","`BIP39MnemonicSentence` return value. Returns the mnemonic…",2,null],[13,"Ed25519PublicKey","","Return value for `Ed25519PublicKey`. Returns an Ed25519…",2,null],[13,"Ed25519Sign","","Return value for `Ed25519Sign`. Returns an Ed25519…",2,null],[4,"SHRequest","","",null,null],[13,"CheckVault","","",18,null],[13,"CheckRecord","","",18,null],[12,"location","iota_stronghold::actors::client::SHRequest","",19,null],[13,"WriteToStore","iota_stronghold::actors::client","",18,null],[12,"location","iota_stronghold::actors::client::SHRequest","",20,null],[12,"payload","","",20,null],[12,"lifetime","","",20,null],[13,"ReadFromStore","iota_stronghold::actors::client","",18,null],[12,"location","iota_stronghold::actors::client::SHRequest","",21,null],[13,"DeleteFromStore","iota_stronghold::actors::client","",18,null],[13,"CreateNewVault","","",18,null],[13,"WriteToVault","","",18,null],[12,"location","iota_stronghold::actors::client::SHRequest","",22,null],[12,"payload","","",22,null],[12,"hint","","",22,null],[13,"InitRecord","iota_stronghold::actors::client","",18,null],[12,"location","iota_stronghold::actors::client::SHRequest","",23,null],[13,"RevokeData","iota_stronghold::actors::client","",18,null],[12,"location","iota_stronghold::actors::client::SHRequest","",24,null],[13,"GarbageCollect","iota_stronghold::actors::client","",18,null],[13,"ListIds","","",18,null],[13,"ReadSnapshot","","",18,null],[12,"key","iota_stronghold::actors::client::SHRequest","",25,null],[12,"filename","","",25,null],[12,"path","","",25,null],[12,"cid","","",25,null],[12,"former_cid","","",25,null],[13,"WriteSnapshot","iota_stronghold::actors::client","",18,null],[12,"key","iota_stronghold::actors::client::SHRequest","",26,null],[12,"filename","","",26,null],[12,"path","","",26,null],[13,"FillSnapshot","iota_stronghold::actors::client","",18,null],[13,"ClearCache","","",18,null],[13,"ControlRequest","","",18,null],[4,"SHResults","","Messages that come from stronghold",null,null],[13,"ReturnWriteStore","","",27,null],[13,"ReturnReadStore","","",27,null],[13,"ReturnDeleteStore","","",27,null],[13,"ReturnCreateVault","","",27,null],[13,"ReturnWriteVault","","",27,null],[13,"ReturnInitRecord","","",27,null],[13,"ReturnReadVault","","",27,null],[13,"ReturnRevoke","","",27,null],[13,"ReturnGarbage","","",27,null],[13,"ReturnList","","",27,null],[13,"ReturnFillSnap","","",27,null],[13,"ReturnWriteSnap","","",27,null],[13,"ReturnReadSnap","","",27,null],[13,"ReturnClearCache","","",27,null],[13,"ReturnControlRequest","","",27,null],[13,"ReturnExistsVault","","",27,null],[13,"ReturnExistsRecord","","",27,null],[0,"internal","iota_stronghold::actors","",null,null],[3,"InternalActor","iota_stronghold::actors::internal","",null,null],[12,"client_id","","",28,null],[12,"bucket","","",28,null],[12,"keystore","","",28,null],[4,"InternalMsg","","Messages used for the KeyStore Actor.",null,null],[13,"CreateVault","","",29,null],[13,"WriteToVault","","",29,null],[13,"InitRecord","","",29,null],[13,"RevokeData","","",29,null],[13,"GarbageCollect","","",29,null],[13,"ListIds","","",29,null],[13,"ReadSnapshot","","",29,null],[13,"ReloadData","","",29,null],[13,"ClearCache","","",29,null],[13,"KillInternal","","",29,null],[13,"FillSnapshot","","",29,null],[12,"data","iota_stronghold::actors::internal::InternalMsg","",30,null],[12,"id","","",30,null],[13,"SLIP10Generate","iota_stronghold::actors::internal","",29,null],[12,"vault_id","iota_stronghold::actors::internal::InternalMsg","",31,null],[12,"record_id","","",31,null],[12,"hint","","",31,null],[12,"size_bytes","","",31,null],[13,"SLIP10DeriveFromSeed","iota_stronghold::actors::internal","",29,null],[12,"chain","iota_stronghold::actors::internal::InternalMsg","",32,null],[12,"seed_vault_id","","",32,null],[12,"seed_record_id","","",32,null],[12,"key_vault_id","","",32,null],[12,"key_record_id","","",32,null],[12,"hint","","",32,null],[13,"SLIP10DeriveFromKey","iota_stronghold::actors::internal","",29,null],[12,"chain","iota_stronghold::actors::internal::InternalMsg","",33,null],[12,"parent_vault_id","","",33,null],[12,"parent_record_id","","",33,null],[12,"child_vault_id","","",33,null],[12,"child_record_id","","",33,null],[12,"hint","","",33,null],[13,"BIP39Generate","iota_stronghold::actors::internal","",29,null],[12,"passphrase","iota_stronghold::actors::internal::InternalMsg","",34,null],[12,"vault_id","","",34,null],[12,"record_id","","",34,null],[12,"hint","","",34,null],[13,"BIP39Recover","iota_stronghold::actors::internal","",29,null],[12,"mnemonic","iota_stronghold::actors::internal::InternalMsg","",35,null],[12,"passphrase","","",35,null],[12,"vault_id","","",35,null],[12,"record_id","","",35,null],[12,"hint","","",35,null],[13,"Ed25519PublicKey","iota_stronghold::actors::internal","",29,null],[12,"vault_id","iota_stronghold::actors::internal::InternalMsg","",36,null],[12,"record_id","","",36,null],[13,"Ed25519Sign","iota_stronghold::actors::internal","",29,null],[12,"vault_id","iota_stronghold::actors::internal::InternalMsg","",37,null],[12,"record_id","","",37,null],[12,"msg","","",37,null],[4,"InternalResults","iota_stronghold::actors::internal","Messages used internally by the client.",null,null],[13,"ReturnCreateVault","","",38,null],[13,"ReturnWriteVault","","",38,null],[13,"ReturnInitRecord","","",38,null],[13,"ReturnReadVault","","",38,null],[13,"ReturnRevoke","","",38,null],[13,"ReturnGarbage","","",38,null],[13,"ReturnList","","",38,null],[13,"ReturnWriteSnap","","",38,null],[13,"ReturnControlRequest","","",38,null],[13,"RebuildCache","","",38,null],[13,"ReturnClearCache","","",38,null],[0,"snapshot","iota_stronghold::actors","",null,null],[4,"SMsg","iota_stronghold::actors::snapshot","Messages used for the Snapshot Actor.",null,null],[13,"WriteSnapshot","","",39,null],[12,"key","iota_stronghold::actors::snapshot::SMsg","",40,null],[12,"filename","","",40,null],[12,"path","","",40,null],[13,"FillSnapshot","iota_stronghold::actors::snapshot","",39,null],[12,"data","iota_stronghold::actors::snapshot::SMsg","",41,null],[12,"id","","",41,null],[13,"ReadFromSnapshot","iota_stronghold::actors::snapshot","",39,null],[12,"key","iota_stronghold::actors::snapshot::SMsg","",42,null],[12,"filename","","",42,null],[12,"path","","",42,null],[12,"id","","",42,null],[12,"fid","","",42,null],[0,"bucket","iota_stronghold","",null,null],[3,"Bucket","iota_stronghold::bucket","A `Bucket` cache of the Data for stronghold. Contains a…",null,null],[12,"vaults","","",43,null],[12,"cache","","",43,null],[5,"write_to_read","","",null,[[["writerequest",3]],["readresult",3]]],[6,"Store","","",null,null],[11,"new","","Creates a new `Bucket`.",43,[[]]],[11,"get_vault_record_ids","","Gets the Vault `RecordIds` when given a `Key<P>`. Returns…",43,[[["key",3]],[["vec",3],["recordid",3]]]],[11,"create_and_init_vault","","Creates and initializes a new Vault given a `Key<P>`.…",43,[[["recordid",3],["key",3]],["recordid",3]]],[11,"read_data","","Reads data from a Record in the Vault given a `RecordId`.…",43,[[["recordid",3],["key",3]],["vec",3]]],[11,"record_exists_in_vault","","",43,[[["recordid",3],["key",3]]]],[11,"init_record","","Initializes a new Record in the Vault based on the…",43,[[["recordid",3],["key",3]],["recordid",3]]],[11,"write_payload","","Writes a payload of `Vec<u8>` and a `RecordHint` into a…",43,[[["vec",3],["key",3],["recordhint",3],["recordid",3]]]],[11,"revoke_data","","Marks a record for deletion based on a given `Key<P>` and…",43,[[["recordid",3],["key",3]]]],[11,"garbage_collect","","Garbage Collects any deletion marked Records in the given…",43,[[["key",3]]]],[11,"list_ids","","Lists the `RecordId`s and `RecordHint`s for a given Vault.…",43,[[["key",3]],["vec",3]]],[11,"repopulate_data","","Repopulates the data in the Bucket given a Vec of state…",43,[[["key",3],["vec",3],["hashmap",3]]]],[11,"get_data","","",43,[[],[["vec",3],["hashmap",3],["key",3]]]],[11,"clear_cache","","",43,[[]]],[11,"take","","Exposes the `DBView` of the current vault and the cache…",43,[[["key",3]]]],[11,"get_view","","",43,[[["readresult",3],["vec",3],["key",3]],[["dbview",3],["option",4]]]],[11,"insert_view","","",43,[[["dbview",3],["option",4],["key",3]]]],[11,"get_reads","","",43,[[["key",3]],[["option",4],["vec",3]]]],[11,"insert_reads","","",43,[[["readresult",3],["vec",3],["key",3]]]],[0,"client","iota_stronghold","",null,null],[3,"Client","iota_stronghold::client","A `Client` Cache Actor which routes external messages to…",null,null],[12,"client_id","","",44,null],[12,"vaults","","",44,null],[12,"heads","","",44,null],[12,"counters","","",44,null],[12,"store","","",44,null],[4,"ReadWrite","","",null,null],[13,"Read","","",45,null],[13,"Write","","",45,null],[4,"ClientMsg","","",null,null],[13,"SHResults","","",46,null],[13,"SHRequest","","",46,null],[13,"InternalResults","","",46,null],[6,"Store","","",null,null],[11,"new","","Creates a new Client given a `ClientID` and…",44,[[["clientid",3]]]],[11,"write_to_store","","Write unencrypted data to the store. Returns `None` if the…",44,[[["duration",3],["vec",3],["option",4]],[["vec",3],["option",4]]]],[11,"read_from_store","","Attempts to read the data from the store. Returns…",44,[[["vec",3]],[["vec",3],["option",4]]]],[11,"store_delete_item","","Deletes an item from the store by the given key.",44,[[["vec",3]]]],[11,"store_key_exists","","Checks to see if the key exists in the store.",44,[[["vec",3]]]],[11,"set_client_id","","",44,[[["clientid",3]]]],[11,"add_new_vault","","",44,[[["vaultid",3]]]],[11,"add_record_to_vault","","",44,[[["vaultid",3],["recordid",3]]]],[11,"increment_counter","","",44,[[["vaultid",3]]]],[11,"get_head","","Get the head of a vault.",44,[[["vec",3]],["recordid",3]]],[11,"clear_cache","","Empty the Client Cache.",44,[[],["option",4]]],[11,"rebuild_cache","","",44,[[["client",3]]]],[11,"resolve_location","","",44,[[["asref",8],["readwrite",4],["location",4]]]],[11,"derive_vault_id","","",44,[[["asref",8],["vec",3]],["vaultid",3]]],[11,"derive_record_id","","",44,[[["asref",8],["vec",3]],["recordid",3]]],[11,"get_client_str","","",44,[[],["string",3]]],[11,"record_exists_in_vault","","",44,[[["vaultid",3],["recordid",3]]]],[11,"vault_exist","","",44,[[["vaultid",3]]]],[11,"get_index_from_record_id","","",44,[[["asref",8],["vec",3],["recordid",3]]]],[11,"get_index","","",44,[[["vaultid",3]],["option",4]]],[11,"get_counter","","",44,[[["vaultid",3]]]],[0,"interface","iota_stronghold","",null,null],[3,"Stronghold","iota_stronghold::interface","Main Interface for the Stronghold System. Contains the…",null,null],[12,"system","","",1,null],[12,"client_ids","","",1,null],[12,"actors","","",1,null],[12,"derive_data","","",1,null],[12,"current_target","","",1,null],[11,"init_stronghold_system","iota_stronghold","Initializes a new instance of the system. Sets up the…",1,[[["actorsystem",3],["vec",3],["vec",3],["strongholdflags",4]]]],[11,"spawn_stronghold_actor","","Spawns a new set of actors for the Stronghold system.…",1,[[["strongholdflags",4],["vec",3],["vec",3]],["statusmessage",6]]],[11,"switch_actor_target","","Switches the actor target to another actor in the system…",1,[[["vec",3]],["statusmessage",6]]],[11,"write_to_vault","","Writes data into the Stronghold. Uses the current target…",1,[[["vec",3],["recordhint",3],["location",4],["vaultflags",4],["vec",3]]]],[11,"write_to_store","","Writes data into an insecure cache. This method, accepts a…",1,[[["vec",3],["location",4],["duration",3],["option",4]]]],[11,"read_from_store","","A method that reads from an insecure cache. This method,…",1,[[["location",4]]]],[11,"delete_from_store","","A method to delete data from an insecure cache. This…",1,[[["location",4]]]],[11,"delete_data","","Revokes the data from the specified location of type…",1,[[["location",4]]]],[11,"garbage_collect","","Garbage collects any revokes in a Vault based on the given…",1,[[["vec",3]]]],[11,"list_hints_and_ids","","Returns a list of the available records and their…",1,[[["vec",3],["into",8]]]],[11,"runtime_exec","","Executes a runtime command given a `Procedure`. Returns a…",1,[[["procedure",4]]]],[11,"read_snapshot","","Reads data from a given snapshot file. Can only read the…",1,[[["vec",3],["string",3],["option",4],["option",4],["pathbuf",3],["option",4]]]],[11,"write_all_to_snapshot","","Writes the entire state of the `Stronghold` into a…",1,[[["pathbuf",3],["string",3],["option",4],["option",4]]]],[11,"kill_stronghold","","Used to kill a stronghold actor or clear the cache of the…",1,[[["vec",3]]]],[11,"check_config_flags","","",1,[[]]],[0,"internals","","",null,null],[0,"provider","iota_stronghold::internals","",null,null],[3,"Provider","iota_stronghold::internals::provider","Provider for the xchacha20poly1305 encryption engine.…",null,null],[18,"NONCE_LEN","iota_stronghold","",47,null],[18,"TAG_LEN","","",47,null],[0,"key_store","","",null,null],[3,"KeyStore","iota_stronghold::key_store","",null,null],[12,"store","","",48,null],[11,"new","","Creates a new `KeyStore`.",48,[[]]],[11,"get_key","","Gets the key from the `KeyStore` and removes it. Returns…",48,[[["vaultid",3]],[["option",4],["key",3]]]],[11,"vault_exists","","",48,[[["vaultid",3]]]],[11,"create_key","","Returns an existing key for the `id` or creates one.",48,[[["vaultid",3]],["key",3]]],[11,"insert_key","","Inserts a key into the `KeyStore` by `VaultId`. If the…",48,[[["vaultid",3],["key",3]],["key",3]]],[11,"rebuild_keystore","","Rebuilds the `KeyStore` while throwing out any existing…",48,[[["hashmap",3],["vaultid",3],["key",3]]]],[11,"get_data","","",48,[[],[["key",3],["vaultid",3],["hashmap",3]]]],[11,"clear_keys","","",48,[[]]],[0,"snapshot","iota_stronghold","",null,null],[3,"Snapshot","iota_stronghold::snapshot","",null,null],[12,"state","","",49,null],[3,"SnapshotState","","",null,null],[12,"0","","",50,null],[11,"new","","Creates a new `Snapshot` from a buffer of `Vec<u8>` state.",49,[[["snapshotstate",3]]]],[11,"get_state","","",49,[[["clientid",3]]]],[11,"has_data","","",49,[[["clientid",3]]]],[11,"read_from_snapshot","","Reads state from the specified named snapshot or the…",49,[[["key",6],["option",4],["path",3],["option",4]],["result",6]]],[11,"write_to_snapshot","","Writes state to the specified named snapshot or the…",49,[[["key",6],["option",4],["path",3],["option",4]],["result",6]]],[11,"new","","",50,[[["clientid",3]]]],[11,"add_data","","",50,[[["clientid",3]]]],[11,"serialize","","",50,[[],["vec",3]]],[11,"deserialize","","",50,[[["vec",3]]]],[0,"utils","iota_stronghold","",null,null],[5,"index_of_unchecked","iota_stronghold::utils","",null,[[]]],[0,"ask","","",null,null],[3,"AskActor","iota_stronghold::utils::ask","",null,null],[12,"tx","","",51,null],[5,"ask","","",null,[[],["remotehandle",3]]],[11,"boxed","","",51,[[["arc",3],["mutex",3]],["boxactor",6]]],[0,"hd","iota_stronghold::utils","",null,null],[3,"Seed","iota_stronghold::utils::hd","A seed is an arbitrary bytestring used to create the root…",null,null],[12,"0","","",52,null],[3,"Key","","",null,null],[12,"0","","",53,null],[3,"Segment","","",null,null],[12,"hardened","","",54,null],[12,"bs","","",54,null],[3,"Chain","","",null,null],[12,"0","","",55,null],[4,"Error","","",null,null],[13,"NotSupported","","",56,null],[13,"InvalidLength","","",56,null],[13,"CryptoError","","",56,null],[6,"ChainCode","","",null,null],[11,"from_bytes","","",52,[[]]],[11,"to_master_key","","",52,[[],["key",3]]],[11,"derive","","",52,[[["chain",3]],[["key",3],["result",4],["error",4]]]],[11,"secret_key","","",53,[[],[["result",4],["error",4],["secretkey",3]]]],[11,"chain_code","","",53,[[],["chaincode",6]]],[11,"child_key","","",53,[[["segment",3]],[["key",3],["result",4],["error",4]]]],[11,"derive","","",53,[[["chain",3]],[["key",3],["result",4],["error",4]]]],[11,"from_u32","","",54,[[]]],[18,"HARDEN_MASK","","",54,null],[11,"empty","","",55,[[]]],[11,"from_u32","","",55,[[["intoiterator",8]]]],[11,"from_u32_hardened","","",55,[[["intoiterator",8]]]],[11,"join","","",55,[[["asref",8],["chain",3]]]],[0,"ids","iota_stronghold::utils","",null,null],[3,"ClientId","iota_stronghold::utils::ids","TODO: Implement Messages to interact with Stronghold…",null,null],[12,"0","","",57,null],[3,"VaultId","","",null,null],[12,"0","","",58,null],[3,"ID","","",null,null],[12,"0","","",59,null],[8,"LoadFromPath","","",null,null],[10,"load_from_path","","",60,[[],["result",6]]],[11,"random","","",59,[[],["result",6]]],[11,"load","","",59,[[],["result",6]]],[11,"random","","",58,[[],["result",6]]],[11,"load","","",58,[[],["result",6]]],[11,"random","","",57,[[],["result",6]]],[11,"load","","",57,[[],["result",6]]],[0,"types","iota_stronghold::utils","",null,null],[3,"Secret","iota_stronghold::utils::types","",null,null],[12,"value","","",61,null],[4,"ResultMessage","","Return value used for Actor Messages. Can specify an Error…",null,null],[13,"Ok","","",15,null],[13,"Error","","",15,null],[4,"Location","","A `Location` type used to specify where in the…",null,null],[13,"Generic","","",12,null],[12,"vault_path","iota_stronghold::utils::types::Location","",13,null],[12,"record_path","","",13,null],[13,"Counter","iota_stronghold::utils::types","",12,null],[12,"vault_path","iota_stronghold::utils::types::Location","",14,null],[12,"counter","","",14,null],[4,"StrongholdFlags","iota_stronghold::utils::types","Policy options for modifying an entire Stronghold. Must be…",null,null],[13,"IsReadable","","",16,null],[4,"VaultFlags","","Policy options for for a specific vault. Must be specified…",null,null],[6,"StatusMessage","","A type alias for the empty `ResultMessage<()>` type.",null,null],[8,"ReadSecret","","",null,null],[10,"read_secret","","",62,[[]]],[8,"CloneSecret","","",null,null],[8,"SerializeSecret","","",null,null],[18,"OK","iota_stronghold","",15,null],[11,"vault_path","","Gets the vault_path from the Location.",12,[[]]],[11,"generic","","Creates a generic location from types that implement…",12,[[["vec",3],["into",8]]]],[11,"counter","","Creates a counter location from a type that implements…",12,[[["option",4],["vec",3],["into",8],["into",8]]]],[11,"const_generic","","Used to generate a constant generic location.",12,[[["vec",3]]]],[11,"const_counter","","used to generate a constant counter location.",12,[[["vec",3],["option",4]]]],[11,"new","iota_stronghold::utils::types","",61,[[]]],[0,"hd","iota_stronghold","",null,null],[3,"Seed","iota_stronghold::hd","A seed is an arbitrary bytestring used to create the root…",null,null],[12,"0","","",52,null],[3,"Key","","",null,null],[12,"0","","",53,null],[3,"Segment","","",null,null],[12,"hardened","","",54,null],[12,"bs","","",54,null],[3,"Chain","","",null,null],[12,"0","","",55,null],[4,"Error","","",null,null],[13,"NotSupported","","",56,null],[13,"InvalidLength","","",56,null],[13,"CryptoError","","",56,null],[6,"ChainCode","","",null,null],[6,"StatusMessage","iota_stronghold","A type alias for the empty `ResultMessage<()>` type.",null,null],[6,"Result","","",null,null],[14,"line_error","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"base64","","",0,[[],["string",3]]],[11,"encode_hex","","",0,[[]]],[11,"encode_hex_upper","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","iota_stronghold::actors::client","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","iota_stronghold::actors::internal","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","iota_stronghold::actors::snapshot","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","iota_stronghold::bucket","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","iota_stronghold::client","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","iota_stronghold::key_store","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","iota_stronghold::snapshot","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"create","","",49,[[]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","iota_stronghold::utils::ask","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","iota_stronghold::utils::hd","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","iota_stronghold::utils::ids","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"base64","","",57,[[],["string",3]]],[11,"encode_hex","","",57,[[]]],[11,"encode_hex_upper","","",57,[[]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"base64","","",58,[[],["string",3]]],[11,"encode_hex","","",58,[[]]],[11,"encode_hex_upper","","",58,[[]]],[11,"vzip","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"base64","","",59,[[],["string",3]]],[11,"encode_hex","","",59,[[]]],[11,"encode_hex_upper","","",59,[[]]],[11,"vzip","","",59,[[]]],[11,"from","iota_stronghold::utils::types","",61,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"deserialize","iota_stronghold","",0,[[],[["result",4],["recordhint",3]]]],[11,"cmp","","",0,[[["recordhint",3]],["ordering",4]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",0,[[["recordhint",3]]]],[11,"ne","","",0,[[["recordhint",3]]]],[11,"serialize","","",0,[[],["result",4]]],[11,"clone","","",0,[[],["recordhint",3]]],[11,"hash","","",0,[[]]],[11,"from","","",0,[[],["recordhint",3]]],[11,"as_ref","","",0,[[]]],[11,"partial_cmp","","",0,[[["recordhint",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["recordhint",3]]]],[11,"le","","",0,[[["recordhint",3]]]],[11,"gt","","",0,[[["recordhint",3]]]],[11,"ge","","",0,[[["recordhint",3]]]],[11,"load_from_path","iota_stronghold::utils::ids","",59,[[],["result",6]]],[11,"load_from_path","","",58,[[],["result",6]]],[11,"load_from_path","","",57,[[],["result",6]]],[11,"read_secret","iota_stronghold::utils::types","",61,[[]]],[11,"drop","","",61,[[]]],[11,"as_ref","iota_stronghold::utils::hd","",55,[[]]],[11,"as_ref","iota_stronghold::utils::ids","",59,[[]]],[11,"as_ref","","",58,[[]]],[11,"as_ref","","",57,[[]]],[11,"as_ref","iota_stronghold","",12,[[],["location",4]]],[11,"from","iota_stronghold::utils::types","",61,[[]]],[11,"from","iota_stronghold","",17,[[["error",4]]]],[11,"from","","",17,[[["error",4]]]],[11,"into","iota_stronghold::actors::client","",27,[[],["clientmsg",4]]],[11,"into","","",18,[[],["clientmsg",4]]],[11,"into","iota_stronghold::actors::internal","",38,[[],["clientmsg",4]]],[11,"into","iota_stronghold::utils::hd","",53,[[],["vec",3]]],[11,"into","iota_stronghold::utils::ids","",58,[[],["vec",3]]],[11,"into","","",57,[[],["vec",3]]],[11,"into","","",57,[[],["string",3]]],[11,"into","","",58,[[],["string",3]]],[11,"clone","iota_stronghold","",11,[[],["slip10deriveinput",4]]],[11,"clone","","",3,[[],["procedure",4]]],[11,"clone","","",2,[[],["procresult",4]]],[11,"clone","iota_stronghold::actors::client","",18,[[],["shrequest",4]]],[11,"clone","","",27,[[],["shresults",4]]],[11,"clone","iota_stronghold::actors::internal","",29,[[],["internalmsg",4]]],[11,"clone","","",38,[[],["internalresults",4]]],[11,"clone","iota_stronghold::actors::snapshot","",39,[[],["smsg",4]]],[11,"clone","iota_stronghold::client","",44,[[],["client",3]]],[11,"clone","","",46,[[],["clientmsg",4]]],[11,"clone","iota_stronghold","",47,[[],["provider",3]]],[11,"clone","iota_stronghold::snapshot","",49,[[],["snapshot",3]]],[11,"clone","","",50,[[],["snapshotstate",3]]],[11,"clone","iota_stronghold::utils::hd","",53,[[],["key",3]]],[11,"clone","","",54,[[],["segment",3]]],[11,"clone","","",55,[[],["chain",3]]],[11,"clone","iota_stronghold::utils::ids","",57,[[],["clientid",3]]],[11,"clone","","",58,[[],["vaultid",3]]],[11,"clone","","",59,[[],["id",3]]],[11,"clone","iota_stronghold","",15,[[],["resultmessage",4]]],[11,"clone","","",12,[[],["location",4]]],[11,"clone","iota_stronghold::utils::types","",61,[[]]],[11,"default","iota_stronghold::snapshot","",50,[[],["snapshotstate",3]]],[11,"default","iota_stronghold::utils::hd","",55,[[],["chain",3]]],[11,"default","iota_stronghold::utils::ids","",57,[[],["clientid",3]]],[11,"default","","",59,[[],["id",3]]],[11,"cmp","iota_stronghold","",47,[[["provider",3]],["ordering",4]]],[11,"cmp","iota_stronghold::utils::ids","",57,[[["clientid",3]],["ordering",4]]],[11,"cmp","","",58,[[["vaultid",3]],["ordering",4]]],[11,"cmp","","",59,[[["id",3]],["ordering",4]]],[11,"eq","iota_stronghold","",47,[[["provider",3]]]],[11,"eq","iota_stronghold::utils::ids","",57,[[["clientid",3]]]],[11,"ne","","",57,[[["clientid",3]]]],[11,"eq","","",58,[[["vaultid",3]]]],[11,"ne","","",58,[[["vaultid",3]]]],[11,"eq","","",59,[[["id",3]]]],[11,"ne","","",59,[[["id",3]]]],[11,"eq","iota_stronghold","",15,[[["resultmessage",4]]]],[11,"ne","","",15,[[["resultmessage",4]]]],[11,"partial_cmp","","",47,[[["provider",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","iota_stronghold::utils::ids","",57,[[["clientid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",57,[[["clientid",3]]]],[11,"le","","",57,[[["clientid",3]]]],[11,"gt","","",57,[[["clientid",3]]]],[11,"ge","","",57,[[["clientid",3]]]],[11,"partial_cmp","","",58,[[["vaultid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",58,[[["vaultid",3]]]],[11,"le","","",58,[[["vaultid",3]]]],[11,"gt","","",58,[[["vaultid",3]]]],[11,"ge","","",58,[[["vaultid",3]]]],[11,"partial_cmp","","",59,[[["id",3]],[["ordering",4],["option",4]]]],[11,"lt","","",59,[[["id",3]]]],[11,"le","","",59,[[["id",3]]]],[11,"gt","","",59,[[["id",3]]]],[11,"ge","","",59,[[["id",3]]]],[11,"fmt","iota_stronghold","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","iota_stronghold::actors::client","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","iota_stronghold::actors::internal","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","iota_stronghold::actors::snapshot","",39,[[["formatter",3]],["result",6]]],[11,"fmt","iota_stronghold::client","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","iota_stronghold","",47,[[["formatter",3]],["result",6]]],[11,"fmt","iota_stronghold::snapshot","",50,[[["formatter",3]],["result",6]]],[11,"fmt","iota_stronghold::utils::hd","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","iota_stronghold::utils::ids","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","iota_stronghold","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"hash","iota_stronghold::utils::ids","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"try_from","iota_stronghold::utils::hd","",53,[[],["result",4]]],[11,"try_from","iota_stronghold::utils::ids","",59,[[],["result",4]]],[11,"try_from","","",59,[[["vec",3]],["result",4]]],[11,"try_from","","",57,[[["vec",3]],["result",4]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_from","","",58,[[["vec",3]],["result",4]]],[11,"try_from","","",58,[[],["result",4]]],[11,"source","iota_stronghold","",17,[[],[["option",4],["error",8]]]],[11,"deserialize","iota_stronghold::client","",44,[[],["result",4]]],[11,"deserialize","iota_stronghold::snapshot","",50,[[],["result",4]]],[11,"deserialize","iota_stronghold::utils::ids","",57,[[],["result",4]]],[11,"deserialize","","",58,[[],["result",4]]],[11,"deserialize","","",59,[[],["result",4]]],[11,"deserialize","iota_stronghold::utils::types","",61,[[],["result",4]]],[11,"serialize","iota_stronghold::client","",44,[[],["result",4]]],[11,"serialize","iota_stronghold::snapshot","",50,[[],["result",4]]],[11,"serialize","iota_stronghold::utils::ids","",57,[[],["result",4]]],[11,"serialize","","",58,[[],["result",4]]],[11,"serialize","","",59,[[],["result",4]]],[11,"serialize","iota_stronghold::utils::types","",61,[[],["result",4]]],[11,"box_key_len","iota_stronghold","",47,[[]]],[11,"box_overhead","","",47,[[]]],[11,"box_seal","","",47,[[["key",3]],[["result",6],["vec",3]]]],[11,"box_open","","",47,[[["key",3]],[["result",6],["vec",3]]]],[11,"random_buf","","",47,[[],["result",6]]],[11,"create","iota_stronghold::snapshot","",49,[[]]],[11,"create_args","iota_stronghold::client","",44,[[["clientid",3]]]],[11,"create_args","iota_stronghold::actors::internal","",28,[[["clientid",3]]]],[11,"recv","iota_stronghold::client","",44,[[["sender",6],["context",3]]]],[11,"recv","iota_stronghold::actors::internal","",28,[[["sender",6],["context",3]]]],[11,"recv","iota_stronghold::snapshot","",49,[[["sender",6],["context",3]]]],[11,"recv","iota_stronghold::utils::ask","",51,[[["sender",6],["context",3]]]],[11,"receive","iota_stronghold::client","",44,[[["shresults",4],["context",3],["sender",6]]]],[11,"receive","","",44,[[["shrequest",4],["context",3],["sender",6]]]],[11,"receive","","",44,[[["sender",6],["context",3],["internalresults",4]]]],[11,"receive","iota_stronghold::actors::internal","",28,[[["context",3],["sender",6]]]],[11,"receive","iota_stronghold::snapshot","",49,[[["context",3],["sender",6]]]],[11,"receive","iota_stronghold::client","",44,[[["clientmsg",4],["option",4],["context",3],["basicactorref",3]]]],[11,"new","iota_stronghold","create a new random Id for hint",0,[[],[["recordhint",3],["error",4],["result",4]]]]],"p":[[3,"RecordHint"],[3,"Stronghold"],[4,"ProcResult"],[4,"Procedure"],[13,"SLIP10Generate"],[13,"SLIP10Derive"],[13,"BIP39Recover"],[13,"BIP39Generate"],[13,"BIP39MnemonicSentence"],[13,"Ed25519PublicKey"],[13,"Ed25519Sign"],[4,"SLIP10DeriveInput"],[4,"Location"],[13,"Generic"],[13,"Counter"],[4,"ResultMessage"],[4,"StrongholdFlags"],[4,"Error"],[4,"SHRequest"],[13,"CheckRecord"],[13,"WriteToStore"],[13,"ReadFromStore"],[13,"WriteToVault"],[13,"InitRecord"],[13,"RevokeData"],[13,"ReadSnapshot"],[13,"WriteSnapshot"],[4,"SHResults"],[3,"InternalActor"],[4,"InternalMsg"],[13,"FillSnapshot"],[13,"SLIP10Generate"],[13,"SLIP10DeriveFromSeed"],[13,"SLIP10DeriveFromKey"],[13,"BIP39Generate"],[13,"BIP39Recover"],[13,"Ed25519PublicKey"],[13,"Ed25519Sign"],[4,"InternalResults"],[4,"SMsg"],[13,"WriteSnapshot"],[13,"FillSnapshot"],[13,"ReadFromSnapshot"],[3,"Bucket"],[3,"Client"],[4,"ReadWrite"],[4,"ClientMsg"],[3,"Provider"],[3,"KeyStore"],[3,"Snapshot"],[3,"SnapshotState"],[3,"AskActor"],[3,"Seed"],[3,"Key"],[3,"Segment"],[3,"Chain"],[4,"Error"],[3,"ClientId"],[3,"VaultId"],[3,"ID"],[8,"LoadFromPath"],[3,"Secret"],[8,"ReadSecret"],[4,"VaultFlags"]]},\
"primitives":{"doc":"","i":[[0,"auth","primitives","A general purpose API for Cryptographic Primitives. This…",null,null],[3,"MessageAuthCodeInfo","primitives::auth","Message Authentication Code information block",null,null],[12,"id","","the ID for the MAC",0,null],[12,"one_time","","indicates whether or not the MAC a one shot",0,null],[12,"len","","length of the MAC",0,null],[12,"mac_lens","","A range of the supported MAC lengths",0,null],[12,"key_lens","","A range of the supported key lengths",0,null],[8,"MessageAuthCode","","a Message authentication interface (MAC) that is stateless…",null,null],[10,"info","","get the info about the MAC",1,[[],["messageauthcodeinfo",3]]],[10,"auth","","authenticate the `data` using the `key` through the `buf`…",1,[[],[["result",4],["box",3]]]],[8,"VarLenMessageAuthCode","","an extension for a Variable length Message Authentication…",null,null],[10,"varlen_auth","","Authenticates the `data` using a `key` through the `buf`…",2,[[],[["result",4],["box",3]]]],[0,"cipher","primitives","Cipher",null,null],[3,"CipherInfo","primitives::cipher","A block of information about the implemented Cipher",null,null],[12,"id","","The cipher id",3,null],[12,"one_time","","Indicates whether or not the cipher is one time.",3,null],[12,"key_lens","","A range of supported key lengths",3,null],[12,"nonce_lens","","A range of supported nonce lengths",3,null],[12,"tag_lens","","A range of supported AEAD tag lengths. Without AEAD this…",3,null],[8,"Cipher","","A one shot stateless cipher. Implements the `SecretKeyGen`…",null,null],[10,"info","","returns cipher info block",4,[[],["cipherinfo",3]]],[10,"predict_encrypted_max","","predicts the max encrypted cipher length given a…",4,[[]]],[10,"encrypt","","encrypts the plaintext in-place and returns the cipher\'s…",4,[[],[["result",4],["box",3]]]],[10,"encrypt_to","","encrypts the plaintext and returns the plaintext\'s length.…",4,[[],[["result",4],["box",3]]]],[10,"decrypt","","decrypts the cipher\'s bytes in-place and returns the…",4,[[],[["result",4],["box",3]]]],[10,"decrypt_to","","decrypts the ciphertext and returns the plaintext\'s…",4,[[],[["result",4],["box",3]]]],[8,"AeadCipher","","an AEAD Extension for the Cipher",null,null],[10,"seal","","Seals the Plaintext bytes in place with AEAD and returns…",5,[[],[["result",4],["box",3]]]],[10,"seal_with","","Seals the plaintext and returns the Cipher\'s length using…",5,[[],[["result",4],["box",3]]]],[10,"open","","Opens the Ciphertext length in-place and returns the…",5,[[],[["result",4],["box",3]]]],[10,"open_to","","Opens the Ciphertext and returns the plaintext length…",5,[[],[["result",4],["box",3]]]],[0,"hash","primitives","Hash",null,null],[3,"HashInfo","primitives::hash","An information block describing a Hash.",null,null],[12,"id","","A id of hash",6,null],[12,"hash_len","","The hash\'s length",6,null],[12,"hash_lens","","A range for supported hash lengths",6,null],[8,"Hash","","A Hash interface",null,null],[10,"info","","Get the information block that describes the hash",7,[[],["hashinfo",3]]],[10,"hash","","hashes data and returns the hash length. `buf` contains…",7,[[],[["result",4],["box",3]]]],[8,"VarLenHash","","a variable length hash",null,null],[10,"var_len_hash","","hashes the data and returns the hash length. `buf`…",8,[[],[["result",4],["box",3]]]],[0,"key_derv_func","primitives","Key derive function",null,null],[3,"KeyDervFuncInfo","primitives::key_derv_func","A key derivation function info block",null,null],[12,"id","","The key derive function id",9,null],[12,"output_lens","","A range of the supported output lengths",9,null],[12,"key_lens","","A range of the supported key lengths",9,null],[12,"salt_lens","","A range of the supported salt lengths",9,null],[12,"info_lens","","A range of the supported info lengths",9,null],[8,"KeyDervFunc","","A key derivation function interface",null,null],[10,"info","","returns the information block about the key derivation…",10,[[],["keydervfuncinfo",3]]],[10,"derive","","derive bytes from the base key with salt and info. Outputs…",10,[[],[["box",3],["result",4]]]],[0,"pbkdf","primitives","PBKDF",null,null],[3,"PbkdfInfo","primitives::pbkdf","information block describing the PBKDF implementation.",null,null],[12,"id","","the id of the PBKDF",11,null],[12,"output_lens","","A range of the supported output lengths",11,null],[12,"password_lens","","A range of the supported password lengths",11,null],[12,"salt_lens","","A range of the supported salt lengths",11,null],[12,"cpu_cost","","the default CPU cost",11,null],[12,"cpu_costs","","supported CPU costs",11,null],[12,"memory_cost","","the default memory costs",11,null],[12,"memory_costs","","A range of the supported CPU costs",11,null],[12,"parallelism","","default parallelism which is 0 if PBKDF does not support…",11,null],[12,"parallelisms","","Range of supported parallelism.",11,null],[8,"Pbkdf","","A PBKDF",null,null],[10,"info","","returns the info of the PBKDF",12,[[],["pbkdfinfo",3]]],[10,"derive","","fills the buffer with bytes derived from the password…",12,[[],[["box",3],["result",4]]]],[8,"StatelessPbkdf","","A memory hardened PBKDF",null,null],[10,"derive_stateless","","fills the buffer with bytes derived from the password…",13,[[],[["box",3],["result",4]]]],[0,"rng","primitives","Random Number Generator",null,null],[8,"SecureRng","primitives::rng","a Random Number Generator",null,null],[10,"random","","fills the buffer with secure random data. `buf` is the…",14,[[],[["box",3],["result",4]]]],[8,"DeterministicRng","","A deterministic Random Number Generator Extension",null,null],[10,"reseed","","reseeds the random number generator with a seed.",15,[[],[["box",3],["result",4]]]],[8,"SecretKeyGen","","A secret key generation algorithm",null,null],[10,"new_secret_key","","generate a new private key in the buffer. `buf` is the…",16,[[["securerng",8]],[["result",4],["box",3]]]],[8,"PublicKeyGen","","A public key generation algorithm",null,null],[10,"get_pub_key","","generate a new public key in the buffer. `buf` is the…",17,[[],[["result",4],["box",3]]]],[0,"signing","primitives","Asymmetric Signing",null,null],[3,"SignInfo","primitives::signing","Signature information block",null,null],[12,"id","","the signature ID",18,null],[12,"sig_lens","","Range of supported signature lengths",18,null],[12,"secret_key_lens","","Range of supported secret/private key lengths",18,null],[12,"public_key_lens","","Range of supported public key lengths.",18,null],[8,"Sign","","",null,null],[10,"info","","returns info about the signer",19,[[],["signinfo",3]]],[10,"sign","","signs data in the buffer using the secret key and returns…",19,[[],[["result",4],["box",3]]]],[10,"verify","","verify the signature for the data with the public key.…",19,[[],[["box",3],["result",4]]]],[11,"from","primitives::auth","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","primitives::cipher","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","primitives::hash","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","primitives::key_derv_func","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","primitives::pbkdf","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","primitives::signing","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"clone","primitives::auth","",0,[[],["messageauthcodeinfo",3]]],[11,"clone","primitives::cipher","",3,[[],["cipherinfo",3]]],[11,"clone","primitives::hash","",6,[[],["hashinfo",3]]],[11,"clone","primitives::key_derv_func","",9,[[],["keydervfuncinfo",3]]],[11,"clone","primitives::pbkdf","",11,[[],["pbkdfinfo",3]]],[11,"clone","primitives::signing","",18,[[],["signinfo",3]]],[11,"eq","primitives::auth","",0,[[["messageauthcodeinfo",3]]]],[11,"ne","","",0,[[["messageauthcodeinfo",3]]]],[11,"eq","primitives::cipher","",3,[[["cipherinfo",3]]]],[11,"ne","","",3,[[["cipherinfo",3]]]],[11,"eq","primitives::hash","",6,[[["hashinfo",3]]]],[11,"ne","","",6,[[["hashinfo",3]]]],[11,"eq","primitives::key_derv_func","",9,[[["keydervfuncinfo",3]]]],[11,"ne","","",9,[[["keydervfuncinfo",3]]]],[11,"eq","primitives::pbkdf","",11,[[["pbkdfinfo",3]]]],[11,"ne","","",11,[[["pbkdfinfo",3]]]],[11,"eq","primitives::signing","",18,[[["signinfo",3]]]],[11,"ne","","",18,[[["signinfo",3]]]],[11,"fmt","primitives::auth","",0,[[["formatter",3]],["result",6]]],[11,"fmt","primitives::cipher","",3,[[["formatter",3]],["result",6]]],[11,"fmt","primitives::hash","",6,[[["formatter",3]],["result",6]]],[11,"fmt","primitives::key_derv_func","",9,[[["formatter",3]],["result",6]]],[11,"fmt","primitives::pbkdf","",11,[[["formatter",3]],["result",6]]],[11,"fmt","primitives::signing","",18,[[["formatter",3]],["result",6]]]],"p":[[3,"MessageAuthCodeInfo"],[8,"MessageAuthCode"],[8,"VarLenMessageAuthCode"],[3,"CipherInfo"],[8,"Cipher"],[8,"AeadCipher"],[3,"HashInfo"],[8,"Hash"],[8,"VarLenHash"],[3,"KeyDervFuncInfo"],[8,"KeyDervFunc"],[3,"PbkdfInfo"],[8,"Pbkdf"],[8,"StatelessPbkdf"],[8,"SecureRng"],[8,"DeterministicRng"],[8,"SecretKeyGen"],[8,"PublicKeyGen"],[3,"SignInfo"],[8,"Sign"]]},\
"random":{"doc":"","i":[[3,"OsRandomErr","random","Rust Bindings to major C random generator headers. A…",null,null],[3,"OsRng","","an interface for the OS\'s secure RNG",null,null],[11,"secure_rng","","",0,[[],[["box",3],["securerng",8]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",1,[[],["osrandomerr",3]]],[11,"eq","","",1,[[["osrandomerr",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["fmtresult",6]]],[11,"random","","fill the `buf` with random bytes.",0,[[],[["box",3],["result",4]]]]],"p":[[3,"OsRng"],[3,"OsRandomErr"]]},\
"runtime":{"doc":"","i":[[4,"Error","runtime","",null,null],[13,"OsError","","",0,null],[12,"syscall","runtime::Error","",1,null],[12,"errno","","",1,null],[13,"MemError","runtime","",0,null],[13,"ZoneError","","",0,null],[13,"Unreachable","","",0,null],[5,"strerror","","",null,[[["c_int",6]]]],[0,"mem","","",null,null],[3,"PAGE_SIZE","runtime::mem","",null,null],[12,"__private_field","","",2,null],[3,"GuardedAllocation","","",null,null],[12,"base","","",3,null],[12,"data_region_start","","",3,null],[12,"data_region_size","","",3,null],[12,"data_aligned","","",3,null],[12,"mmapped_size","","",3,null],[3,"GuardedAllocator","","",null,null],[4,"Error","","",null,null],[13,"ZeroAllocation","","",4,null],[13,"Layout","","",4,null],[5,"page_size","","",null,[[]]],[5,"pad","","",null,[[]]],[5,"pad_minimizer","","",null,[[]]],[5,"mmap","","",null,[[],[["result",4],["error",4]]]],[5,"munmap","","",null,[[],[["result",4],["error",4]]]],[5,"seccomp_spec","","",null,[[],["spec",3]]],[11,"unaligned","","",3,[[],[["result",4],["error",4]]]],[11,"aligned","","",3,[[["layout",3]],[["result",4],["error",4]]]],[11,"from_ptr","","",3,[[["layout",3]]]],[11,"free","","",3,[[],[["result",4],["error",4]]]],[11,"data","","",3,[[]]],[11,"protect","","",3,[[],[["result",4],["error",4]]]],[11,"lock","","",3,[[],[["result",4],["error",4]]]],[11,"new","","",5,[[]]],[0,"seccomp","runtime","",null,null],[3,"Program","runtime::seccomp","",null,null],[12,"len","","",6,null],[12,"ops","","",6,null],[3,"Spec","","",null,null],[12,"write_stdout","","",7,null],[12,"write_stderr","","",7,null],[12,"anonymous_mmap","","",7,null],[12,"munmap","","",7,null],[12,"mprotect","","",7,null],[12,"mlock","","",7,null],[12,"getrandom","","",7,null],[0,"bindings","","",null,null],[3,"__kernel_fd_set","runtime::seccomp::bindings","",null,null],[12,"fds_bits","","",8,null],[3,"__kernel_fsid_t","","",null,null],[12,"val","","",9,null],[3,"sock_filter","","",null,null],[12,"code","","",10,null],[12,"jt","","",10,null],[12,"jf","","",10,null],[12,"k","","",10,null],[3,"sock_fprog","","",null,null],[12,"len","","",11,null],[12,"filter","","",11,null],[3,"seccomp_data","","",null,null],[12,"nr","","",12,null],[12,"arch","","",12,null],[12,"instruction_pointer","","",12,null],[12,"args","","",12,null],[6,"__s8","","",null,null],[6,"__u8","","",null,null],[6,"__s16","","",null,null],[6,"__u16","","",null,null],[6,"__s32","","",null,null],[6,"__u32","","",null,null],[6,"__s64","","",null,null],[6,"__u64","","",null,null],[6,"__kernel_sighandler_t","","",null,null],[6,"__kernel_key_t","","",null,null],[6,"__kernel_mqd_t","","",null,null],[6,"__kernel_old_uid_t","","",null,null],[6,"__kernel_old_gid_t","","",null,null],[6,"__kernel_old_dev_t","","",null,null],[6,"__kernel_long_t","","",null,null],[6,"__kernel_ulong_t","","",null,null],[6,"__kernel_ino_t","","",null,null],[6,"__kernel_mode_t","","",null,null],[6,"__kernel_pid_t","","",null,null],[6,"__kernel_ipc_pid_t","","",null,null],[6,"__kernel_uid_t","","",null,null],[6,"__kernel_gid_t","","",null,null],[6,"__kernel_suseconds_t","","",null,null],[6,"__kernel_daddr_t","","",null,null],[6,"__kernel_uid32_t","","",null,null],[6,"__kernel_gid32_t","","",null,null],[6,"__kernel_size_t","","",null,null],[6,"__kernel_ssize_t","","",null,null],[6,"__kernel_ptrdiff_t","","",null,null],[6,"__kernel_off_t","","",null,null],[6,"__kernel_loff_t","","",null,null],[6,"__kernel_time_t","","",null,null],[6,"__kernel_clock_t","","",null,null],[6,"__kernel_timer_t","","",null,null],[6,"__kernel_clockid_t","","",null,null],[6,"__kernel_caddr_t","","",null,null],[6,"__kernel_uid16_t","","",null,null],[6,"__kernel_gid16_t","","",null,null],[6,"__le16","","",null,null],[6,"__be16","","",null,null],[6,"__le32","","",null,null],[6,"__be32","","",null,null],[6,"__le64","","",null,null],[6,"__be64","","",null,null],[6,"__sum16","","",null,null],[6,"__wsum","","",null,null],[17,"__BITS_PER_LONG","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"BPF_LD","","",null,null],[17,"BPF_LDX","","",null,null],[17,"BPF_ST","","",null,null],[17,"BPF_STX","","",null,null],[17,"BPF_ALU","","",null,null],[17,"BPF_JMP","","",null,null],[17,"BPF_RET","","",null,null],[17,"BPF_MISC","","",null,null],[17,"BPF_W","","",null,null],[17,"BPF_H","","",null,null],[17,"BPF_B","","",null,null],[17,"BPF_IMM","","",null,null],[17,"BPF_ABS","","",null,null],[17,"BPF_IND","","",null,null],[17,"BPF_MEM","","",null,null],[17,"BPF_LEN","","",null,null],[17,"BPF_MSH","","",null,null],[17,"BPF_ADD","","",null,null],[17,"BPF_SUB","","",null,null],[17,"BPF_MUL","","",null,null],[17,"BPF_DIV","","",null,null],[17,"BPF_OR","","",null,null],[17,"BPF_AND","","",null,null],[17,"BPF_LSH","","",null,null],[17,"BPF_RSH","","",null,null],[17,"BPF_NEG","","",null,null],[17,"BPF_MOD","","",null,null],[17,"BPF_XOR","","",null,null],[17,"BPF_JA","","",null,null],[17,"BPF_JEQ","","",null,null],[17,"BPF_JGT","","",null,null],[17,"BPF_JGE","","",null,null],[17,"BPF_JSET","","",null,null],[17,"BPF_K","","",null,null],[17,"BPF_X","","",null,null],[17,"BPF_MAXINSNS","","",null,null],[17,"BPF_MAJOR_VERSION","","",null,null],[17,"BPF_MINOR_VERSION","","",null,null],[17,"BPF_A","","",null,null],[17,"BPF_TAX","","",null,null],[17,"BPF_TXA","","",null,null],[17,"BPF_MEMWORDS","","",null,null],[17,"SKF_AD_OFF","","",null,null],[17,"SKF_AD_PROTOCOL","","",null,null],[17,"SKF_AD_PKTTYPE","","",null,null],[17,"SKF_AD_IFINDEX","","",null,null],[17,"SKF_AD_NLATTR","","",null,null],[17,"SKF_AD_NLATTR_NEST","","",null,null],[17,"SKF_AD_MARK","","",null,null],[17,"SKF_AD_QUEUE","","",null,null],[17,"SKF_AD_HATYPE","","",null,null],[17,"SKF_AD_RXHASH","","",null,null],[17,"SKF_AD_CPU","","",null,null],[17,"SKF_AD_ALU_XOR_X","","",null,null],[17,"SKF_AD_VLAN_TAG","","",null,null],[17,"SKF_AD_VLAN_TAG_PRESENT","","",null,null],[17,"SKF_AD_PAY_OFFSET","","",null,null],[17,"SKF_AD_RANDOM","","",null,null],[17,"SKF_AD_VLAN_TPID","","",null,null],[17,"SKF_AD_MAX","","",null,null],[17,"SKF_NET_OFF","","",null,null],[17,"SKF_LL_OFF","","",null,null],[17,"BPF_NET_OFF","","",null,null],[17,"BPF_LL_OFF","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"SECCOMP_SET_MODE_STRICT","","",null,null],[17,"SECCOMP_SET_MODE_FILTER","","",null,null],[17,"SECCOMP_GET_ACTION_AVAIL","","",null,null],[17,"SECCOMP_FILTER_FLAG_TSYNC","","",null,null],[17,"SECCOMP_FILTER_FLAG_LOG","","",null,null],[17,"SECCOMP_FILTER_FLAG_SPEC_ALLOW","","",null,null],[17,"SECCOMP_RET_KILL_PROCESS","","",null,null],[17,"SECCOMP_RET_KILL_THREAD","","",null,null],[17,"SECCOMP_RET_KILL","","",null,null],[17,"SECCOMP_RET_TRAP","","",null,null],[17,"SECCOMP_RET_ERRNO","","",null,null],[17,"SECCOMP_RET_TRACE","","",null,null],[17,"SECCOMP_RET_LOG","","",null,null],[17,"SECCOMP_RET_ALLOW","","",null,null],[17,"SECCOMP_RET_ACTION_FULL","","",null,null],[17,"SECCOMP_RET_ACTION","","",null,null],[17,"SECCOMP_RET_DATA","","",null,null],[17,"PROGRAM_MAX_LENGTH","runtime::seccomp","",null,null],[11,"empty","","",6,[[]]],[11,"op","","",6,[[["c_uint",6]]]],[11,"jmp","","",6,[[["c_uint",6],["c_uchar",6]]]],[11,"apply","","",6,[[],[["result",4],["error",4]]]],[11,"join","","",7,[[["asref",8]]]],[11,"strict","","",7,[[]]],[11,"program","","",7,[[],["program",3]]],[11,"apply","","",7,[[],[["result",4],["error",4]]]],[11,"with_getrandom","","",7,[[]]],[0,"zone","runtime","",null,null],[3,"ZoneSpec","runtime::zone","",null,null],[12,"guarded_allocator","","",13,null],[12,"seccomp","","",13,null],[4,"Error","","",null,null],[13,"UnexpectedExitCode","","",14,null],[12,"exit_code","runtime::zone::Error","",15,null],[13,"Signal","runtime::zone","",14,null],[12,"signo","runtime::zone::Error","",16,null],[5,"fork","runtime::zone","",null,[[],[["result",4],["error",4]]]],[5,"with_guarded_allocator","","",null,[[["fnonce",8]]]],[11,"unexpected_exit_code","","",14,[[["c_int",6]],["error",4]]],[11,"signal","","",14,[[["c_int",6]],["error",4]]],[11,"secure_memory","","",13,[[]]],[11,"run","","",13,[[],[["result",4],["error",4]]]],[6,"Result","runtime","",null,null],[11,"os","","",0,[[]]],[11,"unreachable","","",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","runtime::mem","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","runtime::seccomp","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","runtime::seccomp::bindings","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"from","runtime::zone","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"deref","runtime::mem","",2,[[]]],[11,"from","runtime","",0,[[["error",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"fmt","runtime::mem","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","runtime::seccomp::bindings","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","runtime::zone","",14,[[["formatter",3]],["result",6]]],[11,"fmt","runtime","",0,[[["formatter",3]],["result",6]]],[11,"eq","runtime::mem","",4,[[["error",4]]]],[11,"ne","","",4,[[["error",4]]]],[11,"eq","","",3,[[["guardedallocation",3]]]],[11,"ne","","",3,[[["guardedallocation",3]]]],[11,"eq","runtime::zone","",14,[[["error",4]]]],[11,"ne","","",14,[[["error",4]]]],[11,"eq","runtime","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"as_ref","runtime::seccomp","",6,[[]]],[11,"as_ref","","",7,[[]]],[11,"clone","runtime::seccomp::bindings","",8,[[],["__kernel_fd_set",3]]],[11,"clone","","",9,[[],["__kernel_fsid_t",3]]],[11,"clone","","",10,[[],["sock_filter",3]]],[11,"clone","","",11,[[],["sock_fprog",3]]],[11,"clone","","",12,[[],["seccomp_data",3]]],[11,"clone","runtime::seccomp","",7,[[],["spec",3]]],[11,"clone","runtime::zone","",13,[[],["zonespec",3]]],[11,"default","runtime::seccomp","",7,[[],["spec",3]]],[11,"default","runtime::zone","",13,[[]]],[11,"alloc","runtime::mem","",5,[[["layout",3]]]],[11,"dealloc","","",5,[[["layout",3]]]],[11,"initialize","","",2,[[]]]],"p":[[4,"Error"],[13,"OsError"],[3,"PAGE_SIZE"],[3,"GuardedAllocation"],[4,"Error"],[3,"GuardedAllocator"],[3,"Program"],[3,"Spec"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"sock_filter"],[3,"sock_fprog"],[3,"seccomp_data"],[3,"ZoneSpec"],[4,"Error"],[13,"UnexpectedExitCode"],[13,"Signal"]]},\
"snapshot":{"doc":"This crate defines and implements the encrypted offline…","i":[[4,"Error","snapshot","",null,null],[13,"IOError","","",0,null],[13,"SnapshotError","","",0,null],[13,"CryptoError","","",0,null],[13,"LZ4Error","","",0,null],[13,"TryIntoError","","",0,null],[5,"compress","","",null,[[],["vec",3]]],[5,"decompress","","",null,[[],[["result",6],["vec",3]]]],[5,"write","","Encrypt the opaque plaintext bytestring using the…",null,[[["key",6]],["result",6]]],[5,"read","","Read ciphertext from the input, decrypts it using the…",null,[[["key",6]],[["result",6],["vec",3]]]],[5,"write_to","","Atomically encrypt and `write` the specified plaintext to…",null,[[["path",3],["key",6]],["result",6]]],[5,"read_from","","`read` and decrypt the ciphertext from the specified path",null,[[["path",3],["key",6]],[["result",6],["vec",3]]]],[0,"compression","","",null,null],[3,"Block","snapshot::compression","",null,null],[12,"literal_length","","",1,null],[12,"duplicates","","",1,null],[3,"Duplicate","","",null,null],[12,"offset","","",2,null],[12,"padding","","",2,null],[0,"decoder","","",null,null],[3,"LZ4Decoder","snapshot::compression::decoder","",null,null],[12,"input","","",3,null],[12,"output","","",3,null],[12,"token","","",3,null],[5,"decompress_into","","",null,[[["vec",3]],["result",6]]],[5,"decompress","","",null,[[],[["result",6],["vec",3]]]],[11,"take","","",3,[[],["result",6]]],[11,"take_internal","","",3,[[],["result",6]]],[11,"output","","",3,[[["vec",3]]]],[11,"duplicate","","",3,[[]]],[11,"read_int","","",3,[[],["result",6]]],[11,"read_u16","","",3,[[],["result",6]]],[11,"read_literal","","",3,[[],["result",6]]],[11,"read_duplicate","","",3,[[],["result",6]]],[11,"complete","","",3,[[],["result",6]]],[0,"encoder","snapshot::compression","",null,null],[3,"LZ4Encoder","snapshot::compression::encoder","",null,null],[12,"input","","",4,null],[12,"output","","",4,null],[12,"cursor","","",4,null],[12,"dict","","",4,null],[5,"compress_into","","",null,[[["vec",3]]]],[5,"compress","","",null,[[],["vec",3]]],[17,"DICT_SIZE","","",null,null],[11,"step_forward","","",4,[[]]],[11,"insert_cursor","","",4,[[]]],[11,"remaining","","",4,[[]]],[11,"get_cursor_hash","","",4,[[]]],[11,"get","","",4,[[]]],[11,"get_at_cursor","","",4,[[]]],[11,"find_duplicate","","",4,[[],[["option",4],["duplicate",3]]]],[11,"write_int","","",4,[[]]],[11,"pop_block","","",4,[[],["block",3]]],[11,"complete","","",4,[[]]],[0,"files","snapshot","",null,null],[5,"home_dir","snapshot::files","Get the preferred Stronghold home directory",null,[[],[["pathbuf",3],["result",6]]]],[5,"snapshot_dir","","Get the preferred snapshot directory",null,[[],[["pathbuf",3],["result",6]]]],[5,"verify_or_create","","",null,[[["path",3]],["result",6]]],[5,"get_path","","Construct the path to a snapshot file with the specifed…",null,[[["option",4]],[["pathbuf",3],["result",6]]]],[0,"kdf","snapshot","",null,null],[5,"naive_kdf","snapshot::kdf","",null,[[],["result",6]]],[5,"recommended_kdf","","derive a key from password and salt using the currently…",null,[[],["result",6]]],[0,"logic","snapshot","",null,null],[5,"write","snapshot::logic","Encrypt the opaque plaintext bytestring using the…",null,[[["key",6]],["result",6]]],[5,"read","","Read ciphertext from the input, decrypts it using the…",null,[[["key",6]],[["result",6],["vec",3]]]],[5,"write_to","","Atomically encrypt and `write` the specified plaintext to…",null,[[["path",3],["key",6]],["result",6]]],[5,"read_from","","`read` and decrypt the ciphertext from the specified path",null,[[["path",3],["key",6]],[["result",6],["vec",3]]]],[5,"check_min_file_len","","",null,[[["file",3]],["result",6]]],[5,"check_header","","",null,[[],["result",6]]],[6,"Key","","",null,null],[17,"MAGIC","","Magic bytes (bytes 0-4 in a snapshot file)",null,null],[17,"VERSION","","Current version bytes (bytes 5-6 in a snapshot file)",null,null],[17,"KEY_SIZE","","",null,null],[6,"Key","snapshot","",null,null],[6,"Result","","",null,null],[17,"MAGIC","","Magic bytes (bytes 0-4 in a snapshot file)",null,null],[17,"VERSION","","Current version bytes (bytes 5-6 in a snapshot file)",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","snapshot::compression","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","snapshot::compression::decoder","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","snapshot::compression::encoder","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","snapshot","",0,[[["error",3]]]],[11,"from","","",0,[[["tryfromsliceerror",3]]]],[11,"from","","",0,[[["error",4]]]],[11,"clone","snapshot::compression","",2,[[],["duplicate",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","snapshot","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]]],"p":[[4,"Error"],[3,"Block"],[3,"Duplicate"],[3,"LZ4Decoder"],[3,"LZ4Encoder"]]},\
"store":{"doc":"","i":[[3,"Cache","store","",null,null],[12,"table","","",0,null],[12,"scan_freq","","",0,null],[12,"created_at","","",0,null],[12,"last_scan_at","","",0,null],[0,"macros","","",null,null],[0,"storage","","",null,null],[3,"Value","store::storage","",null,null],[12,"val","","",1,null],[12,"expiration","","",1,null],[0,"cache","","",null,null],[3,"Cache","store::storage::cache","",null,null],[12,"table","","",0,null],[12,"scan_freq","","",0,null],[12,"created_at","","",0,null],[12,"last_scan_at","","",0,null],[11,"new","store","creates a new empty `Cache`",0,[[]]],[11,"create_with_scanner","","creates an empty `Cache` with a periodic scanner which…",0,[[["duration",3]]]],[11,"get","","Gets the value associated with the specified key.",0,[[],["option",4]]],[11,"get_or_insert","","Gets the value associated with the specified key. If the…",0,[[["duration",3],["option",4]]]],[11,"insert","","Insert a key-value pair into the cache. If key was not…",0,[[["duration",3],["option",4]],["option",4]]],[11,"remove","","Removes a key from the cache. Returns the value from the…",0,[[],["option",4]]],[11,"contains_key","","",0,[[]]],[11,"get_last_scanned_at","","",0,[[],[["systemtime",3],["option",4]]]],[11,"get_scan_freq","","Get the cache\'s scan frequency.",0,[[],[["duration",3],["option",4]]]],[11,"clear","","Clear the stored cache and reset.",0,[[]]],[11,"try_remove_expired_items","","attempts to remove expired items based on the current…",0,[[["systemtime",3]]]],[11,"new","store::storage","",1,[[["duration",3],["option",4]]]],[11,"has_expired","","",1,[[["systemtime",3]]]],[14,"cache","store","A macro for defining functions whose return values will…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","store::storage","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","store","",0,[[],["cache",3]]],[11,"clone","store::storage","",1,[[],["value",3]]],[11,"default","store","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","store::storage","",1,[[["formatter",3]],["result",6]]],[11,"serialize","store","",0,[[],["result",4]]],[11,"serialize","store::storage","",1,[[],["result",4]]],[11,"deserialize","store","",0,[[],["result",4]]],[11,"deserialize","store::storage","",1,[[],["result",4]]]],"p":[[3,"Cache"],[3,"Value"]]},\
"stronghold_communication":{"doc":"IntroductionThis library enables strongholds on different…","i":[[0,"actor","stronghold_communication","",null,null],[3,"CommsActorConfig","stronghold_communication::actor","Configure the `CommunicationActor` upon creation.",null,null],[12,"keypair","","The keypair that will be used to build and authenticate…",0,null],[12,"listen_addr","","Specific address that the peer should listen on, per…",0,null],[12,"chan","","Optional Channel where the `CommunicationActor` will…",0,null],[12,"client_ref","","If a actor ref is provided, the `CommunicationActor` will…",0,null],[3,"CommunicationActor","","Actor for the communication to a remote peer over the swarm.",null,null],[12,"config","","",1,null],[12,"swarm_tx","","",1,null],[12,"poll_swarm_handle","","",1,null],[3,"SwarmTask","","",null,null],[12,"swarm","","",2,null],[12,"chan","","",2,null],[12,"client_ref","","",2,null],[12,"swarm_rx","","",2,null],[12,"self_ref","","",2,null],[4,"ConnectPeerError","","Errors that can occur in the context of a pending…",null,null],[13,"Transport","","An error occurred while negotiating the transport…",3,null],[13,"InvalidPeerId","","The peer identity obtained on the connection did not match…",3,null],[13,"ConnectionLimit","","The connection was dropped because the connection limit…",3,null],[13,"IO","","An I/O error occurred on the connection.",3,null],[4,"CommunicationEvent","","Events for communication with the [`CommunicationActor`].",null,null],[13,"Message","","Message that is send via the swarm to or from a remote peer",4,null],[13,"ConnectPeer","","Dial a new peer on the address.",4,null],[13,"ConnectPeerResult","","Outcome of [`ConnectPeer`].",4,null],[12,"addr","stronghold_communication::actor::CommunicationEvent","",5,null],[12,"result","","",5,null],[13,"GetSwarmInfo","stronghold_communication::actor","Get information about the local peer.",4,null],[13,"SwarmInfo","","Information about the local peer. Outcome of…",4,null],[12,"peer_id","stronghold_communication::actor::CommunicationEvent","",6,null],[12,"listeners","","",6,null],[13,"Shutdown","stronghold_communication::actor","Shutdown the swarm task that is handling the swarm and all…",4,null],[11,"new","","",0,[[["option",4],["option",4],["option",4],["channelref",6],["multiaddr",3],["keypair",4],["basicactorref",3]],["commsactorconfig",3]]],[11,"tx_to_swarm_task","","",1,[[["communicationevent",4]]]],[11,"new","","",2,[[["commsactorconfig",3],["unboundedreceiver",3],["basicactorref",3],["communicationevent",4]]]],[11,"poll_swarm","","",2,[[]]],[11,"handle_actor_event","","",2,[[["communicationevent",4]],["option",4]]],[11,"handle_swarm_event","","",2,[[["p2pevent",4],["swarmevent",4]]]],[11,"tell_actor","","",2,[[["communicationevent",4]]]],[0,"behaviour","stronghold_communication","",null,null],[3,"P2PNetworkBehaviour","stronghold_communication::behaviour","The `P2PNetworkBehaviour` determines the behaviour of the…",null,null],[12,"mdns","","",7,null],[12,"identify","","",7,null],[12,"msg_proto","","",7,null],[12,"peers","","",7,null],[12,"events","","",7,null],[12,"response_channels","","",7,null],[4,"BehaviourError","","Error upon creating a new NetworkBehaviour",null,null],[13,"TransportError","","Error on the transport layer",8,null],[13,"NoiseAuthenticError","","Error on upgrading the transport with noise authentication",8,null],[13,"MdnsError","","Error creating new mDNS behaviour",8,null],[0,"message","","",null,null],[3,"P2PIdentifyInfo","stronghold_communication::behaviour::message","Information of a peer sent in `Identify` protocol responses.",null,null],[12,"public_key","","The public key underlying the peer\'s `PeerId`.",9,null],[12,"protocol_version","","Version of the protocol family used by the peer, e.g.…",9,null],[12,"agent_version","","Name and version of the peer, similar to the `User-Agent`…",9,null],[12,"listen_addrs","","The addresses that the peer is listening on.",9,null],[12,"protocols","","The list of protocols supported by the peer, e.g.…",9,null],[4,"P2PMdnsEvent","","Event that can be produced by the `Mdns` behaviour.",null,null],[13,"Discovered","","Discovered nodes through mDNS.",10,null],[13,"Expired","","Each discovered record has a time-to-live. When this TTL…",10,null],[4,"P2PProtocolsHandlerUpgrErr","","Error that can happen on an outbound substream opening…",null,null],[13,"Timeout","","The opening attempt timed out before the negotiation was…",11,null],[13,"Timer","","There was an error in the timer used.",11,null],[13,"Upgrade","","Error while upgrading the substream to the protocol we want.",11,null],[4,"P2PIdentifyEvent","","Event emitted  by the `Identify` behaviour.",null,null],[13,"Received","","Identifying information has been received from a peer.",12,null],[12,"peer_id","stronghold_communication::behaviour::message::P2PIdentifyEvent","",13,null],[12,"info","","",13,null],[12,"observed_addr","","The address observed by the peer for the local node.",13,null],[13,"Sent","stronghold_communication::behaviour::message","Identifying information of the local node has been sent to…",12,null],[12,"peer_id","stronghold_communication::behaviour::message::P2PIdentifyEvent","",14,null],[13,"Error","stronghold_communication::behaviour::message","Error while attempting to identify the remote.",12,null],[12,"peer_id","stronghold_communication::behaviour::message::P2PIdentifyEvent","",15,null],[12,"error","","",15,null],[4,"P2POutboundFailure","stronghold_communication::behaviour::message","Possible failures occurring in the context of sending an…",null,null],[13,"DialFailure","","The request could not be sent because a dialing attempt…",16,null],[13,"Timeout","","The request timed out before a response was received.",16,null],[13,"ConnectionClosed","","The connection closed before a response was received.",16,null],[13,"UnsupportedProtocols","","The remote supports none of the requested protocols.",16,null],[4,"P2PInboundFailure","","Possible failures occurring in the context of receiving an…",null,null],[13,"Timeout","","The inbound request timed out, either while reading the…",17,null],[13,"UnsupportedProtocols","","The local peer supports none of the requested protocols.",17,null],[13,"ResponseOmission","","The local peer failed to respond to an inbound request due…",17,null],[13,"ConnectionClosed","","The connection closed before a response could be send.",17,null],[4,"P2PReqResEvent","","Event emitted  by the `RequestResponse` behaviour.",null,null],[13,"Req","","Request Message",18,null],[12,"peer_id","stronghold_communication::behaviour::message::P2PReqResEvent","",19,null],[12,"request_id","","",19,null],[12,"request","","",19,null],[13,"Res","stronghold_communication::behaviour::message","Response Message to a received `Req`.",18,null],[12,"peer_id","stronghold_communication::behaviour::message::P2PReqResEvent","",20,null],[12,"request_id","","",20,null],[12,"response","","",20,null],[13,"InboundFailure","stronghold_communication::behaviour::message","",18,null],[12,"peer_id","stronghold_communication::behaviour::message::P2PReqResEvent","",21,null],[12,"request_id","","",21,null],[12,"error","","",21,null],[13,"OutboundFailure","stronghold_communication::behaviour::message","",18,null],[12,"peer_id","stronghold_communication::behaviour::message::P2PReqResEvent","",22,null],[12,"request_id","","",22,null],[12,"error","","",22,null],[13,"ResSent","stronghold_communication::behaviour::message","A response to an inbound request has been sent.",18,null],[12,"peer_id","stronghold_communication::behaviour::message::P2PReqResEvent","",23,null],[12,"request_id","","",23,null],[4,"P2PEvent","stronghold_communication::behaviour::message","Event that was emitted by one of the protocols of the…",null,null],[13,"Mdns","","Events from the libp2p mDNS protocol",24,null],[13,"Identify","","Events from the libp2p identify protocol",24,null],[13,"RequestResponse","","Events from the custom request-response protocol",24,null],[0,"protocol","stronghold_communication::behaviour","",null,null],[3,"MessageProtocol","stronghold_communication::behaviour::protocol","Custom protocol that extends libp2ps RequestResponseProtocol",null,null],[3,"MessageCodec","","Describes how messages are read from and written to the io…",null,null],[12,"p","","",25,null],[12,"q","","",25,null],[8,"MessageEvent","","Trait for the generic Request and Response types",null,null],[11,"new","","",25,[[["phantomdata",3],["phantomdata",3]]]],[6,"ReqIdStr","stronghold_communication::behaviour","",null,null],[8,"MessageEvent","","Trait for the generic Request and Response types",null,null],[11,"init_swarm","","Creates a new `P2PNetworkBehaviour` and returns the swarm…",7,[[["keypair",4]],[["result",4],["behaviourerror",4],["swarm",6]]]],[11,"poll","","",7,[[["context",3]],[["poll",4],["networkbehaviouraction",4]]]],[11,"add_peer","","",7,[[["peerid",3],["multiaddr",3]]]],[11,"remove_peer","","",7,[[["peerid",3]],[["multiaddr",3],["option",4]]]],[11,"get_peer_addr","","",7,[[["peerid",3]],[["multiaddr",3],["option",4]]]],[11,"get_all_peers","","",7,[[],["vec",3]]],[11,"send_request","","",7,[[["peerid",3]],["requestid",3]]],[11,"send_response","","",7,[[["requestid",3]],["result",4]]],[11,"get_active_mdns_peers","","Get the peers discovered by mdns",7,[[],[["vec",3],["peerid",3]]]],[11,"from","stronghold_communication::actor","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","stronghold_communication::behaviour","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","stronghold_communication::behaviour::message","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","stronghold_communication::behaviour::protocol","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"protocol_name","","",26,[[]]],[11,"vzip","","",26,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","stronghold_communication::actor","",3,[[["pendingconnectionerror",4]]]],[11,"from","stronghold_communication::behaviour::message","",24,[[["mdnsevent",4]],["p2pevent",4]]],[11,"from","","",24,[[["identifyevent",4]],["p2pevent",4]]],[11,"from","","",24,[[["requestresponseevent",4]],["p2pevent",4]]],[11,"clone","stronghold_communication::actor","",3,[[],["connectpeererror",4]]],[11,"clone","","",4,[[],["communicationevent",4]]],[11,"clone","","",0,[[],["commsactorconfig",3]]],[11,"clone","stronghold_communication::behaviour::message","",10,[[],["p2pmdnsevent",4]]],[11,"clone","","",9,[[],["p2pidentifyinfo",3]]],[11,"clone","","",11,[[],["p2pprotocolshandlerupgrerr",4]]],[11,"clone","","",12,[[],["p2pidentifyevent",4]]],[11,"clone","","",16,[[],["p2poutboundfailure",4]]],[11,"clone","","",17,[[],["p2pinboundfailure",4]]],[11,"clone","","",18,[[],["p2preqresevent",4]]],[11,"clone","","",24,[[],["p2pevent",4]]],[11,"clone","stronghold_communication::behaviour::protocol","",26,[[],["messageprotocol",3]]],[11,"clone","","",25,[[],["messagecodec",3]]],[11,"eq","stronghold_communication::behaviour::message","",10,[[["p2pmdnsevent",4]]]],[11,"ne","","",10,[[["p2pmdnsevent",4]]]],[11,"eq","","",9,[[["p2pidentifyinfo",3]]]],[11,"ne","","",9,[[["p2pidentifyinfo",3]]]],[11,"eq","","",11,[[["p2pprotocolshandlerupgrerr",4]]]],[11,"eq","","",12,[[["p2pidentifyevent",4]]]],[11,"ne","","",12,[[["p2pidentifyevent",4]]]],[11,"eq","","",16,[[["p2poutboundfailure",4]]]],[11,"eq","","",17,[[["p2pinboundfailure",4]]]],[11,"eq","","",18,[[["p2preqresevent",4]]]],[11,"ne","","",18,[[["p2preqresevent",4]]]],[11,"eq","","",24,[[["p2pevent",4]]]],[11,"ne","","",24,[[["p2pevent",4]]]],[11,"fmt","stronghold_communication::actor","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","stronghold_communication::behaviour::message","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","stronghold_communication::behaviour::protocol","",26,[[["formatter",3]],["result",6]]],[11,"fmt","stronghold_communication::behaviour","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"protocol_name","stronghold_communication::behaviour::protocol","",26,[[]]],[11,"new_handler","stronghold_communication::behaviour","",7,[[]]],[11,"addresses_of_peer","","",7,[[["peerid",3]],[["vec",3],["multiaddr",3]]]],[11,"inject_connected","","",7,[[["peerid",3]]]],[11,"inject_disconnected","","",7,[[["peerid",3]]]],[11,"inject_connection_established","","",7,[[["connectionid",3],["peerid",3],["connectedpoint",4]]]],[11,"inject_address_change","","",7,[[["connectionid",3],["peerid",3],["connectedpoint",4]]]],[11,"inject_connection_closed","","",7,[[["connectionid",3],["peerid",3],["connectedpoint",4]]]],[11,"inject_addr_reach_failure","","",7,[[["option",4],["peerid",3],["multiaddr",3],["error",8]]]],[11,"inject_dial_failure","","",7,[[["peerid",3]]]],[11,"inject_new_listen_addr","","",7,[[["multiaddr",3]]]],[11,"inject_expired_listen_addr","","",7,[[["multiaddr",3]]]],[11,"inject_new_external_addr","","",7,[[["multiaddr",3]]]],[11,"inject_listener_error","","",7,[[["error",8],["listenerid",3]]]],[11,"inject_listener_closed","","",7,[[["error",3],["result",4],["listenerid",3]]]],[11,"inject_event","","",7,[[["connectionid",3],["peerid",3]]]],[11,"poll","","",7,[[["context",3]],[["networkbehaviouraction",4],["poll",4]]]],[11,"inject_event","","",7,[[["mdnsevent",4]]]],[11,"inject_event","","",7,[[["requestresponseevent",4]]]],[11,"inject_event","","",7,[[["identifyevent",4]]]],[11,"read_request","stronghold_communication::behaviour::protocol","",25,[[["messageprotocol",3]],[["pin",3],["box",3]]]],[11,"read_response","","",25,[[["messageprotocol",3]],[["pin",3],["box",3]]]],[11,"write_request","","",25,[[["messageprotocol",3]],[["pin",3],["box",3]]]],[11,"write_response","","",25,[[["messageprotocol",3]],[["pin",3],["box",3]]]],[11,"create_args","stronghold_communication::actor","",1,[[["commsactorconfig",3]]]],[11,"pre_start","","",1,[[["context",3]]]],[11,"post_start","","",1,[[["context",3]]]],[11,"post_stop","","",1,[[]]],[11,"recv","","",1,[[["context",3],["sender",6]]]]],"p":[[3,"CommsActorConfig"],[3,"CommunicationActor"],[3,"SwarmTask"],[4,"ConnectPeerError"],[4,"CommunicationEvent"],[13,"ConnectPeerResult"],[13,"SwarmInfo"],[3,"P2PNetworkBehaviour"],[4,"BehaviourError"],[3,"P2PIdentifyInfo"],[4,"P2PMdnsEvent"],[4,"P2PProtocolsHandlerUpgrErr"],[4,"P2PIdentifyEvent"],[13,"Received"],[13,"Sent"],[13,"Error"],[4,"P2POutboundFailure"],[4,"P2PInboundFailure"],[4,"P2PReqResEvent"],[13,"Req"],[13,"Res"],[13,"InboundFailure"],[13,"OutboundFailure"],[13,"ResSent"],[4,"P2PEvent"],[3,"MessageCodec"],[3,"MessageProtocol"]]},\
"test_utils":{"doc":"","i":[[5,"corrupt","test_utils","",null,[[]]],[5,"seek_to_beginning","","",null,[[["file",3]]]],[5,"corrupt_file","","",null,[[["file",3]]]],[5,"corrupt_file_at","","",null,[[["path",3]]]],[0,"fresh","","",null,null],[5,"bytestring","test_utils::fresh","",null,[[],["vec",3]]],[5,"non_empty_bytestring","","",null,[[],["vec",3]]],[5,"string","","",null,[[],["string",3]]],[5,"coinflip","","",null,[[]]],[5,"usize","","",null,[[]]]],"p":[]},\
"vault":{"doc":"","i":[[3,"Key","vault","A key to the crypto box. Key is stored on the heap which…",null,null],[12,"key","","the raw bytes that make up the key",0,null],[12,"drop_fn","","callback function invoked on drop. Used top drop the data…",0,null],[12,"_box_provider","","associated Provider data",0,null],[3,"ChainId","","A chain identifier",null,null],[12,"0","","",1,null],[3,"RecordHint","","a record hint",null,null],[12,"0","","",2,null],[3,"DBReader","","A reader for the `DBView`",null,null],[12,"view","","",3,null],[3,"DBView","","A view over the records in a vault",null,null],[12,"key","","",4,null],[12,"txs","","",4,null],[12,"chains","","",4,null],[12,"blobs","","",4,null],[12,"cache","","",4,null],[3,"DBWriter","","A writer for the `DBView`",null,null],[12,"view","","",5,null],[12,"chain","","",5,null],[12,"next_ctr","","",5,null],[3,"DeleteRequest","","a delete call",null,null],[12,"kind","","",6,null],[12,"id","","",6,null],[3,"ReadRequest","","a read call",null,null],[12,"kind","","",7,null],[12,"id","","",7,null],[3,"ReadResult","","a read result",null,null],[12,"kind","","",8,null],[12,"id","","",8,null],[12,"data","","",8,null],[3,"RecordId","","A record identifier",null,null],[12,"0","","",9,null],[3,"WriteRequest","","a write call",null,null],[12,"kind","","",10,null],[12,"id","","",10,null],[12,"data","","",10,null],[4,"Kind","","",null,null],[13,"Transaction","","",11,null],[13,"Blob","","",11,null],[4,"PreparedRead","","",null,null],[13,"CacheHit","","",12,null],[13,"CacheMiss","","",12,null],[13,"RecordIsEmpty","","",12,null],[13,"NoSuchRecord","","",12,null],[4,"Error","","Errors for the Vault Crate",null,null],[13,"DatabaseError","","",13,null],[13,"VersionError","","",13,null],[13,"ChainError","","",13,null],[13,"Base64Error","","",13,null],[13,"Base64ErrorDetailed","","",13,null],[13,"InterfaceError","","",13,null],[13,"OtherError","","",13,null],[13,"CryptoError","","",13,null],[13,"ValueError","","",13,null],[13,"ProtocolError","","",13,null],[0,"base64","","",null,null],[3,"Base64","vault::base64","",null,null],[8,"Base64Encodable","","a trait to make types base64 encodable",null,null],[10,"base64","","",14,[[],["string",3]]],[8,"Base64Decodable","","a trait to make types base64 decodable",null,null],[10,"from_base64","","",15,[[],["result",6]]],[18,"PADDING","","base64 padding character",16,null],[11,"encode_data","","encode `data` using a base64 uri-safe character set.",16,[[],["string",3]]],[11,"decode_data","","decode data from base64 based off of the URI safe…",16,[[],[["result",6],["vec",3]]]],[11,"encode_byte","","encode a single byte",16,[[]]],[11,"decode_byte","","decode a single byte",16,[[],["result",6]]],[0,"crypto_box","vault","",null,null],[3,"Key","vault::crypto_box","A key to the crypto box. Key is stored on the heap which…",null,null],[12,"key","","the raw bytes that make up the key",0,null],[12,"drop_fn","","callback function invoked on drop. Used top drop the data…",0,null],[12,"_box_provider","","associated Provider data",0,null],[8,"BoxProvider","","A provider interface between the vault and a crypto box.…",null,null],[10,"box_key_len","","function for the key length of the crypto box",17,[[]]],[10,"box_overhead","","gets the crypto box\'s overhead",17,[[]]],[10,"box_seal","","seals some data into the crypto box using the `key` and…",17,[[["key",3]],[["result",6],["vec",3]]]],[10,"box_open","","opens a crypto box to get data using the `key` and the `ad`.",17,[[["key",3]],[["result",6],["vec",3]]]],[10,"random_buf","","fills a buffer `buf` with secure random bytes.",17,[[],["result",6]]],[11,"random_vec","","creates a vector with secure random bytes based off of an…",17,[[],[["result",6],["vec",3]]]],[8,"Encrypt","","trait for encryptable data",null,null],[11,"encrypt","","encrypts a raw data and creates a type T from the ciphertext",18,[[["asref",8],["key",3]],["result",6]]],[8,"Decrypt","","Trait for decryptable data",null,null],[11,"decrypt","","decrypts raw data and creates a new type T from the…",19,[[["asref",8],["key",3]],["result",6]]],[11,"random","vault","generate a random key using secure random bytes",0,[[],["result",6]]],[11,"load","","attempts to load a key from inputted data",0,[[["vec",3]],["result",6]]],[11,"on_drop","","set up the drop hook function which will be called if the…",0,[[]]],[11,"bytes","","get the key\'s bytes",0,[[]]],[0,"types","","",null,null],[0,"transactions","vault::types","",null,null],[3,"Transaction","vault::types::transactions","a generic transaction (untyped)",null,null],[12,"0","","",20,null],[3,"UntypedTransaction","","untyped transaction view",null,null],[12,"type_id","","transaction type",21,null],[12,"id","","unique identifer for this transaction",21,null],[12,"chain","","chain identifer",21,null],[12,"ctr","","counter value",21,null],[3,"DataTransaction","","a data transaction",null,null],[12,"type_id","","transaction type",22,null],[12,"id","","unique id for this transaction",22,null],[12,"chain","","chain identifer",22,null],[12,"ctr","","counter value",22,null],[12,"blob","","the blob identifier for the data referred to by this…",22,null],[12,"record_hint","","a record hint",22,null],[3,"RevocationTransaction","","a revocation transaction",null,null],[12,"type_id","","transaction type",23,null],[12,"id","","unique identifer for this transaction",23,null],[12,"chain","","chain identifer",23,null],[12,"ctr","","counter",23,null],[3,"InitTransaction","","transaction that initializes a new chain",null,null],[12,"type_id","","transaction type",24,null],[12,"id","","unique identifer for this transaction",24,null],[12,"chain","","chain identifer",24,null],[12,"ctr","","counter value",24,null],[3,"SealedTransaction","","a sealed transaction",null,null],[12,"0","","",25,null],[3,"SealedBlob","","a sealed blob",null,null],[12,"0","","",26,null],[4,"TransactionType","","generic transaction type enum",null,null],[13,"Data","","",27,null],[13,"Revocation","","",27,null],[13,"Init","","",27,null],[17,"TRANSACTION_MAX_BYTES","","",null,null],[8,"TypedTransaction","","a typed transaction",null,null],[10,"type_id","","",28,[[],["val",3]]],[11,"val","","convert transaction type into its associated number value.",27,[[],["val",3]]],[11,"type","","",21,[[],[["transactiontype",4],["result",6]]]],[11,"new","","create a new data transaction.",22,[[["chainid",3],["transactionid",3],["blobid",3],["val",3],["recordhint",3]],["transaction",3]]],[11,"new","","create a new revocation transaction.",23,[[["chainid",3],["val",3],["transactionid",3]],["transaction",3]]],[11,"untyped","","",20,[[],["untypedtransaction",3]]],[11,"typed","","",20,[[],["option",4]]],[11,"new","","create a new init transaction.",24,[[["chainid",3],["transactionid",3],["val",3]],["transaction",3]]],[0,"utils","vault::types","",null,null],[3,"RecordHint","vault::types::utils","a record hint",null,null],[12,"0","","",2,null],[3,"Val","","a big endian encoded number",null,null],[12,"0","","",29,null],[3,"ChainId","","A chain identifier",null,null],[12,"0","","",1,null],[3,"TransactionId","","A transaction identifier",null,null],[12,"0","","",30,null],[3,"BlobId","","A blob identifier",null,null],[12,"0","","",31,null],[11,"new","vault","create a new random Id for hint",2,[[],["result",6]]],[11,"u64","vault::types::utils","",29,[[]]],[11,"random","vault","",1,[[],["result",6]]],[11,"load","","",1,[[],["result",6]]],[11,"random","vault::types::utils","",30,[[],["result",6]]],[11,"load","","",30,[[],["result",6]]],[11,"random","","",31,[[],["result",6]]],[8,"AsView","vault::types","a view over raw data.",null,null],[11,"view","","creates a view over `self`.",32,[[]]],[8,"AsViewMut","","a mutable view over raw data.",null,null],[11,"view_mut","","creates a mutable view over `self`.",33,[[]]],[0,"vault","vault","",null,null],[3,"RecordId","vault::vault","A record identifier",null,null],[12,"0","","",9,null],[3,"DBView","","A view over the records in a vault",null,null],[12,"key","","",4,null],[12,"txs","","",4,null],[12,"chains","","",4,null],[12,"blobs","","",4,null],[12,"cache","","",4,null],[3,"DBReader","","A reader for the `DBView`",null,null],[12,"view","","",3,null],[3,"DBWriter","","A writer for the `DBView`",null,null],[12,"view","","",5,null],[12,"chain","","",5,null],[12,"next_ctr","","",5,null],[4,"PreparedRead","","",null,null],[13,"CacheHit","","",12,null],[13,"CacheMiss","","",12,null],[13,"RecordIsEmpty","","",12,null],[13,"NoSuchRecord","","",12,null],[0,"chain","","",null,null],[3,"Chain","vault::vault::chain","",null,null],[12,"garbage","","",34,null],[12,"subchain","","",34,null],[12,"init","","",34,null],[12,"data","","",34,null],[12,"highest_ctr","","",34,null],[11,"data","","",34,[[],[["option",4],["transactionid",3]]]],[11,"init","","",34,[[],[["option",4],["transactionid",3]]]],[11,"highest_ctr","","",34,[[],[["val",3],["option",4]]]],[11,"garbage","","",34,[[],["vec",3]]],[11,"subchain","","",34,[[],["vec",3]]],[11,"len","","",34,[[]]],[11,"balance","","",34,[[]]],[11,"prune","","",34,[[],[["result",6],["chain",3]]]],[0,"protocol","vault::vault","",null,null],[3,"ReadRequest","vault::vault::protocol","a read call",null,null],[12,"kind","","",7,null],[12,"id","","",7,null],[3,"ReadResult","","a read result",null,null],[12,"kind","","",8,null],[12,"id","","",8,null],[12,"data","","",8,null],[3,"WriteRequest","","a write call",null,null],[12,"kind","","",10,null],[12,"id","","",10,null],[12,"data","","",10,null],[3,"DeleteRequest","","a delete call",null,null],[12,"kind","","",6,null],[12,"id","","",6,null],[4,"Kind","","",null,null],[13,"Transaction","","",11,null],[13,"Blob","","",11,null],[11,"transaction","vault","create a read request for a transaction",7,[[["transactionid",3]]]],[11,"blob","","create a read request for a transaction",7,[[["blobid",3]]]],[11,"id","","id of a record",7,[[]]],[11,"kind","","kind of data",7,[[],["kind",4]]],[11,"result","","",7,[[["vec",3]],["readresult",3]]],[11,"new","","",8,[[["kind",4]]]],[11,"id","","id of read result",8,[[]]],[11,"kind","","kind of data",8,[[],["kind",4]]],[11,"data","","data from record",8,[[]]],[11,"transaction","","create a write request for a transaction",10,[[["transactionid",3],["sealedtransaction",3]]]],[11,"blob","","creates a new request to write a blob",10,[[["blobid",3],["sealedblob",3]]]],[11,"id","","id of entity",10,[[]]],[11,"kind","","kind of data",10,[[],["kind",4]]],[11,"data","","data of record",10,[[]]],[11,"transaction","","create delete request by transaction id",6,[[["transactionid",3]]]],[11,"id","","get id of delete request",6,[[]]],[11,"kind","","kind of data",6,[[],["kind",4]]],[11,"random","","",9,[[],["result",6]]],[11,"load","","load record_id from data",9,[[],["result",6]]],[11,"load","","Opens a vault using a key. Accepts the `ReadResult`:s of…",4,[[["key",3]],["result",6]]],[11,"records","","Creates an iterator over all valid record identifiers and…",4,[[]]],[11,"all","","Creates an iterator over all valid records ids.",4,[[]]],[11,"absolute_balance","","Check the balance of valid records compared to total records",4,[[]]],[11,"chain_ctrs","","Get highest counter from the vault for known records",4,[[],[["hashmap",3],["recordid",3]]]],[11,"not_older_than","","Check the age of the records. Fills the `record_ctrs` with…",4,[[["hashmap",3]],["result",6]]],[11,"reader","","Converts the `DBView` into a `DBReader`.",4,[[],["dbreader",3]]],[11,"writer","","Converts the `DBView` into a `DBWriter` for a specific…",4,[[["recordid",3]],["dbwriter",3]]],[11,"gc","","Garbage collect the records.",4,[[],[["deleterequest",3],["vec",3]]]],[11,"prepare_read","","Prepare a record for reading. Create a `ReadRequest` to…",3,[[["recordid",3]],[["preparedread",4],["result",6]]]],[11,"read","","Open a record given a `ReadResult`. Returns a vector of…",3,[[["readresult",3]],[["result",6],["vec",3]]]],[11,"is_active_blob","","",3,[[["blobid",3]]]],[11,"exists","","",3,[[["recordid",3]]]],[11,"next_ctr","","",5,[[],["val",3]]],[11,"truncate","","Create a new empty record or truncate an existing one",5,[[],[["writerequest",3],["result",6]]]],[11,"relative_balance","","Check the balance of the amount of valid records compared…",5,[[]]],[11,"write","","Write the `data` to the record, replaces existing data and…",5,[[["recordhint",3]],[["result",6],["vec",3]]]],[11,"revoke","","Revoke a record.",5,[[],[["writerequest",3],["result",6]]]],[6,"Result","","",null,null],[8,"Base64Decodable","","a trait to make types base64 decodable",null,null],[10,"from_base64","","",15,[[],["result",6]]],[8,"Base64Encodable","","a trait to make types base64 encodable",null,null],[10,"base64","","",14,[[],["string",3]]],[8,"BoxProvider","","A provider interface between the vault and a crypto box.…",null,null],[10,"box_key_len","","function for the key length of the crypto box",17,[[]]],[10,"box_overhead","","gets the crypto box\'s overhead",17,[[]]],[10,"box_seal","","seals some data into the crypto box using the `key` and…",17,[[["key",3]],[["result",6],["vec",3]]]],[10,"box_open","","opens a crypto box to get data using the `key` and the `ad`.",17,[[["key",3]],[["result",6],["vec",3]]]],[10,"random_buf","","fills a buffer `buf` with secure random bytes.",17,[[],["result",6]]],[11,"random_vec","vault::crypto_box","creates a vector with secure random bytes based off of an…",17,[[],[["result",6],["vec",3]]]],[8,"Decrypt","vault","Trait for decryptable data",null,null],[11,"decrypt","vault::crypto_box","decrypts raw data and creates a new type T from the…",19,[[["asref",8],["key",3]],["result",6]]],[8,"Encrypt","vault","trait for encryptable data",null,null],[11,"encrypt","vault::crypto_box","encrypts a raw data and creates a type T from the ciphertext",18,[[["asref",8],["key",3]],["result",6]]],[11,"from","vault","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","vault::base64","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","vault::types::transactions","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","vault::types::utils","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","vault::vault::chain","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"type_id","vault::types::transactions","",22,[[],["val",3]]],[11,"type_id","","",23,[[],["val",3]]],[11,"type_id","","",24,[[],["val",3]]],[11,"drop","vault","",0,[[]]],[11,"as_mut","vault::types::transactions","",20,[[]]],[11,"as_mut","","",25,[[]]],[11,"as_mut","","",26,[[]]],[11,"as_ref","","",20,[[]]],[11,"as_ref","","",25,[[]]],[11,"as_ref","","",26,[[]]],[11,"as_ref","vault","",2,[[]]],[11,"as_ref","","",1,[[]]],[11,"as_ref","vault::types::utils","",30,[[]]],[11,"as_ref","","",31,[[]]],[11,"as_ref","vault","",8,[[]]],[11,"from","vault::types::transactions","",25,[[["vec",3]]]],[11,"from","","",25,[[]]],[11,"from","","",26,[[["vec",3]]]],[11,"from","","",26,[[]]],[11,"from","vault","",2,[[]]],[11,"from","vault::types::utils","",29,[[]]],[11,"clone","vault","",0,[[]]],[11,"clone","vault::types::transactions","",27,[[],["transactiontype",4]]],[11,"clone","","",20,[[],["transaction",3]]],[11,"clone","vault","",2,[[],["recordhint",3]]],[11,"clone","vault::types::utils","",29,[[],["val",3]]],[11,"clone","vault","",1,[[],["chainid",3]]],[11,"clone","vault::types::utils","",30,[[],["transactionid",3]]],[11,"clone","","",31,[[],["blobid",3]]],[11,"clone","vault","",11,[[],["kind",4]]],[11,"clone","","",7,[[],["readrequest",3]]],[11,"clone","","",8,[[],["readresult",3]]],[11,"clone","","",10,[[],["writerequest",3]]],[11,"clone","","",6,[[],["deleterequest",3]]],[11,"clone","","",9,[[],["recordid",3]]],[11,"default","vault::types::transactions","",20,[[]]],[11,"cmp","vault","",0,[[],["ordering",4]]],[11,"cmp","vault::types::transactions","",27,[[["transactiontype",4]],["ordering",4]]],[11,"cmp","vault","",2,[[["recordhint",3]],["ordering",4]]],[11,"cmp","vault::types::utils","",29,[[],["ordering",4]]],[11,"cmp","vault","",1,[[["chainid",3]],["ordering",4]]],[11,"cmp","vault::types::utils","",30,[[["transactionid",3]],["ordering",4]]],[11,"cmp","","",31,[[["blobid",3]],["ordering",4]]],[11,"cmp","vault","",9,[[["recordid",3]],["ordering",4]]],[11,"eq","","",0,[[]]],[11,"eq","vault::types::transactions","",27,[[["transactiontype",4]]]],[11,"eq","","",20,[[["transaction",3]]]],[11,"ne","","",20,[[["transaction",3]]]],[11,"eq","vault","",2,[[["recordhint",3]]]],[11,"ne","","",2,[[["recordhint",3]]]],[11,"eq","vault::types::utils","",29,[[["val",3]]]],[11,"ne","","",29,[[["val",3]]]],[11,"eq","vault","",1,[[["chainid",3]]]],[11,"ne","","",1,[[["chainid",3]]]],[11,"eq","vault::types::utils","",30,[[["transactionid",3]]]],[11,"ne","","",30,[[["transactionid",3]]]],[11,"eq","","",31,[[["blobid",3]]]],[11,"ne","","",31,[[["blobid",3]]]],[11,"eq","vault","",11,[[["kind",4]]]],[11,"eq","","",7,[[["readrequest",3]]]],[11,"ne","","",7,[[["readrequest",3]]]],[11,"eq","","",9,[[["recordid",3]]]],[11,"ne","","",9,[[["recordid",3]]]],[11,"eq","","",12,[[["preparedread",4]]]],[11,"ne","","",12,[[["preparedread",4]]]],[11,"partial_cmp","","",0,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","vault::types::transactions","",27,[[["transactiontype",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","vault","",2,[[["recordhint",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["recordhint",3]]]],[11,"le","","",2,[[["recordhint",3]]]],[11,"gt","","",2,[[["recordhint",3]]]],[11,"ge","","",2,[[["recordhint",3]]]],[11,"partial_cmp","vault::types::utils","",29,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","vault","",1,[[["chainid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["chainid",3]]]],[11,"le","","",1,[[["chainid",3]]]],[11,"gt","","",1,[[["chainid",3]]]],[11,"ge","","",1,[[["chainid",3]]]],[11,"partial_cmp","vault::types::utils","",30,[[["transactionid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",30,[[["transactionid",3]]]],[11,"le","","",30,[[["transactionid",3]]]],[11,"gt","","",30,[[["transactionid",3]]]],[11,"ge","","",30,[[["transactionid",3]]]],[11,"partial_cmp","","",31,[[["blobid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",31,[[["blobid",3]]]],[11,"le","","",31,[[["blobid",3]]]],[11,"gt","","",31,[[["blobid",3]]]],[11,"ge","","",31,[[["blobid",3]]]],[11,"partial_cmp","vault","",9,[[["recordid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["recordid",3]]]],[11,"le","","",9,[[["recordid",3]]]],[11,"gt","","",9,[[["recordid",3]]]],[11,"ge","","",9,[[["recordid",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","vault::types::transactions","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","vault","",2,[[["formatter",3]],["result",6]]],[11,"fmt","vault::types::utils","",29,[[["formatter",3]],["result",6]]],[11,"fmt","vault","",1,[[["formatter",3]],["result",6]]],[11,"fmt","vault::types::utils","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","vault","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"add","vault::types::utils","",29,[[]]],[11,"add_assign","","",29,[[]]],[11,"hash","vault","",0,[[]]],[11,"hash","vault::types::transactions","",27,[[]]],[11,"hash","","",20,[[]]],[11,"hash","vault","",2,[[]]],[11,"hash","vault::types::utils","",29,[[]]],[11,"hash","vault","",1,[[]]],[11,"hash","vault::types::utils","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","vault","",11,[[]]],[11,"hash","","",9,[[]]],[11,"try_from","vault::types::transactions","",27,[[["val",3]],["result",4]]],[11,"try_from","","",20,[[["vec",3]],["result",4]]],[11,"try_from","vault","",1,[[],["result",4]]],[11,"try_from","","",1,[[["vec",3]],["result",4]]],[11,"try_from","vault::types::utils","",30,[[],["result",4]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_from","vault","",9,[[["vec",3]],["result",4]]],[11,"try_from","","",9,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","vault::types::transactions","",20,[[],["result",4]]],[11,"serialize","vault","",2,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","vault::types::utils","",30,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","vault","",11,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","vault::types::transactions","",20,[[],["result",4]]],[11,"deserialize","vault","",2,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","vault::types::utils","",30,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","vault","",11,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]]],"p":[[3,"Key"],[3,"ChainId"],[3,"RecordHint"],[3,"DBReader"],[3,"DBView"],[3,"DBWriter"],[3,"DeleteRequest"],[3,"ReadRequest"],[3,"ReadResult"],[3,"RecordId"],[3,"WriteRequest"],[4,"Kind"],[4,"PreparedRead"],[4,"Error"],[8,"Base64Encodable"],[8,"Base64Decodable"],[3,"Base64"],[8,"BoxProvider"],[8,"Encrypt"],[8,"Decrypt"],[3,"Transaction"],[3,"UntypedTransaction"],[3,"DataTransaction"],[3,"RevocationTransaction"],[3,"InitTransaction"],[3,"SealedTransaction"],[3,"SealedBlob"],[4,"TransactionType"],[8,"TypedTransaction"],[3,"Val"],[3,"TransactionId"],[3,"BlobId"],[8,"AsView"],[8,"AsViewMut"],[3,"Chain"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);