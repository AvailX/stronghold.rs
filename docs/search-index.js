var searchIndex = JSON.parse('{\
"communication":{"doc":"Stronghold Communication","t":[0,0,0,12,12,13,13,13,13,13,13,13,13,3,3,4,4,13,13,13,13,4,13,13,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,3,4,13,13,13,13,13,13,4,4,13,13,24,13,13,13,13,13,13,13,13,8,13,13,13,8,12,11,11,11,11,12,11,11,12,0,11,0,12,12,11,11,11,11,11,12,10,12,11,11,11,11,12,0,12,12,11,10,11,11,11,11,11,11,0,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,13,3,3,4,13,13,3,13,13,4,24,13,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,6,3,12,11,11,11,11,11,11,11,12,11,11,11,12,12,12,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,13,13,13,13,13,13,13,4,4,13,13,13,13,4,13,13,3,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,3,4,13,13,13,13,13,13,13,13,13,13,8,13,13,4,4,3,4,4,3,4,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,12,12,11,11,0,12,12,12,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,4,4,3,4,4,4,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,3,13,13,13,13,13,13,13,13,3,4,13,13,13,13,6,4,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["actor","behaviour","libp2p","0","0","AddPeer","AddPeerResult","AddPermissions","BanPeer","Banned","BannedPeerAck","Both","CheckConnectionResult","CommunicationActor","CommunicationActorConfig","CommunicationRequest","CommunicationResults","ConfigRelay","ConfigRelayResult","ConfigureFirewall","ConfigureFirewallAck","ConnectPeerError","ConnectionLimit","Dialing","EstablishedConnection","FirewallPermission","FirewallRule","GetSwarmInfo","Handler","In","Inbound","InvalidAddress","InvalidPeerId","Io","Listening","LocalFirewallRejected","NoAddresses","Out","Outbound","PermissionValue","RelayDirection","RemoveListener","RemoveListenerAck","RemovePermissions","RemoveRelay","RemoveRelayAck","RemoveRule","RequestDirection","RequestMessageError","RequestMsg","RequestMsgResult","RequestPermissions","SetClientRef","SetClientRefAck","SetRules","Shutdown","StartListening","StartListeningResult","SwarmInfo","Timeout","ToPermissionVariants","Transport","UnbanPeer","UnbannedPeerAck","VariantPermission","_marker","borrow","borrow","borrow_mut","borrow_mut","client","clone","clone_into","connected_point","connections","create_args","firewall","firewall_default_in","firewall_default_out","fmt","from","from","into","into","is_relay","permission","poll_swarm_handle","post_start","post_stop","recv","send_swarm_task","start","swarm_task","swarm_task_config","swarm_tx","to_owned","to_permissioned","try_from","try_from","try_into","try_into","type_id","type_id","types","vzip","vzip","addr","direction","is_relay","peer_id","peer_id","peer_id","request","connections","is_connected","listeners","peer_id","peer_id","change_default","change_default","direction","direction","direction","direction","peers","peers","peers","peers","permission","permissions","permissions","set_default","ConnectionManager","borrow","borrow_mut","current_connections","from","insert","into","map","new","remove_connection","try_from","try_into","type_id","vzip","0","0","AddPermissions","FirewallConfiguration","FirewallPermission","FirewallRule","In","Out","PermissionValue","RemovePermissions","RemoveRule","RequestDirection","RequestPermissions","SetRules","ToPermissionVariants","VariantPermission","add_permission","add_permissions","all","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default_in","default_out","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_default","get_rule","has_rule","into","into","into","into","into","is_permitted","ne","ne","new","new","none","permission","permits","remove_permission","remove_permissions","remove_rule","rules_in","rules_out","set_default","set_rule","to_owned","to_owned","to_owned","to_owned","to_owned","to_permissioned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","value","vzip","vzip","vzip","vzip","vzip","change_default","change_default","direction","direction","direction","direction","peers","peers","peers","peers","permission","permissions","permissions","set_default","HandleErr","P2PSwarmEvent","SwarmTask","_marker","add_listener_relay","add_peer","ask_client","await_connect_result","await_event","borrow","borrow_mut","client","configure_firewall","connect_peer","connect_peer_via_addr","connection_manager","dialing_relays","firewall","from","handle_actor_request","handle_incoming_request","handle_swarm_event","into","listener","listening_relays","new","poll_swarm","relay_addr","remove_relay","send_request","send_response","set_relay","shutdown","start_listening","swarm","swarm_rx","system","try_from","try_into","type_id","update_firewall_rule","vzip","AddPeer","AddPeerResult","BanPeer","Banned","BannedPeerAck","Both","CheckConnectionResult","CommunicationRequest","CommunicationResults","ConfigRelay","ConfigRelayResult","ConfigureFirewall","ConfigureFirewallAck","ConnectPeerError","ConnectionLimit","Dialing","EstablishedConnection","GetSwarmInfo","Handler","Inbound","InvalidAddress","InvalidPeerId","Io","Listening","LocalFirewallRejected","NoAddresses","Outbound","RelayDirection","RemoveListener","RemoveListenerAck","RemoveRelay","RemoveRelayAck","RequestMessageError","RequestMsg","RequestMsgResult","SetClientRef","SetClientRefAck","Shutdown","StartListening","StartListeningResult","SwarmInfo","Timeout","Transport","UnbanPeer","UnbannedPeerAck","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connected_point","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","is_relay","new","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","addr","direction","is_relay","peer_id","peer_id","peer_id","request","connections","is_connected","listeners","peer_id","peer_id","BehaviourConfig","BehaviourError","ConnectionClosed","ConnectionClosed","DialFailure","Discovered","Error","Expired","Identify","InboundFailure","Mdns","MdnsError","MessageEvent","NoiseAuthenticError","OutboundFailure","P2PEvent","P2PIdentifyEvent","P2PIdentifyInfo","P2PInboundFailure","P2PMdnsEvent","P2PNetworkBehaviour","P2POutboundFailure","P2PProtocolsHandlerUpgrErr","P2PReqResEvent","Pushed","Received","Req","RequestResponse","Res","ResSent","ResponseOmission","Sent","Timeout","Timeout","Timeout","Timer","TransportError","UnsupportedProtocols","UnsupportedProtocols","Upgrade","add_peer_addr","addresses_of_peer","agent_version","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","events","fmt","fmt","fmt","from","from","from","get_active_mdns_peers","get_all_peers","get_peer_addr","identify","init_swarm","inject_addr_reach_failure","inject_address_change","inject_connected","inject_connection_closed","inject_connection_established","inject_dial_failure","inject_disconnected","inject_event","inject_event","inject_event","inject_event","inject_event","inject_expired_external_addr","inject_expired_listen_addr","inject_listener_closed","inject_listener_error","inject_new_external_addr","inject_new_listen_addr","inject_new_listener","into","into","into","keep_alive","listen_addrs","mdns","mdns_query_interval","mdns_ttl","msg_proto","new","new_handler","observed_addr","peers","poll","poll","protocol","protocol_version","protocols","public_key","relay","remove_peer","remove_peer_addr","response_channels","send_request","send_response","timeout","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","types","vzip","vzip","vzip","error","info","peer_id","peer_id","peer_id","peer_id","error","error","peer_id","peer_id","peer_id","peer_id","peer_id","request","request_id","request_id","request_id","request_id","request_id","response","MessageCodec","MessageEvent","MessageProtocol","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","fmt","from","from","into","into","p","protocol_name","q","read_request","read_response","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_request","write_response","ConnectionClosed","ConnectionClosed","DialFailure","Discovered","Error","Expired","Identify","InboundFailure","Mdns","OutboundFailure","P2PEvent","P2PIdentifyEvent","P2PIdentifyInfo","P2PInboundFailure","P2PMdnsEvent","P2POutboundFailure","P2PProtocolsHandlerUpgrErr","P2PReqResEvent","Pushed","Received","Req","RequestResponse","Res","ResSent","ResponseOmission","Sent","Timeout","Timeout","Timeout","Timer","UnsupportedProtocols","UnsupportedProtocols","Upgrade","agent_version","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","listen_addrs","ne","ne","ne","ne","ne","observed_addr","protocol_version","protocols","public_key","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","info","peer_id","peer_id","peer_id","peer_id","error","error","peer_id","peer_id","peer_id","peer_id","peer_id","request","request_id","request_id","request_id","request_id","request_id","response","BannedPeer","Behaviour","ConnectedPoint","ConnectionClosed","ConnectionEstablished","ConnectionLimit","Dccp","Dialer","Dialing","Dns","Dns4","Dns6","Dnsaddr","Ed25519","ExpiredListenAddr","Http","Https","IncomingConnection","IncomingConnectionError","Ip4","Ip6","Keypair","Listener","ListenerClosed","ListenerError","Memory","Multiaddr","NewListenAddr","Onion","Onion3","P2p","P2pCircuit","P2pWebRtcDirect","P2pWebRtcStar","P2pWebSocketStar","PeerId","Protocol","Quic","Rsa","Sctp","Secp256k1","Swarm","SwarmEvent","Tcp","Udp","Udt","Unix","UnknownPeerUnreachableAddr","UnreachableAddr","Utp","Ws","Wss","acquire","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","current","deserialize","empty","ends_with","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_iter","from_multihash","from_public_key","from_str","from_str","from_str_parts","generate_ed25519","generate_secp256k1","get_hash","get_hash","get_hash","get_remote_address","hash","hash","hash","into","into","into","into","into","into","into","is_dialer","is_empty","is_listener","is_public_key","iter","len","limit","multihash","ne","ne","ne","ne","partial_cmp","partial_cmp","pop","protocol_name","public","push","random","replace","rsa_from_pkcs8","secp256k1_from_der","serialize","set_remote_address","sign","to_base58","to_bytes","to_endpoint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_capacity","write_bytes","address","local_addr","send_back_addr","address","address","addresses","attempts_remaining","cause","endpoint","endpoint","endpoint","error","error","error","error","local_addr","local_addr","num_established","num_established","peer_id","peer_id","peer_id","peer_id","reason","send_back_addr","send_back_addr"],"q":["communication","","","communication::actor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","communication::actor::CommunicationRequest","","","","","","","communication::actor::CommunicationResults","","","","","communication::actor::FirewallRule","","","","","","","","","","","","","","communication::actor::connections","","","","","","","","","","","","","","communication::actor::firewall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","communication::actor::firewall::FirewallRule","","","","","","","","","","","","","","communication::actor::swarm_task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","communication::actor::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","communication::actor::types::CommunicationRequest","","","","","","","communication::actor::types::CommunicationResults","","","","","communication::behaviour","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","communication::behaviour::P2PIdentifyEvent","","","","","","communication::behaviour::P2PReqResEvent","","","","","","","","","","","","","","communication::behaviour::protocol","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","communication::behaviour::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","communication::behaviour::types::P2PIdentifyEvent","","","","","","communication::behaviour::types::P2PReqResEvent","","","","","","","","","","","","","","communication::libp2pcommunication::libp2p::ConnectedPoint","","","communication::libp2p::SwarmEvent","","","","","","","","","","","","","","","","","","","","","",""],"d":["Actor","P2PNetworkBehaviour","Re-export [<code>libp2p</code>] types.","","","Add dialing information for a peer. This will attempt to …","Result of trying to connect a peer after adding it.","Add specific permissions for certain peers and optionally …","Ban a peer, which prevents any communication from / to …","The peer is currently banned.","","Use the peer for Dialing and Listening.","Check if the connection exists.","Actor responsible for creating a [<code>P2PNetworkBehaviour</code>] …","The actor configuration","Requests for the [<code>CommunicationActor</code>].","Returned results from the [<code>CommunicationActor</code>]","Configure to use a peer as relay for dialing, listening, …","Result for configuring the Relay. Error if the relay …","Add or remove a rule of the firewall. If a rule for a …","Successfully set firewall rule.","Errors that can occur in the context of a pending …","The connection was dropped because the connection limit …","Use the relay if a peer can not be dialed directly.","Information about the connection with a remote peer as …","The sum of allowed permissions. This is using the same …","Configure the firewall.","Get information about the swarm with local peer id, …","The connection handler produced an error.","Incoming request from a remote peer to the local system.","Possible failures occurring in the context of receiving …","The address given for dialing is invalid.","The peer identity obtained on the connection did not …","An I/O error occurred on the connection.","Maintain a keep-alive connection to a relay peer that …","The request was rejected by the local firewall.","No addresses for the peer to dial","Outgoing request from the local system to a remote peer.","Possible failures occurring in the context of sending an …","The permission value for request variants. It is a  bit …","Direction for which a relay peer is used.","Stop listening locally to the swarm. Without a listener, …","Stopped listening to the swarm for incoming connections.","Remove specific permissions from certain peers and …","Stop using the peer as relay.","Successfully removed relay.","Remove a rule for a specific peer, which results in using …","The direction of a [<code>CommunicationRequest::RequestMsg</code>] …","","Send a request to a remote peer. This requires that a …","Response or Error for an [<code>RequestMsg</code>] to a remote peer","Implements the [<code>VariantPermission</code>] for struct/ unions …","Set the actor reference that incoming request are …","New client actor reference was set.","Set new rules either for specific peers, or the default …","Shutdown communication actor.","Start listening to a port on the swarm. If no <code>Multiaddr</code> …","Result of starting a new listener on the swarm. If it was …","Information about the local swarm.","Timout on connection attempt","Convert an element to implement permissions.","An error occurred while negotiating the transport …","Unban a peer to allow future communication.","","The permission value for the different variants of an …","","","","","","Target client for incoming request","","","","","","","Default restriction for incoming requests.","Default restriction for outgoing requests.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Established connections.","","The listening addresses of the local system. Not all of …","","The local peer id.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add specific permissions for certain peers and optionally …","","The sum of allowed permissions. This is using the same …","Configure the firewall.","Incoming request from a remote peer to the local system.","Outgoing request from the local system to a remote peer.","The permission value for request variants. It is a  bit …","Remove specific permissions from certain peers and …","Remove a rule for a specific peer, which results in using …","The direction of a [<code>CommunicationRequest::RequestMsg</code>] …","Implements the [<code>VariantPermission</code>] for struct/ unions …","Set new rules either for specific peers, or the default …","Convert an element to implement permissions.","The permission value for the different variants of an …","Adds a new value to the sum and therefore allows this …","Adds a new value to the sum and therefore allows this …","All values are allowed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new permission value for an index, the value …","","No values are allowed.","","Check if the sum includes this value i.g. if a certain …","Remove a certain value from the sum to remove permission.","Remove a certain value from the sum to remove permission.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add dialing information for a peer. This will attempt to …","Result of trying to connect a peer after adding it.","Ban a peer, which prevents any communication from / to …","The peer is currently banned.","","Use the peer for Dialing and Listening.","Check if the connection exists.","Requests for the [<code>CommunicationActor</code>].","Returned results from the [<code>CommunicationActor</code>]","Configure to use a peer as relay for dialing, listening, …","Result for configuring the Relay. Error if the relay …","Add or remove a rule of the firewall. If a rule for a …","Successfully set firewall rule.","Errors that can occur in the context of a pending …","The connection was dropped because the connection limit …","Use the relay if a peer can not be dialed directly.","Information about the connection with a remote peer as …","Get information about the swarm with local peer id, …","The connection handler produced an error.","Possible failures occurring in the context of receiving …","The address given for dialing is invalid.","The peer identity obtained on the connection did not …","An I/O error occurred on the connection.","Maintain a keep-alive connection to a relay peer that …","The request was rejected by the local firewall.","No addresses for the peer to dial","Possible failures occurring in the context of sending an …","Direction for which a relay peer is used.","Stop listening locally to the swarm. Without a listener, …","Stopped listening to the swarm for incoming connections.","Stop using the peer as relay.","Successfully removed relay.","","Send a request to a remote peer. This requires that a …","Response or Error for an [<code>RequestMsg</code>] to a remote peer","Set the actor reference that incoming request are …","New client actor reference was set.","Shutdown communication actor.","Start listening to a port on the swarm. If no <code>Multiaddr</code> …","Result of starting a new listener on the swarm. If it was …","Information about the local swarm.","Timout on connection attempt","An error occurred while negotiating the transport …","Unban a peer to allow future communication.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Established connections.","","The listening addresses of the local system. Not all of …","","The local peer id.","Configuration for initiating the [<code>P2PNetworkBehaviour</code>].","Error upon creating a new [<code>P2PNetworkBehaviour</code>]","The connection closed before a response was received.","The connection closed before a response could be send.","The request could not be sent because a dialing attempt …","Discovered nodes through mDNS.","Error while attempting to identify the remote.","Each discovered record has a time-to-live. When this TTL …","Events from the libp2p identify protocol","","Events from the libp2p mDNS protocol","Error creating new mDNS behaviour","Trait for the generic Request and Response types","Error on upgrading the transport with noise authentication","","Event that was emitted by one of the protocols of the …","Event emitted  by the <code>Identify</code> behaviour.","Information of a peer sent in <code>Identify</code> protocol responses.","Possible failures occurring in the context of receiving an…","Event that can be produced by the <code>Mdns</code> behaviour.","The [<code>P2PNetworkBehaviour</code>] determines the behaviour of the …","Possible failures occurring in the context of sending an …","Error that can happen on an outbound substream opening …","Event emitted  by the <code>RequestResponse</code> behaviour.","Identification information of the local node has been …","Identifying information has been received from a peer.","Request Message","Events from the custom request-response protocol","Response Message to a received <code>Req</code>.","A response to an inbound request has been sent.","The local peer failed to respond to an inbound request …","Identifying information of the local node has been sent …","The opening attempt timed out before the negotiation was …","The request timed out before a response was received.","The inbound request timed out, either while reading the …","There was an error in the timer used.","Error on the transport layer","The remote supports none of the requested protocols.","The local peer supports none of the requested protocols.","Error while upgrading the substream to the protocol we …","","","Name and version of the peer, similar to the <code>User-Agent</code> …","","","","","","","","","","","","","","","","","Get the peers discovered by mdns","","","","Creates a new [<code>P2PNetworkBehaviour</code>] and returns the swarm …","","","","","","","","","","","","","","","","","","","","","","","Duration to keep an idle connection alive when no Request …","The addresses that the peer is listening on.","","Frequency for new peers via mDNS","TTL to use for mDNS record","","","","The address observed by the peer for the local node.","","","","","Version of the protocol family used by the peer, e.g. …","The list of protocols supported by the peer, e.g. …","The public key underlying the peer’s <code>PeerId</code>.","","","","","","","Timeout for outgoing requests until a […","","","","","","","","","","","","","","","","","","","","The peer that the information has been sent to.","","","","","","","","","","","","","","","","Describes how messages are read from and written to the …","Trait for the generic Request and Response types","Custom protocol that extends libp2ps …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The connection closed before a response was received.","The connection closed before a response could be send.","The request could not be sent because a dialing attempt …","Discovered nodes through mDNS.","Error while attempting to identify the remote.","Each discovered record has a time-to-live. When this TTL …","Events from the libp2p identify protocol","","Events from the libp2p mDNS protocol","","Event that was emitted by one of the protocols of the …","Event emitted  by the <code>Identify</code> behaviour.","Information of a peer sent in <code>Identify</code> protocol responses.","Possible failures occurring in the context of receiving an…","Event that can be produced by the <code>Mdns</code> behaviour.","Possible failures occurring in the context of sending an …","Error that can happen on an outbound substream opening …","Event emitted  by the <code>RequestResponse</code> behaviour.","Identification information of the local node has been …","Identifying information has been received from a peer.","Request Message","Events from the custom request-response protocol","Response Message to a received <code>Req</code>.","A response to an inbound request has been sent.","The local peer failed to respond to an inbound request …","Identifying information of the local node has been sent …","The opening attempt timed out before the negotiation was …","The request timed out before a response was received.","The inbound request timed out, either while reading the …","There was an error in the timer used.","The remote supports none of the requested protocols.","The local peer supports none of the requested protocols.","Error while upgrading the substream to the protocol we …","Name and version of the peer, similar to the <code>User-Agent</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The addresses that the peer is listening on.","","","","","","The address observed by the peer for the local node.","Version of the protocol family used by the peer, e.g. …","The list of protocols supported by the peer, e.g. …","The public key underlying the peer’s <code>PeerId</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The peer that the information has been sent to.","","","","","","","","","","","","","","","","We connected to a peer, but we immediately closed the …","Event generated by the <code>NetworkBehaviour</code>.","The endpoint roles associated with a peer-to-peer …","A connection with the given peer has been closed, …","A connection to the given peer has been opened.","Information about a connection limit.","","We dialed the node.","A new dialing attempt has been initiated.","","","","","An Ed25519 keypair.","One of our listeners has reported the expiration of a …","","","A new connection arrived on a listener and is in the …","An error happened on a connection during its initial …","","","Identity keypair of a node.","We received the node.","One of the listeners gracefully closed.","One of the listeners reported a non-fatal error.","Contains the “port” to contact. Similar to TCP or …","Representation of a Multiaddr.","One of our listeners has reported a new local listening …","","","","","","","","Identifier of a peer of the network.","<code>Protocol</code> describes all possible multiaddress protocols.","","An RSA keypair.","","A Secp256k1 keypair.","Contains the state of the network, plus the way it should …","Event generated by the <code>Swarm</code>.","","","","","Tried to dial an address but it ended up being …","Tried to dial an address but it ended up being …","","","","Turn this <code>Protocol</code> into one that owns its data, thus …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The current number of connections.","","Create a new, empty multiaddress.","Checks whether the given <code>Multiaddr</code> is a suffix of this …","","","","","","","Convert a Multiaddr to a string","","","","","","","","","","","","","","","","","","","","","","","Parse a single <code>Protocol</code> value from its byte slice …","Parses a <code>PeerId</code> from bytes.","","Tries to turn a <code>Multihash</code> into a <code>PeerId</code>.","Builds a <code>PeerId</code> from a public key.","","","Parse a protocol value from the given iterator of string …","Generate a new Ed25519 keypair.","Generate a new Secp256k1 keypair.","","","","Returns the address of the remote stored in this struct.","","","","","","","","","","","Returns true if we are <code>Dialer</code>.","Returns true if the length of this multiaddress is 0.","Returns true if we are <code>Listener</code>.","Checks whether the public key passed as parameter matches …","Returns the components of this multiaddress.","Return the length in bytes of this multiaddress.","The maximum number of connections.","","","","","","","","Pops the last <code>Protocol</code> of this multiaddr, or <code>None</code> if the …","","Get the public key of this keypair.","Adds an already-parsed address component to the end of …","Generates a random peer ID from a cryptographically …","Replace a [<code>Protocol</code>] at some position in this <code>Multiaddr</code>.","Decode an keypair from a DER-encoded secret key in PKCS#8 …","Decode a keypair from a DER-encoded Secp256k1 secret key …","","Modifies the address of the remote stored in this struct.","Sign a message using the private key of this keypair, …","Returns a base-58 encoded string of this <code>PeerId</code>.","Returns a raw bytes representation of this <code>PeerId</code>.","Turns the <code>ConnectedPoint</code> into the corresponding <code>Endpoint</code>.","","","","","","","","","","","Return a copy of this [<code>Multiaddr</code>]’s byte representation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Like [<code>Multiaddr::push</code>] but consumes <code>self</code>.","Create a new, empty multiaddress with the given capacity.","Encode this protocol by writing its binary representation …","Multiaddress that was successfully dialed.","Local connection address.","Stack of protocols used to send back data to the remote.","Address that we failed to reach.","Address that we failed to reach.","The addresses that the listener was listening on. These …","Number of remaining connection attempts that are being …","Reason for the disconnection, if it was not a successful …","Endpoint of the connection that has been opened.","Endpoint of the connection that has been closed.","Endpoint of the connection that has been closed.","The error that happened.","Error that has been encountered.","Error that has been encountered.","The listener error.","Local connection address. This address has been earlier …","Local connection address. This address has been earlier …","Number of established connections to this peer, including …","Number of other remaining connections to this same peer.","Identity of the peer that we have connected to.","Identity of the peer that we have connected to.","Identity of the banned peer.","<code>PeerId</code> that we were trying to reach.","Reason for the closure. Contains <code>Ok(())</code> if the stream …","Address used to send back data to the remote.","Address used to send back data to the remote."],"i":[0,0,0,1,2,3,4,5,3,6,4,7,4,0,0,0,0,3,4,3,4,0,6,7,0,0,0,3,6,8,9,6,6,6,7,9,6,8,9,0,0,3,4,5,3,4,5,0,0,3,4,0,3,4,5,3,3,4,4,6,0,6,3,4,0,10,10,11,10,11,11,11,11,12,0,10,0,11,11,11,10,11,10,11,12,13,10,10,10,10,10,12,0,10,10,11,14,10,11,10,11,10,11,0,10,11,15,16,15,17,15,16,17,18,19,18,19,18,20,21,22,20,21,23,22,20,21,23,22,20,21,22,0,24,24,24,24,24,24,24,24,24,24,24,24,24,1,2,5,0,0,0,8,8,0,5,5,0,0,5,0,0,2,2,2,1,2,8,5,25,1,2,8,5,25,1,2,8,5,25,1,2,8,5,25,25,25,25,1,1,2,2,1,2,8,5,25,1,2,2,8,5,25,25,25,25,1,2,8,5,25,25,1,2,1,25,2,13,2,2,2,25,25,25,25,25,1,2,8,5,25,14,1,2,8,5,25,1,2,8,5,25,1,2,8,5,25,1,2,1,2,8,5,25,20,21,22,20,21,23,22,20,21,23,22,20,21,22,0,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,3,4,3,6,4,7,4,0,0,3,4,3,4,0,6,7,0,3,6,9,6,6,6,7,9,6,9,0,3,4,3,4,0,3,4,3,4,3,3,4,4,6,6,3,4,7,3,9,12,4,6,7,3,9,12,4,6,7,3,9,12,4,6,7,3,9,12,4,6,12,7,3,9,12,4,6,7,3,9,12,4,6,6,6,6,6,7,3,9,12,4,6,12,12,12,7,3,9,12,4,6,7,3,9,12,4,6,7,3,9,12,4,6,7,3,9,12,4,6,7,3,9,12,4,6,15,16,15,17,15,16,17,18,19,18,19,18,0,0,27,28,27,29,30,29,31,32,31,33,0,33,32,0,0,0,0,0,0,0,0,0,30,30,32,31,32,32,28,30,34,27,28,34,33,27,28,34,35,35,36,33,37,35,33,37,35,37,37,37,35,33,33,37,33,37,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,33,37,35,37,36,35,37,37,35,37,35,36,35,35,35,0,36,36,36,35,35,35,35,35,35,37,37,33,33,37,35,33,37,35,33,37,35,0,33,37,35,38,39,39,40,41,38,42,43,44,45,42,43,46,44,44,45,42,43,46,45,0,0,0,47,48,47,48,47,48,47,48,48,47,47,48,47,48,48,47,48,48,48,47,48,47,48,47,48,47,48,47,48,48,48,27,28,27,29,30,29,31,32,31,32,0,0,0,0,0,0,0,0,30,30,32,31,32,32,28,30,34,27,28,34,27,28,34,36,29,36,34,30,27,28,32,31,29,36,34,30,27,28,32,31,29,36,34,30,27,28,32,31,29,36,34,30,27,28,32,31,29,36,34,30,27,28,32,31,29,36,34,30,27,28,32,31,29,36,34,30,27,28,32,31,31,31,31,29,36,34,30,27,28,32,31,36,29,36,30,32,31,36,36,36,36,29,36,34,30,27,28,32,31,29,36,34,30,27,28,32,31,29,36,34,30,27,28,32,31,29,36,34,30,27,28,32,31,29,36,34,30,27,28,32,31,38,39,39,40,41,38,42,43,44,45,42,43,46,44,44,45,42,43,46,45,49,49,0,49,49,0,50,51,49,50,50,50,50,52,49,50,50,49,49,50,50,0,51,49,49,50,0,49,50,50,50,50,50,50,50,0,0,50,52,50,52,0,0,50,50,50,50,49,49,50,50,50,50,53,54,50,53,54,51,55,52,49,50,53,54,51,55,52,49,53,50,53,54,51,55,52,50,53,54,51,55,52,53,54,55,53,53,53,50,53,54,51,50,50,53,53,54,54,51,55,55,49,50,50,50,50,53,53,53,53,53,54,54,51,55,52,49,50,54,53,54,54,53,54,50,52,52,53,54,51,51,53,54,51,50,53,54,51,55,52,49,51,53,51,54,53,53,55,54,50,53,54,51,53,54,53,53,52,53,54,53,52,52,53,51,52,54,54,51,50,53,54,51,55,52,50,53,54,55,53,50,53,53,53,53,54,54,54,51,55,52,49,50,53,54,51,55,52,49,50,53,54,51,55,52,49,50,53,54,51,55,52,49,53,53,50,56,57,57,58,59,60,58,61,62,61,63,64,58,59,65,66,64,62,61,62,61,63,58,60,66,64],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["communicationactorconfig",3]],[[]],null,null,[[]],null,null,null,[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[],["permissionvalue",3]],null,[[["context",3]]],[[]],[[["sender",6],["context",3]]],[[["communicationrequest",4],["sender",6]],[["result",4],["senderror",3]]],null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["vec",3]],[[]],[[["relaydirection",4],["connectedpoint",4],["peerid",3],["option",4]]],[[]],null,[[]],[[["peerid",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["permissionvalue",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["permissionvalue",3]],[[],["firewallpermission",3]],[[],["requestdirection",4]],[[],["firewallrule",4]],[[],["firewallconfiguration",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["u32",15]],["bool",15]],[[["permissionvalue",3]],["bool",15]],[[["firewallpermission",3]],["bool",15]],[[["u32",15]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u32",15]]],[[]],[[]],[[]],[[["requestdirection",4]],["firewallpermission",3]],[[["peerid",3],["requestdirection",4]],[["option",4],["firewallpermission",3]]],[[["peerid",3],["requestdirection",4]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[["peerid",3],["requestdirection",4]],["bool",15]],[[["permissionvalue",3]],["bool",15]],[[["firewallpermission",3]],["bool",15]],[[["u8",15]],["option",4]],[[["firewallpermission",3]],["firewallconfiguration",3]],[[]],[[],["permissionvalue",3]],[[["permissionvalue",3]],["bool",15]],[[["permissionvalue",3]]],[[]],[[["peerid",3],["requestdirection",4]]],null,null,[[["firewallpermission",3],["requestdirection",4]]],[[["peerid",3],["firewallpermission",3],["requestdirection",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["peerid",3]],[["peerid",3],["result",4],["connectpeererror",4]]],[[["relaydirection",4],["peerid",3],["multiaddr",3],["option",4],["option",4]],[["peerid",3],["result",4],["connectpeererror",4]]],[[],["option",4]],[[["peerid",3],["option",4]],[["result",4],["connectpeererror",4],["connectedpoint",4]]],[[["duration",3],["fn",8]],["option",4]],[[]],[[]],null,[[["firewallrule",4]]],[[["peerid",3]],[["result",4],["connectpeererror",4],["connectedpoint",4]]],[[["peerid",3],["multiaddr",3]],[["result",4],["connectpeererror",4],["connectedpoint",4]]],null,null,null,[[]],[[["communicationrequest",4],["sender",6]]],[[["peerid",3],["requestid",3]]],[[["p2pevent",4],["swarmevent",4]]],[[]],null,null,[[["keypair",4],["actorsystem",3],["unboundedreceiver",3],["communicationactorconfig",3],["behaviourconfig",3]]],[[]],null,[[["peerid",3]]],[[["peerid",3]],[["result",4],["requestmessageerror",4]]],[[["sender",6],["communicationresults",4]]],[[["peerid",3],["relaydirection",4]],[["peerid",3],["result",4],["connectpeererror",4]]],[[]],[[["multiaddr",3],["option",4]],["result",4]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["bool",15],["vec",3],["requestdirection",4],["peerid",3],["permissionvalue",3],["vec",3]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["relaydirection",4]],[[],["communicationrequest",4]],[[],["requestmessageerror",4]],[[],["establishedconnection",3]],[[],["communicationresults",4]],[[],["connectpeererror",4]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["pendingconnectionerror",4]]],[[["pendingconnectionerror",4]]],[[["dialerror",4]]],[[["connectionerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["relaydirection",4],["option",4],["connectedpoint",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["peerid",3],["multiaddr",3]]],[[["peerid",3]],[["multiaddr",3],["vec",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["behaviourconfig",3]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["peerid",3],["vec",3]]],[[],[["peerid",3],["vec",3]]],[[["peerid",3]],[["option",4],["vec",3]]],null,[[["keypair",4],["behaviourconfig",3]]],[[["multiaddr",3],["option",4],["error",8],["peerid",3]]],[[["connectionid",3],["connectedpoint",4],["peerid",3]]],[[["peerid",3]]],[[["connectionid",3],["connectedpoint",4],["peerid",3]]],[[["connectionid",3],["connectedpoint",4],["peerid",3]]],[[["peerid",3]]],[[["peerid",3]]],[[["identifyevent",4]]],[[]],[[["requestresponseevent",4]]],[[["mdnsevent",4]]],[[["connectionid",3],["peerid",3]]],[[["multiaddr",3]]],[[["listenerid",3],["multiaddr",3]]],[[["listenerid",3],["error",3],["result",4]]],[[["listenerid",3],["error",8]]],[[["multiaddr",3]]],[[["listenerid",3],["multiaddr",3]]],[[["listenerid",3]]],[[]],[[]],[[]],null,null,null,null,null,null,[[["duration",3],["option",4]]],[[]],null,null,[[["context",3]],[["poll",4],["networkbehaviouraction",4]]],[[["context",3]],[["networkbehaviouraction",4],["poll",4]]],null,null,null,null,null,[[["peerid",3]],[["vec",3],["option",4]]],[[["peerid",3],["multiaddr",3]]],null,[[["peerid",3]],["requestid",3]],[[["requestid",3]],["result",4]],null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["messageprotocol",3]],[[],["messagecodec",3]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[]],null,[[["messageprotocol",3]],[["pin",3],["box",3]]],[[["messageprotocol",3]],[["pin",3],["box",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["messageprotocol",3]],[["pin",3],["box",3]]],[[["messageprotocol",3]],[["pin",3],["box",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["p2pmdnsevent",4]],[[],["p2pidentifyinfo",3]],[[],["p2pprotocolshandlerupgrerr",4]],[[],["p2pidentifyevent",4]],[[],["p2poutboundfailure",4]],[[],["p2pinboundfailure",4]],[[],["p2preqresevent",4]],[[],["p2pevent",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["p2pmdnsevent",4]],["bool",15]],[[["p2pidentifyinfo",3]],["bool",15]],[[["p2pprotocolshandlerupgrerr",4]],["bool",15]],[[["p2pidentifyevent",4]],["bool",15]],[[["p2poutboundfailure",4]],["bool",15]],[[["p2pinboundfailure",4]],["bool",15]],[[["p2preqresevent",4]],["bool",15]],[[["p2pevent",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["identifyevent",4]],["p2pevent",4]],[[["mdnsevent",4]],["p2pevent",4]],[[["requestresponseevent",4]],["p2pevent",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["p2pmdnsevent",4]],["bool",15]],[[["p2pidentifyinfo",3]],["bool",15]],[[["p2pidentifyevent",4]],["bool",15]],[[["p2preqresevent",4]],["bool",15]],[[["p2pevent",4]],["bool",15]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["protocol",4]],[[]],[[],["multihash",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["protocol",4]],[[],["multiaddr",3]],[[],["peerid",3]],[[],["connectedpoint",4]],[[],["connectionlimit",3]],[[],["keypair",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["multiaddr",3]],["ordering",4]],[[["peerid",3]],["ordering",4]],null,[[],[["multiaddr",3],["result",4]]],[[],["multiaddr",3]],[[["multiaddr",3]],["bool",15]],[[["protocol",4]],["bool",15]],[[["multiaddr",3]],["bool",15]],[[["peerid",3]],["bool",15]],[[["connectedpoint",4]],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["ipv6addr",3]],["protocol",4]],[[["ipv4addr",3]],["protocol",4]],[[["ipaddr",4]],["protocol",4]],[[]],[[["ipaddr",4]],["multiaddr",3]],[[["protocol",4]],["multiaddr",3]],[[["ipv4addr",3]],["multiaddr",3]],[[["ipv6addr",3]],["multiaddr",3]],[[]],[[["publickey",4]],["peerid",3]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4],["error",4]]],[[],[["error",4],["peerid",3],["result",4]]],[[],["multiaddr",3]],[[["uint",3],["multihash",3]],[["multihash",3],["result",4],["peerid",3]]],[[["publickey",4]],["peerid",3]],[[["str",15]],[["result",4],["multiaddr",3],["error",4]]],[[["str",15]],[["result",4],["peerid",3]]],[[],[["result",4],["protocol",4],["error",4]]],[[],["keypair",4]],[[],["keypair",4]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["multiaddr",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["publickey",4]],[["bool",15],["option",4]]],[[],["iter",3]],[[],["usize",15]],null,null,[[["protocol",4]],["bool",15]],[[["multiaddr",3]],["bool",15]],[[["peerid",3]],["bool",15]],[[["connectedpoint",4]],["bool",15]],[[["multiaddr",3]],[["option",4],["ordering",4]]],[[["peerid",3]],[["option",4],["ordering",4]]],[[],[["option",4],["protocol",4]]],[[]],[[],["publickey",4]],[[["protocol",4]]],[[],["peerid",3]],[[["usize",15]],[["multiaddr",3],["option",4]]],[[],[["keypair",4],["decodingerror",3],["result",4]]],[[],[["keypair",4],["decodingerror",3],["result",4]]],[[],["result",4]],[[["multiaddr",3]]],[[],[["vec",3],["result",4],["signingerror",3]]],[[],["string",3]],[[],[["vec",3],["u8",15],["global",3]]],[[],["endpoint",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["vec",3],["u8",15],["global",3]]],[[],["result",4]],[[["str",15]],[["result",4],["multiaddr",3],["error",4]]],[[["vec",3],["u8",15],["global",3]],[["result",4],["multiaddr",3],["error",4]]],[[["string",3]],[["result",4],["multiaddr",3],["error",4]]],[[],["result",4]],[[["vec",3],["u8",15],["global",3]],[["peerid",3],["result",4]]],[[["uint",3],["multihash",3]],[["peerid",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["protocol",4]],["multiaddr",3]],[[["usize",15]],["multiaddr",3]],[[],[["result",4],["error",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"PermissionValue"],[3,"FirewallPermission"],[4,"CommunicationRequest"],[4,"CommunicationResults"],[4,"FirewallRule"],[4,"ConnectPeerError"],[4,"RelayDirection"],[4,"RequestDirection"],[4,"RequestMessageError"],[3,"CommunicationActor"],[3,"CommunicationActorConfig"],[3,"EstablishedConnection"],[8,"VariantPermission"],[8,"ToPermissionVariants"],[13,"AddPeer"],[13,"ConfigRelay"],[13,"RequestMsg"],[13,"SwarmInfo"],[13,"CheckConnectionResult"],[13,"AddPermissions"],[13,"RemovePermissions"],[13,"SetRules"],[13,"RemoveRule"],[3,"ConnectionManager"],[3,"FirewallConfiguration"],[3,"SwarmTask"],[4,"P2POutboundFailure"],[4,"P2PInboundFailure"],[4,"P2PMdnsEvent"],[4,"P2PIdentifyEvent"],[4,"P2PEvent"],[4,"P2PReqResEvent"],[4,"BehaviourError"],[4,"P2PProtocolsHandlerUpgrErr"],[3,"P2PNetworkBehaviour"],[3,"P2PIdentifyInfo"],[3,"BehaviourConfig"],[13,"Error"],[13,"Received"],[13,"Sent"],[13,"Pushed"],[13,"InboundFailure"],[13,"OutboundFailure"],[13,"Req"],[13,"Res"],[13,"ResSent"],[3,"MessageProtocol"],[3,"MessageCodec"],[4,"SwarmEvent"],[4,"Protocol"],[4,"ConnectedPoint"],[4,"Keypair"],[3,"Multiaddr"],[3,"PeerId"],[3,"ConnectionLimit"],[13,"Dialer"],[13,"Listener"],[13,"UnreachableAddr"],[13,"UnknownPeerUnreachableAddr"],[13,"ListenerClosed"],[13,"ConnectionClosed"],[13,"ConnectionEstablished"],[13,"BannedPeer"],[13,"IncomingConnectionError"],[13,"ListenerError"],[13,"IncomingConnection"]]},\
"engine":{"doc":"A system for securely managing secrets.","t":[7,13,13,13,13,13,4,13,13,13,13,13,13,6,13,13,13,13,11,11,14,11,11,11,11,11,11,11,0,11,0,11,11,11,11,0,6,17,6,17,5,0,5,0,0,0,5,5,5,5,3,3,11,11,11,11,11,11,0,12,0,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,3,11,11,11,5,5,11,11,12,11,11,12,11,11,11,11,11,11,12,11,11,11,17,3,11,11,11,5,5,12,12,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,5,5,5,5,5,17,6,17,17,6,17,5,5,5,5,5,5,3,12,12,0,12,0,12,3,11,11,0,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,12,11,11,11,11,11,12,12,12,12,12,12,8,8,8,3,3,8,8,3,3,3,3,3,12,0,10,10,10,10,10,0,10,12,10,0,0,3,8,8,18,10,11,11,11,11,11,11,11,10,11,11,11,11,8,8,8,3,12,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,10,11,11,11,11,11,11,11,8,8,0,0,11,11,12,12,12,13,3,13,3,3,3,17,3,4,8,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11],"n":["ALLOC","Base64Error","Base64ErrorDetailed","ChainError","CryptoError","DatabaseError","Error","InterfaceError","IoError","Lz4Error","OtherError","ProtocolError","ProviderError","Result","SnapshotError","TryIntoError","ValueError","VersionError","borrow","borrow_mut","cache","fmt","fmt","from","from","from","from","into","snapshot","source","store","to_string","try_from","try_into","type_id","vault","Key","MAGIC","Nonce","VERSION","compress","compression","decompress","files","kdf","logic","read","read_from","write","write_to","Block","Duplicate","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decoder","duplicates","encoder","fmt","fmt","from","from","into","into","literal_length","offset","padding","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Lz4Decoder","borrow","borrow_mut","complete","decompress","decompress_into","duplicate","from","input","into","output","output","read_duplicate","read_int","read_literal","read_u16","take","take_internal","token","try_from","try_into","type_id","DICT_SIZE","Lz4Encoder","borrow","borrow_mut","complete","compress","compress_into","cursor","dict","find_duplicate","from","get","get_at_cursor","get_cursor_hash","input","insert_cursor","into","output","pop_block","remaining","step_forward","try_from","try_into","type_id","write_int","get_path","home_dir","snapshot_dir","verify_or_create","naive_kdf","KEY_SIZE","Key","MAGIC","NONCE_SIZE","Nonce","VERSION","check_header","check_min_file_len","read","read_from","write","write_to","Cache","created_at","last_scan_at","macros","scan_freq","storage","table","Value","borrow","borrow_mut","cache","clone","clone_into","deserialize","expiration","fmt","from","has_expired","into","new","serialize","to_owned","try_from","try_into","type_id","val","Cache","borrow","borrow_mut","clear","clone","clone_into","contains_key","create_with_scanner","created_at","default","deserialize","fmt","from","get","get_last_scanned_at","get_or_insert","get_scan_freq","insert","into","last_scan_at","new","remove","scan_freq","serialize","table","to_owned","try_from","try_into","try_remove_expired_items","type_id","0","0","0","0","0","0","Base64Decodable","Base64Encodable","BoxProvider","ChainId","ClientId","Decrypt","Encrypt","Id","Key","RecordHint","RecordId","VaultId","_box_provider","base64","base64","box_key_len","box_open","box_overhead","box_seal","crypto_box","from_base64","key","random_buf","types","view","Base64","Base64Decodable","Base64Encodable","PADDING","base64","borrow","borrow_mut","decode_byte","decode_data","encode_byte","encode_data","from","from_base64","into","try_from","try_into","type_id","BoxProvider","Decrypt","Encrypt","Key","_box_provider","borrow","borrow_mut","box_key_len","box_open","box_overhead","box_seal","bytes","clone","clone_into","cmp","decrypt","decrypt","deserialize","encrypt","encrypt","eq","fmt","from","hash","into","key","load","partial_cmp","random","random_buf","random_vec","random_vec","serialize","to_owned","try_from","try_into","type_id","AsView","AsViewMut","transactions","utils","view","view_mut","0","0","0","Data","DataTransaction","Revocation","RevocationTransaction","SealedBlob","SealedTransaction","TRANSACTION_MAX_BYTES","Transaction","TransactionType","TypedTransaction","UntypedTransaction","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","blob","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","deserialize","deserialize","deserialize","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","hash","hash","id","id","id","into","into","into","into","into","into","into","len","ne","new","new","partial_cmp","record_hint","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typed","untyped","val","0","0","0","0","0","0","0","0","0","BlobId","ChainId","ClientId","Id","RecordHint","RecordId","TransactionId","Val","VaultId","add","add_assign","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","load","load","load","load","load","load","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","random","random","random","random","random","random","random","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u64","DbView","Record","Vault","add_or_update_record","blob","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_id","clear","clone","clone","clone","clone_into","clone_into","clone_into","contains_record","contains_record","data","default","deserialize","deserialize","deserialize","entries","exec_proc","from","from","from","garbage_collect","garbage_collect_vault","get_blob","get_guard","get_guard","get_hint_and_id","id","init_vault","init_vault","into","into","into","key","list_hints_and_ids","list_hints_and_ids","new","new","revoke","revoke","revoke","revoke_record","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","vaults","write"],"q":["engine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","engine::snapshot","","","","","","","","","","","","","","engine::snapshot::compression","","","","","","","","","","","","","","","","","","","","","","","","","","","engine::snapshot::compression::decoder","","","","","","","","","","","","","","","","","","","","","","engine::snapshot::compression::encoder","","","","","","","","","","","","","","","","","","","","","","","","","engine::snapshot::files","","","","engine::snapshot::kdf","engine::snapshot::logic","","","","","","","","","","","","engine::store","","","","","","","engine::store::storage","","","","","","","","","","","","","","","","","","","engine::store::storage::cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","engine::vault","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","engine::vault::base64","","","","","","","","","","","","","","","","","engine::vault::crypto_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","engine::vault::types","","","","","","engine::vault::types::transactions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","engine::vault::types::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","engine::vault::view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A Zeroing Allocator which wraps the standard memory …","","","","","","","","","","","","","","","","","","","","A macro for defining functions whose return values will …","","","","","","","","This crate defines and implements the encrypted offline …","","This crate contains a key/value cache for the stronghold …","","","","","Vault is an in-memory database specification which is …","","Magic bytes (bytes 0-4 in a snapshot file)","","Current version bytes (bytes 5-6 in a snapshot file)","Compress data using an LZ4 Algorithm.","","Decompress data using an LZ4 Algorithm.","","","","Read ciphertext from the input, decrypts it using the …","<code>read</code> and decrypt the ciphertext from the specified path","Encrypt the opaque plaintext bytestring using the …","Atomically encrypt and <code>write</code> the specified plaintext to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decompress data using an LZ4 Algorithm.","","","","","","","","","","","","","","","","","","","","","","","Compress data using an LZ4 Algorithm.","","","","","","","","","","","","","","","","","","","","Construct the path to a snapshot file with the specifed …","Get the preferred Stronghold home directory","Get the preferred snapshot directory","","a wrapper around the <code>HMAC_SHA256</code> function used to derive …","","","Magic bytes (bytes 0-4 in a snapshot file)","","","Current version bytes (bytes 5-6 in a snapshot file)","","","Read ciphertext from the input, decrypts it using the …","<code>read</code> and decrypt the ciphertext from the specified path","Encrypt the opaque plaintext bytestring using the …","Atomically encrypt and <code>write</code> the specified plaintext to …","The cache struct used to store the data in an ordered …","","","","","","","The general value used for the Store.","","","","","","","","","","","","","","","","","","","The cache struct used to store the data in an ordered …","","","Clear the stored cache and reset.","","","","creates an empty <code>Cache</code> with a periodic scanner which …","","","","","","Gets the value associated with the specified key.","","Gets the value associated with the specified key.  If the …","Get the cache’s scan frequency.","Insert a key-value pair into the cache. If key was not …","","","creates a new empty <code>Cache</code>","Removes a key from the cache.  Returns the value from the …","","","","","","","attempts to remove expired items based on the current …","","","","","","","","a trait to make types base64 decodable","a trait to make types base64 encodable","A provider interface between the vault and a crypto box. …","A chain identifier.  Used to identify a set of …","Client Id type used to identify a client.","Trait for decryptable data.  Allows the data to be …","trait for encryptable data. Allows the data to be …","A generic Id type used as the underlying type for the …","A key to the crypto box.  Key is stored on the heap which …","a record hint.  Used as a hint to what this data is.","A record identifier.  Contains a ChainID which refers to …","Vault Id type used to identify a vault.","","","","function for the key length of the crypto box","opens a crypto box to get data using the <code>key</code> and the <code>ad</code>.","gets the crypto box’s overhead","seals some data into the crypto box using the <code>key</code> and the …","","","the guarded raw bytes that make up the key","fills a buffer <code>buf</code> with secure random bytes.","","","","a trait to make types base64 decodable","a trait to make types base64 encodable","base64 padding character","","","","decode a single byte","decode data from base64 based off of the URI safe …","encode a single byte","encode <code>data</code> using a base64 uri-safe character set.","","","","","","","A provider interface between the vault and a crypto box. …","Trait for decryptable data.  Allows the data to be …","trait for encryptable data. Allows the data to be …","A key to the crypto box.  Key is stored on the heap which …","","","","function for the key length of the crypto box","opens a crypto box to get data using the <code>key</code> and the <code>ad</code>.","gets the crypto box’s overhead","seals some data into the crypto box using the <code>key</code> and the …","get the key’s bytes","","","","decrypts raw data and creates a new type T from the …","decrypts raw data and creates a new type T from the …","","encrypts a raw data and creates a type T from the …","encrypts a raw data and creates a type T from the …","","","","","","the guarded raw bytes that make up the key","attempts to load a key from inputted data","","generate a random key using secure random bytes","fills a buffer <code>buf</code> with secure random bytes.","creates a vector with secure random bytes based off of an …","creates a vector with secure random bytes based off of an …","","","","","","a view over raw data.","a mutable view over raw data.","","","creates a view over <code>self</code>.","creates a mutable view over <code>self</code>.","","","","","a data transaction","","a revocation transaction","a sealed blob","a sealed transaction","","a generic transaction (untyped)","generic transaction type enum","a typed transaction","untyped transaction view","","","","","","","the blob identifier for the data referred to by this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","id identifer","id identifer","id identifer","","","","","","","","Length of the unencrypted blob data","","create a new data transaction.","create a new revocation transaction.","","a record hint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","transaction type","transaction type","transaction type","","","convert transaction type into its associated number value.","","","","","","","","","","A blob identifier","A chain identifier.  Used to identify a set of …","Client Id type used to identify a client.","A generic Id type used as the underlying type for the …","a record hint.  Used as a hint to what this data is.","A record identifier.  Contains a ChainID which refers to …","A transaction identifier","a big endian encoded number","Vault Id type used to identify a vault.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","load record_id from data","Load a <code>ClientId</code> from some data.","Load a <code>VaultId</code> from some data.","","Load an <code>Id</code> from some data.","","","","","","","","","","","create a new random Id for hint","","","","","","","","","","","Create a new random <code>ClientId</code>.","Create a new random <code>VaultId</code>.","","Create a new random <code>Id</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A view over the data inside of the Stronghold database.","A bit of data inside of a Vault.","A enclave of data that is encrypted under one key.","Adds a new entry to the vault if the entry doesn’t …","","","","","","","","Check to see if a record id is in this vault.","","","","","","","","Check to see if vault contains a specific record id.","","","","","","","","","","","","Sorts through all of the vault entries and garbage …","Garbage collect a vault.","Get the blob from this entry.","execute a procedure on the guarded record data.","","Get the id and record hint for this record.","","Initialize a new vault if it doesn’t exist.","","","","","","Lists all of the hints and ids for the given vault.","List the hints and ids of the specified vault.","Create a new Database View.","","Revokes an entry by its chain id.  Does nothing if the …","","","mark a record as revoked.","","","","","","","","","","","","","","","","Update the data in an existing entry.","","Write a new record to the Vault."],"i":[0,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,2,3,3,3,0,2,0,2,3,2,3,2,3,2,3,3,3,2,3,2,3,2,3,0,4,4,4,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,6,0,6,0,7,7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,9,10,11,12,13,0,0,0,0,0,0,0,0,0,0,0,0,14,0,15,16,16,16,16,0,17,14,16,0,0,0,0,0,18,15,18,18,18,18,18,18,18,17,18,18,18,18,0,0,0,0,14,14,14,16,16,16,16,14,14,14,14,19,19,14,20,20,14,14,14,14,14,14,14,14,14,16,16,16,14,14,14,14,14,0,0,0,0,21,22,23,24,25,26,0,26,0,0,0,0,0,0,0,0,23,24,25,23,24,25,27,26,23,28,27,29,24,25,26,23,28,27,29,24,25,26,23,24,25,26,23,24,25,26,23,23,24,25,23,24,25,23,24,25,26,23,26,23,28,27,29,26,23,28,27,29,24,24,24,25,25,25,26,23,28,27,29,26,23,28,27,29,24,25,27,23,27,29,26,27,23,24,25,26,23,24,25,26,26,23,23,28,27,29,24,25,26,23,28,27,29,24,25,30,26,23,28,27,27,29,29,24,25,28,27,29,23,23,26,8,9,10,11,12,13,31,32,33,0,0,0,0,0,0,0,0,0,33,33,8,10,11,12,13,31,32,8,9,10,11,12,13,31,32,33,8,9,10,11,12,13,31,32,33,8,9,10,11,12,13,31,32,33,8,9,10,11,12,13,31,32,33,8,9,10,11,12,13,31,32,33,10,13,8,9,10,11,12,13,31,32,8,10,11,12,13,31,32,8,10,11,12,13,31,32,8,9,10,11,12,13,31,32,33,8,9,9,10,11,12,13,31,32,33,8,8,9,10,11,12,13,31,32,33,33,8,9,10,11,12,13,31,32,33,8,9,10,10,10,11,11,11,12,13,31,32,33,9,10,11,12,13,31,8,9,10,11,12,13,31,32,33,8,8,9,10,11,12,13,31,32,33,9,10,11,12,13,31,32,8,9,10,11,12,13,31,32,8,9,10,11,12,13,31,32,33,9,8,9,9,9,10,10,10,11,11,11,12,12,12,13,13,13,31,31,32,32,33,8,9,10,11,12,13,31,32,33,8,9,10,11,12,13,31,32,33,33,0,0,0,34,35,36,34,35,36,34,35,35,36,36,34,35,36,34,35,36,34,35,36,36,34,35,34,36,36,34,35,34,36,35,36,34,35,35,36,34,36,34,35,34,36,34,36,35,34,35,35,36,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,35,36,36],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["error",3]]],[[["error",4]]],[[["tryfromsliceerror",3]]],[[]],[[]],null,[[],[["option",4],["error",8]]],null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[],[["u8",15],["vec",3]]],null,[[],[["vec",3],["result",6]]],null,null,null,[[["key",6]],[["vec",3],["result",6]]],[[["path",3],["key",6]],[["vec",3],["result",6]]],[[["key",6]],["result",6]],[[["path",3],["key",6]],["result",6]],null,null,[[]],[[]],[[]],[[]],[[],["duplicate",3]],[[]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[],["result",6]],[[],[["vec",3],["result",6]]],[[["vec",3]],["result",6]],[[["usize",15]]],[[]],null,[[]],[[["vec",3]]],null,[[],["result",6]],[[],[["result",6],["usize",15]]],[[],["result",6]],[[],[["result",6],["u16",15]]],[[["usize",15]],["result",6]],[[["usize",15]],["result",6]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[],[["u8",15],["vec",3]]],[[["vec",3]]],null,null,[[],[["duplicate",3],["option",4]]],[[]],[[["usize",15]],["u32",15]],[[],["u32",15]],[[],["usize",15]],null,[[]],[[]],null,[[],["block",3]],[[],["bool",15]],[[["usize",15]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["usize",15]]],[[["option",4],["str",15]],[["pathbuf",3],["result",6]]],[[],[["pathbuf",3],["result",6]]],[[],[["pathbuf",3],["result",6]]],[[["path",3]],["result",6]],[[],["result",6]],null,null,null,null,null,null,[[],["result",6]],[[["file",3]],["result",6]],[[["key",6]],[["vec",3],["result",6]]],[[["path",3],["key",6]],[["vec",3],["result",6]]],[[["key",6]],["result",6]],[[["path",3],["key",6]],["result",6]],null,null,null,null,null,null,null,null,[[]],[[]],null,[[],["value",3]],[[]],[[],["result",4]],null,[[["formatter",3]],["result",6]],[[]],[[["systemtime",3]],["bool",15]],[[]],[[["option",4],["duration",3]]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[],["cache",3]],[[]],[[],["bool",15]],[[["duration",3]]],null,[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[],["option",4]],[[],[["option",4],["systemtime",3]]],[[["option",4],["duration",3]]],[[],[["option",4],["duration",3]]],[[["option",4],["duration",3]],["option",4]],[[]],null,[[]],[[],["option",4]],null,[[],["result",4]],null,[[]],[[],["result",4]],[[],["result",4]],[[["systemtime",3]]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],[[],["usize",15]],[[["key",3]],[["vec",3],["result",6]]],[[],["usize",15]],[[["key",3]],[["vec",3],["result",6]]],null,[[],["result",6]],null,[[],["result",6]],null,null,null,null,null,null,[[],["string",3]],[[]],[[]],[[["u8",15]],[["result",6],["usize",15]]],[[],[["vec",3],["result",6]]],[[["usize",15]],["u8",15]],[[],["string",3]],[[]],[[],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[],["usize",15]],[[["key",3]],[["vec",3],["result",6]]],[[],["usize",15]],[[["key",3]],[["vec",3],["result",6]]],[[],[["u8",15],["vec",3]]],[[]],[[]],[[],["ordering",4]],[[["key",3],["asref",8]],["result",6]],[[["key",3],["asref",8]],["result",6]],[[],["result",4]],[[["key",3],["asref",8]],["result",6]],[[["key",3],["asref",8]],["result",6]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[["u8",15],["vec",3]],["result",6]],[[],[["option",4],["ordering",4]]],[[],["result",6]],[[],["result",6]],[[["usize",15]],[["vec",3],["result",6]]],[[["usize",15]],[["vec",3],["result",6]]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["transactiontype",4]],[[],["transaction",3]],[[],["sealedtransaction",3]],[[],["sealedblob",3]],[[]],[[]],[[]],[[]],[[["transactiontype",4]],["ordering",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["transactiontype",4]],["bool",15]],[[["transaction",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["u8",15],["vec",3]]],[[]],[[]],[[]],[[["u8",15],["vec",3]]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["transaction",3]],["bool",15]],[[["chainid",3],["blobid",3],["u64",15],["recordhint",3]],["transaction",3]],[[["chainid",3]],["transaction",3]],[[["transactiontype",4]],[["option",4],["ordering",4]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[["val",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[["u8",15],["vec",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["val",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["val",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["val",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[],["option",4]],[[],["untypedtransaction",3]],[[],["val",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["recordhint",3]],[[],["recordid",3]],[[],["clientid",3]],[[],["vaultid",3]],[[],["chainid",3]],[[],["id",3]],[[],["transactionid",3]],[[],["blobid",3]],[[],["val",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["recordhint",3]],["ordering",4]],[[["recordid",3]],["ordering",4]],[[["clientid",3]],["ordering",4]],[[["vaultid",3]],["ordering",4]],[[["chainid",3]],["ordering",4]],[[["id",3]],["ordering",4]],[[["transactionid",3]],["ordering",4]],[[["blobid",3]],["ordering",4]],[[],["ordering",4]],[[],["clientid",3]],[[],["id",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["recordhint",3]],["bool",15]],[[["recordid",3]],["bool",15]],[[["clientid",3]],["bool",15]],[[["vaultid",3]],["bool",15]],[[["chainid",3]],["bool",15]],[[["id",3]],["bool",15]],[[["transactionid",3]],["bool",15]],[[["blobid",3]],["bool",15]],[[["val",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["u8",15],["vec",3]]],[[],["string",3]],[[]],[[],["string",3]],[[]],[[],[["u8",15],["vec",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["recordhint",3]],["bool",15]],[[["recordid",3]],["bool",15]],[[["clientid",3]],["bool",15]],[[["vaultid",3]],["bool",15]],[[["chainid",3]],["bool",15]],[[["id",3]],["bool",15]],[[["transactionid",3]],["bool",15]],[[["blobid",3]],["bool",15]],[[["val",3]],["bool",15]],[[],["result",6]],[[["recordhint",3]],[["option",4],["ordering",4]]],[[["recordid",3]],[["option",4],["ordering",4]]],[[["clientid",3]],[["option",4],["ordering",4]]],[[["vaultid",3]],[["option",4],["ordering",4]]],[[["chainid",3]],[["option",4],["ordering",4]]],[[["id",3]],[["option",4],["ordering",4]]],[[["transactionid",3]],[["option",4],["ordering",4]]],[[["blobid",3]],[["option",4],["ordering",4]]],[[],[["ordering",4],["option",4]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[["u8",15],["vec",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[["u8",15],["vec",3]],["result",4]],[[],["result",4]],[[["u8",15],["vec",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u8",15],["vec",3]],["result",4]],[[],["result",4]],[[["u8",15],["vec",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u64",15]],null,null,null,[[["key",3],["chainid",3],["recordhint",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["recordid",3]],["bool",15]],[[],["result",6]],[[],["dbview",3]],[[],["vault",3]],[[],["record",3]],[[]],[[]],[[]],[[["key",3],["vaultid",3],["recordid",3]],["bool",15]],[[["key",3],["recordid",3]],["bool",15]],null,[[],["dbview",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["key",3],["vaultid",3],["recordid",3],["recordhint",3]],["result",6]],[[]],[[]],[[]],[[]],[[["key",3],["vaultid",3]],["result",6]],[[["key",3],["chainid",3]],[["result",6],["guardedvec",3]]],[[["key",3],["vaultid",3],["recordid",3]],["result",6]],[[["key",3],["chainid",3]],[["result",6],["guardedvec",3]]],[[["key",3]],["option",4]],null,[[["key",3],["vaultid",3]],["result",6]],[[["key",3]],[["vault",3],["result",6]]],[[]],[[]],[[]],null,[[["key",3],["vaultid",3]],["vec",3]],[[["key",3]],["vec",3]],[[],["dbview",3]],[[["chainid",3],["blobid",3],["key",3],["recordhint",3]],[["result",6],["record",3]]],[[["key",3],["chainid",3]],["result",6]],[[["key",3],["chainid",3]],["result",6]],null,[[["key",3],["vaultid",3],["recordid",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["key",3],["chainid",3]],["result",6]],null,[[["key",3],["vaultid",3],["recordid",3],["recordhint",3]],["result",6]]],"p":[[4,"Error"],[3,"Block"],[3,"Duplicate"],[3,"Lz4Decoder"],[3,"Lz4Encoder"],[3,"Cache"],[3,"Value"],[3,"RecordHint"],[3,"RecordId"],[3,"ClientId"],[3,"VaultId"],[3,"ChainId"],[3,"Id"],[3,"Key"],[8,"Base64Encodable"],[8,"BoxProvider"],[8,"Base64Decodable"],[3,"Base64"],[8,"Decrypt"],[8,"Encrypt"],[8,"AsView"],[8,"AsViewMut"],[3,"Transaction"],[3,"SealedTransaction"],[3,"SealedBlob"],[4,"TransactionType"],[3,"DataTransaction"],[3,"UntypedTransaction"],[3,"RevocationTransaction"],[8,"TypedTransaction"],[3,"TransactionId"],[3,"BlobId"],[3,"Val"],[3,"Vault"],[3,"Record"],[3,"DbView"]]},\
"iota_stronghold":{"doc":"","t":[12,12,3,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,6,13,4,13,4,4,3,3,3,6,4,13,13,4,13,13,13,6,3,4,4,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,0,0,11,11,11,11,14,11,11,11,12,5,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,5,11,11,0,11,11,11,11,12,12,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,4,13,13,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,3,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,0,18,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,3,4,13,13,13,6,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,0,5,0,8,10,13,13,13,13,4,18,13,4,6,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["0","0","ActorSystem","BIP39Generate","BIP39Generate","BIP39MnemonicSentence","BIP39MnemonicSentence","BIP39Recover","BIP39Recover","Counter","Ed25519PublicKey","Ed25519PublicKey","Ed25519Sign","Ed25519Sign","EngineError","Error","Error","Error","Generic","IDError","IsReadable","Key","Key","Location","Ok","ProcResult","Procedure","Provider","RecordHint","RecordId","Result","ResultMessage","SLIP10Derive","SLIP10Derive","SLIP10DeriveInput","SLIP10Generate","SLIP10Generate","Seed","StatusMessage","Stronghold","StrongholdFlags","VaultFlags","actor_of","actor_of_args","actor_of_props","actors","as_ref","base64","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_schedule","clients","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","config","dead_letters","debug","deserialize","deserialize","encode_hex","encode_hex_upper","eq","eq","exec","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","home_dir","host","id","interface","internals","into","into","into","into","line_error","load","load_from_path","log","log","naive_kdf","name","ne","ne","new","new","partial_cmp","partial_cmp","print_tree","proto","provider","publish_event","random","run","schedule","schedule_at_time","schedule_once","select","serialize","serialize","shutdown","snapshot_dir","source","start_date","state","stop","sys_actor_of","sys_actor_of_args","sys_actor_of_props","sys_actors","sys_channels","sys_events","sys_root","system","target","temp_root","timer","tmp_actor_of","tmp_actor_of_args","tmp_actor_of_props","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uptime","user_root","utils","vzip","vzip","vzip","vzip","with_config","with_name","counter","record_path","vault_path","vault_path","chain","hint","hint","hint","hint","input","mnemonic","msg","output","output","output","output","passphrase","passphrase","private_key","private_key","seed","size_bytes","client","internal","snapshot","BIP39Generate","BIP39Generate","BIP39Generate","BIP39MnemonicSentence","BIP39MnemonicSentence","BIP39MnemonicSentence","BIP39Recover","BIP39Recover","BIP39Recover","CheckRecord","CheckVault","ClearCache","ControlRequest","CreateNewVault","DeleteFromStore","Ed25519PublicKey","Ed25519PublicKey","Ed25519PublicKey","Ed25519Sign","Ed25519Sign","Ed25519Sign","Error","Error","FillSnapshot","GarbageCollect","Key","ListIds","ProcResult","Procedure","ReadFromStore","ReadSnapshot","ReturnClearCache","ReturnControlRequest","ReturnCreateVault","ReturnDeleteStore","ReturnExistsRecord","ReturnExistsVault","ReturnFillSnap","ReturnGarbage","ReturnList","ReturnReadSnap","ReturnReadStore","ReturnReadVault","ReturnRevoke","ReturnWriteSnap","ReturnWriteStore","ReturnWriteVault","RevokeData","SHRequest","SHResults","SLIP10Derive","SLIP10Derive","SLIP10Derive","SLIP10DeriveInput","SLIP10Generate","SLIP10Generate","SLIP10Generate","Seed","SerdeProcResult","WriteSnapshot","WriteToStore","WriteToVault","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","chain","hint","hint","hint","hint","input","mnemonic","msg","output","output","output","output","passphrase","passphrase","private_key","private_key","seed","size_bytes","cid","filename","filename","former_cid","hint","key","key","kill","lifetime","location","location","location","location","location","path","path","payload","payload","BIP39Generate","BIP39Recover","CheckRecord","ClearCache","CreateVault","Ed25519PublicKey","Ed25519Sign","FillSnapshot","GarbageCollect","InternalActor","InternalMsg","InternalResults","KillInternal","ListIds","ReadSnapshot","RebuildCache","ReloadData","ReturnCheckRecord","ReturnClearCache","ReturnControlRequest","ReturnCreateVault","ReturnGarbage","ReturnList","ReturnReadVault","ReturnRevoke","ReturnWriteSnap","ReturnWriteVault","RevokeData","SLIP10DeriveFromKey","SLIP10DeriveFromSeed","SLIP10Generate","WriteToVault","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client_id","clone","clone","clone_into","clone_into","create_args","db","fmt","fmt","from","from","from","into","into","into","into","keystore","receive","recv","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","chain","chain","child_record_id","child_vault_id","client","data","hint","hint","hint","hint","hint","id","key_record_id","key_vault_id","mnemonic","msg","parent_record_id","parent_vault_id","passphrase","passphrase","record_id","record_id","record_id","record_id","record_id","seed_record_id","seed_vault_id","size_bytes","status","vault_id","vault_id","vault_id","vault_id","vault_id","id","status","store","vaults","FillSnapshot","ReadFromSnapshot","SMsg","WriteSnapshot","borrow","borrow_mut","clone","clone_into","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","data","fid","filename","filename","id","id","key","key","path","path","Stronghold","borrow","borrow_mut","check_config_flags","clients","delete_data","delete_from_store","from","garbage_collect","init_stronghold_system","into","kill_stronghold","list_hints_and_ids","read_from_store","read_snapshot","record_exists","runtime_exec","spawn_stronghold_actor","switch_actor_target","system","target","try_from","try_into","type_id","vault_exists","vzip","write_all_to_snapshot","write_to_store","write_to_vault","provider","NONCE_LEN","Provider","TAG_LEN","borrow","borrow_mut","box_key_len","box_open","box_overhead","box_seal","clone","clone_into","cmp","default","deserialize","eq","fmt","from","into","partial_cmp","random_buf","serialize","to_owned","try_from","try_into","type_id","vzip","client","key_store","snapshot","Client","ClientMsg","InternalResults","SHRequest","SHResults","Store","add_new_vault","borrow","borrow","borrow_mut","borrow_mut","clear_cache","client_id","clone","clone","clone_into","clone_into","create_args","derive_record_id","derive_vault_id","deserialize","fmt","fmt","from","from","get_client_str","get_index_from_record_id","into","into","new","read_from_store","rebuild_cache","receive","receive","receive","receive","recv","resolve_location","serialize","set_client_id","store","store_delete_item","store_key_exists","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vault_exist","vaults","vzip","vzip","write_to_store","KeyStore","borrow","borrow_mut","clear_keys","create_key","from","get_data","get_key","insert_key","into","new","rebuild_keystore","store","try_from","try_into","type_id","vault_exists","vzip","0","Snapshot","SnapshotState","add_data","borrow","borrow","borrow_mut","borrow_mut","create","default","deserialize","deserialize","from","from","get_state","has_data","into","into","new","new","read_from_snapshot","receive","recv","serialize","serialize","state","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_to_snapshot","ids","index_of_unchecked","types","LoadFromPath","load_from_path","Counter","Error","Generic","IsReadable","Location","OK","Ok","ResultMessage","StatusMessage","StrongholdFlags","VaultFlags","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","const_counter","const_generic","counter","deserialize","deserialize","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","generic","increment_counter","into","into","into","into","is_err","is_ok","ne","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vault_path","vzip","vzip","vzip","vzip","counter","record_path","vault_path","vault_path"],"q":["iota_strongholdiota_stronghold::Location","","","","iota_stronghold::Procedure","","","","","","","","","","","","","","","","","","iota_stronghold::actors","","","iota_stronghold::actors::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","iota_stronghold::actors::client::Procedure","","","","","","","","","","","","","","","","","","iota_stronghold::actors::client::SHRequest","","","","","","","","","","","","","","","","","","iota_stronghold::actors::internal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","iota_stronghold::actors::internal::InternalMsg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","iota_stronghold::actors::internal::InternalResults","","","","iota_stronghold::actors::snapshot","","","","","","","","","","","","","","","","iota_stronghold::actors::snapshot::SMsg","","","","","","","","","","iota_stronghold::interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","iota_stronghold::internals","iota_stronghold::internals::provider","","","","","","","","","","","","","","","","","","","","","","","","","","iota_stronghold::state","","","iota_stronghold::state::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","iota_stronghold::state::key_store","","","","","","","","","","","","","","","","","","iota_stronghold::state::snapshot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","iota_stronghold::utils","","","iota_stronghold::utils::ids","","iota_stronghold::utils::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","iota_stronghold::utils::types::Location","","",""],"d":["","","The actor runtime and common services coordinator","Generate a BIP39 seed and its corresponding mnemonic …","<code>BIP39Generate</code> return value.","Read a BIP39 seed and its corresponding mnemonic sentence …","<code>BIP39MnemonicSentence</code> return value. Returns the mnemonic …","Use a BIP39 mnemonic sentence (optionally protected by a …","<code>BIP39Recover</code> return value.","","Derive an Ed25519 public key from the corresponding …","Return value for <code>Ed25519PublicKey</code>. Returns an Ed25519 …","Use the specified Ed25519 compatible key to sign the …","Return value for <code>Ed25519Sign</code>. Returns an Ed25519 …","","","Generic Error return message.","","","","","","","A <code>Location</code> type used to specify where in the <code>Stronghold</code> a …","","A Procedure return result type.  Contains the different …","Procedure type used to call to the runtime via …","An implementation of the Vault’s `BoxProvider type.  …","a record hint.  Used as a hint to what this data is.","A record identifier.  Contains a ChainID which refers to …","","Return value used for Actor Messages.  Can specify an …","Derive a SLIP10 child key from a seed or a parent key, …","Returns the public key derived from the <code>SLIP10Derive</code> call.","<code>SLIP10DeriveInput</code> type used to specify a Seed location or …","Generate a raw SLIP10 seed of the specified size (in …","Return from generating a <code>SLIP10</code> seed.","Note that BIP39 seeds are allowed to be used as SLIP10 …","A type alias for the empty <code>ResultMessage<()></code> type.","The main type for the Stronghold System.  Used as the …","Policy options for modifying an entire Stronghold.  Must …","Policy options for for a specific vault.  Must be …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>Config</code> used by the system","Returns a reference to the dead letters channel","","","","","","","","","","","","","","","","","","","","","","","Get the preferred Stronghold home directory","Returns the hostname used when the system started","Returns the UUID assigned to the system","","","","","","","TODO: Should be replaced with proper errors.","load record_id from data","","","","a wrapper around the <code>HMAC_SHA256</code> function used to derive …","Returns the name of the system","","","Create a new <code>ActorSystem</code> instance","create a new random Id for hint","","","","","","","","","","","","","","","Shutdown the actor system","Get the preferred snapshot directory","","Returns the system start date","","","","","Create an actor under the system root","","","Returns a reference to the system events channel","Returns the system root actor reference","","","Reutrns the temp root actor reference","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of seconds since the system started","Returns the user root actor reference","","","","","","Create a new <code>ActorSystem</code> instance bypassing default …","Create a new <code>ActorSystem</code> instance with provided name","","","","","","","","","","","","","","","","","","","","","","","","","","Generate a BIP39 seed and its corresponding mnemonic …","<code>BIP39Generate</code> return value.","","Read a BIP39 seed and its corresponding mnemonic sentence …","<code>BIP39MnemonicSentence</code> return value. Returns the mnemonic …","","Use a BIP39 mnemonic sentence (optionally protected by a …","<code>BIP39Recover</code> return value.","","","","","","","","Derive an Ed25519 public key from the corresponding …","Return value for <code>Ed25519PublicKey</code>. Returns an Ed25519 …","","Use the specified Ed25519 compatible key to sign the …","Return value for <code>Ed25519Sign</code>. Returns an Ed25519 …","","Generic Error return message.","","","","","","A Procedure return result type.  Contains the different …","Procedure type used to call to the runtime via …","","","","","","","","","","","","","","","","","","","","","Messages that come from stronghold","Derive a SLIP10 child key from a seed or a parent key, …","Returns the public key derived from the <code>SLIP10Derive</code> call.","","<code>SLIP10DeriveInput</code> type used to specify a Seed location or …","Generate a raw SLIP10 seed of the specified size (in …","Return from generating a <code>SLIP10</code> seed.","","Note that BIP39 seeds are allowed to be used as SLIP10 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Messages used for the KeyStore Actor.","Messages used internally by the client.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Messages used for the Snapshot Actor.","","","","","","","","","","","","","","","","","","","","","","","","The main type for the Stronghold System.  Used as the …","","","Unimplemented until Policies are implemented.","","Revokes the data from the specified location of type …","A method to delete data from an insecure cache. This …","","Garbage collects any revokes in a Vault based on the …","Initializes a new instance of the system.  Sets up the …","","Used to kill a stronghold actor or clear the cache of the …","Returns a list of the available <code>RecordId</code> and <code>RecordHint</code> …","A method that reads from an insecure cache.  This method, …","Reads data from a given snapshot file.  Can only read the …","Checks whether a record exists in the client based off of …","Executes a runtime command given a <code>Procedure</code>.  Returns a …","Spawns a new set of actors for the Stronghold system. …","Switches the actor target to another actor in the system …","","","","","","checks whether a vault exists in the client.","","Writes the entire state of the <code>Stronghold</code> into a …","Writes data into an insecure cache.  This method, accepts …","Writes data into the Stronghold. Uses the current target …","","","An implementation of the Vault’s `BoxProvider type.  …","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>Client</code> Cache Actor which routes external messages to …","","","","","","","","","","","Get the head of a vault. Empty the Client Cache.","","","","","","","","","","","","","","","","","","Creates a new Client given a <code>ClientID</code> and …","Attempts to read the data from the store.  Returns …","","","","","","","","","","","Deletes an item from the store by the given key.","Checks to see if the key exists in the store.","","","","","","","","","","","","","Write unencrypted data to the store.  Returns <code>None</code> if the …","","","","","Returns an existing key for the <code>id</code> or creates one.","","","Gets the key from the <code>KeyStore</code> and removes it.  Returns …","Inserts a key into the <code>KeyStore</code> by <code>VaultId</code>.  If the …","","Creates a new <code>KeyStore</code>.","Rebuilds the <code>KeyStore</code> while throwing out any existing …","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Snapshot</code> from a buffer of <code>Vec<u8></code> state.","","Reads state from the specified named snapshot or the …","","","","","","","","","","","","","","Writes state to the specified named snapshot or the …","","","","","Load from some data and a path.","","","","","A <code>Location</code> type used to specify where in the <code>Stronghold</code> a …","","","Return value used for Actor Messages.  Can specify an …","A type alias for the empty <code>ResultMessage<()></code> type.","Policy options for modifying an entire Stronghold.  Must …","Policy options for for a specific vault.  Must be …","","","","","","","","","","","","","","","","","","used to generate a constant counter location.","Used to generate a constant generic location.","Creates a counter location from a type that implements …","","","","","","","","","","","","","Creates a generic location from types that implement …","Helper method used to increment counter locations.","","","","","Returns true, if the [<code>ResultMessage</code>] contains an <code>Error</code>","Returns true, if the [<code>ResultMessage</code>] contains an <code>Ok</code> value","","","","","","","","","","","","","","","","","","","","Gets the vault_path from the Location.","","","","","","","",""],"i":[1,2,0,3,4,3,4,3,4,5,3,4,3,4,6,0,4,7,5,6,8,0,9,0,7,0,0,0,0,0,0,0,3,4,0,3,4,9,0,0,0,0,10,10,10,0,1,1,6,10,1,2,6,10,1,2,10,11,10,1,2,10,1,2,1,2,10,10,10,1,2,1,1,1,2,10,6,6,10,1,2,2,6,6,10,1,1,2,1,2,0,10,10,0,0,6,10,1,2,0,2,2,10,10,0,10,1,2,10,1,1,2,10,10,10,10,2,10,10,10,10,10,1,2,10,0,6,10,0,10,10,10,10,10,10,10,10,11,11,10,10,10,10,10,10,1,2,6,2,6,10,1,2,2,2,6,10,1,2,6,10,1,2,10,10,0,6,10,1,2,10,10,12,13,13,12,14,15,14,16,17,14,16,18,15,14,16,17,16,17,19,18,20,15,0,0,0,3,4,21,3,4,21,3,4,21,22,22,22,22,22,22,3,4,21,3,4,21,4,21,22,22,9,22,0,0,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,22,0,0,3,4,21,0,3,4,21,9,0,22,22,22,9,3,4,21,22,23,9,3,4,21,22,23,9,3,4,21,22,23,9,3,4,21,22,23,9,3,4,21,22,23,9,3,4,22,23,9,3,4,21,21,22,23,9,3,4,21,22,22,23,23,9,3,4,21,22,23,9,3,4,21,22,23,9,3,4,4,21,22,23,9,3,4,21,22,23,9,3,4,21,22,23,9,3,4,21,22,23,14,15,14,16,17,14,16,18,15,14,16,17,16,17,19,18,20,15,24,24,25,24,26,24,25,27,28,29,28,30,26,31,24,25,28,26,32,32,32,32,32,32,32,32,32,0,0,0,32,32,32,33,32,33,33,33,33,33,33,33,33,33,33,32,32,32,32,32,34,32,33,34,32,33,34,32,33,32,33,34,34,32,33,34,32,33,34,32,33,33,34,34,34,32,33,34,32,33,34,32,33,34,32,33,34,32,33,35,36,36,36,37,38,39,35,36,40,41,38,35,35,41,42,36,36,40,41,39,40,41,43,42,35,35,39,38,39,40,41,43,42,44,44,44,44,45,45,0,45,45,45,45,45,45,45,45,45,45,45,45,45,46,47,48,47,46,47,48,47,48,47,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,49,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,50,50,50,0,51,51,50,51,50,51,51,51,50,51,50,51,51,51,51,51,50,51,50,51,51,51,50,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,50,51,50,51,50,51,50,51,51,51,50,51,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,53,0,0,53,54,53,54,53,54,53,53,53,54,53,54,54,54,53,54,53,54,54,54,53,53,54,54,53,54,53,54,53,54,53,54,0,0,0,0,55,5,7,5,8,0,7,7,0,0,0,0,5,7,5,8,56,7,5,8,56,7,5,8,56,7,5,8,56,5,5,5,7,5,7,7,5,8,56,7,7,5,8,56,5,5,7,5,8,56,7,7,7,7,5,7,5,8,56,7,5,8,56,7,5,8,56,7,5,8,56,5,7,5,8,56,12,13,13,12],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["createerror",4],["result",4],["actorref",3]]],[[["str",15]],[["createerror",4],["result",4],["actorref",3]]],[[["mutex",3],["str",15],["arc",3]],[["createerror",4],["result",4],["actorref",3]]],null,[[]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["uuid",3]]],null,[[],["actorsystem",3]],[[],["recordhint",3]],[[],["recordid",3]],[[]],[[]],[[]],[[["recordhint",3]],["ordering",4]],[[["recordid",3]],["ordering",4]],[[],["config",3]],[[],["actorref",3]],null,[[],[["result",4],["recordhint",3]]],[[],[["recordid",3],["result",4]]],[[]],[[]],[[["recordhint",3]],["bool",15]],[[["recordid",3]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["error",4]]],[[]],[[]],[[]],[[],["recordhint",3]],[[]],[[]],[[]],[[],[["pathbuf",3],["error",4],["result",4]]],[[],[["str",15],["arc",3]]],[[],["uuid",3]],null,null,[[]],[[]],[[]],[[]],null,[[],[["recordid",3],["error",4],["result",4]]],[[],["result",6]],[[],["loggingsystem",3]],null,[[],[["error",4],["result",4]]],[[],["string",3]],[[["recordhint",3]],["bool",15]],[[["recordid",3]],["bool",15]],[[],[["result",4],["actorsystem",3],["systemerror",4]]],[[],[["error",4],["recordhint",3],["result",4]]],[[["recordhint",3]],[["option",4],["ordering",4]]],[[["recordid",3]],[["option",4],["ordering",4]]],[[]],null,null,[[["systemevent",4]]],[[],[["recordid",3],["error",4],["result",4]]],[[],[["remotehandle",3],["result",4],["spawnerror",3]]],[[["duration",3],["basicactorref",3],["option",4],["actorref",3]],["uuid",3]],[[["datetime",3],["utc",3],["basicactorref",3],["option",4],["actorref",3]],["uuid",3]],[[["duration",3],["basicactorref",3],["option",4],["actorref",3]],["uuid",3]],[[["str",15]],[["result",4],["actorselection",3],["invalidpath",3]]],[[],["result",4]],[[],["result",4]],[[],["receiver",3]],[[],[["pathbuf",3],["error",4],["result",4]]],[[],[["option",4],["error",8]]],[[],["datetime",3]],null,[[]],[[["str",15]],[["createerror",4],["result",4],["actorref",3]]],[[["str",15]],[["createerror",4],["result",4],["actorref",3]]],[[["mutex",3],["str",15],["arc",3]],[["createerror",4],["result",4],["actorref",3]]],null,null,[[],["actorref",3]],[[],["basicactorref",3]],null,null,[[],["basicactorref",3]],null,[[],[["createerror",4],["result",4],["actorref",3]]],[[],[["createerror",4],["result",4],["actorref",3]]],[[["mutex",3],["arc",3]],[["createerror",4],["result",4],["actorref",3]]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4],["recordid",3]]],[[["vec",3],["u8",15],["global",3]],[["recordid",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u64",15]],[[],["basicactorref",3]],null,[[]],[[]],[[]],[[]],[[["str",15],["config",3]],[["result",4],["actorsystem",3],["systemerror",4]]],[[["str",15]],[["result",4],["actorsystem",3],["systemerror",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["slip10deriveinput",4]],[[],["procedure",4]],[[],["procresult",4]],[[],["serdeprocresult",4]],[[],["shrequest",4]],[[],["shresults",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["procresult",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["clientmsg",4]],[[]],[[],["clientmsg",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["serdeprocresult",4]],[["tryfromsliceerror",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["internalmsg",4]],[[],["internalresults",4]],[[]],[[]],[[["clientid",3]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["clientmsg",4]],[[]],null,[[["sender",6],["context",3]]],[[["sender",6],["context",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["smsg",4]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],null,[[["location",4],["bool",15]]],[[["location",4]]],[[]],[[["u8",15],["vec",3]]],[[["vec",3],["strongholdflags",4],["actorsystem",3],["u8",15],["vec",3]]],[[]],[[["bool",15],["u8",15],["vec",3]]],[[["into",8],["vec",3]]],[[["location",4]]],[[["option",4],["pathbuf",3],["option",4],["option",4],["string",3],["u8",15],["vec",3]]],[[["location",4]]],[[["procedure",4]]],[[["vec",3],["strongholdflags",4],["u8",15],["vec",3]]],[[["u8",15],["vec",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["location",4]]],[[]],[[["option",4],["pathbuf",3],["string",3],["option",4]]],[[["location",4],["duration",3],["option",4],["u8",15],["vec",3]]],[[["vec",3],["location",4],["vaultflags",4],["recordhint",3],["u8",15],["vec",3]]],null,null,null,null,[[]],[[]],[[],["usize",15]],[[["key",3]],[["vec",3],["result",6]]],[[],["usize",15]],[[["key",3]],[["vec",3],["result",6]]],[[],["provider",3]],[[]],[[["provider",3]],["ordering",4]],[[],["provider",3]],[[],["result",4]],[[["provider",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["provider",3]],[["option",4],["ordering",4]]],[[],["result",6]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[["vaultid",3]]],[[]],[[]],[[]],[[]],[[],["option",4]],null,[[],["client",3]],[[],["clientmsg",4]],[[]],[[]],[[["clientid",3]]],[[["asref",8],["usize",15],["vec",3]],["recordid",3]],[[["asref",8],["vec",3]],["vaultid",3]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["string",3]],[[["asref",8],["recordid",3],["vec",3]],["usize",15]],[[]],[[]],[[["clientid",3]]],[[["u8",15],["vec",3]],[["option",4],["vec",3]]],[[["vaultid",3],["cache",3],["hashset",3],["clientid",3],["vec",3]]],[[["sender",6],["internalresults",4],["context",3]]],[[["clientmsg",4],["basicactorref",3],["option",4],["context",3]]],[[["shresults",4],["sender",6],["context",3]]],[[["shrequest",4],["sender",6],["context",3]]],[[["sender",6],["context",3]]],[[["asref",8],["location",4]]],[[],["result",4]],[[["clientid",3]]],null,[[["u8",15],["vec",3]]],[[["u8",15],["vec",3]],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["vaultid",3]],[["option",4],["vaultid",3]]],null,[[]],[[]],[[["duration",3],["option",4],["u8",15],["vec",3]],[["option",4],["vec",3]]],null,[[]],[[]],[[]],[[["vaultid",3]],["key",3]],[[]],[[],[["vaultid",3],["key",3],["hashmap",3]]],[[["vaultid",3]],[["option",4],["key",3]]],[[["vaultid",3],["key",3]],["key",3]],[[]],[[]],[[["vaultid",3],["key",3],["hashmap",3]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["vaultid",3]],["bool",15]],[[]],null,null,null,[[["clientid",3]]],[[]],[[]],[[]],[[]],[[]],[[],["snapshotstate",3]],[[["u8",15],["vec",3]]],[[],["result",4]],[[]],[[]],[[["clientid",3]]],[[["clientid",3]],["bool",15]],[[]],[[]],[[["snapshotstate",3]]],[[["clientid",3]]],[[["option",4],["str",15],["option",4],["key",6],["path",3]],["result",6]],[[["sender",6],["context",3]]],[[["sender",6],["context",3]]],[[],[["u8",15],["vec",3]]],[[],["result",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["option",4],["str",15],["option",4],["key",6],["path",3]],["result",6]],null,[[],["usize",15]],null,null,[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,[[],["location",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["resultmessage",4]],[[],["location",4]],[[],["strongholdflags",4]],[[],["vaultflags",4]],[[]],[[]],[[]],[[]],[[["usize",15],["u8",15],["vec",3]]],[[["u8",15],["vec",3]]],[[["vec",3],["usize",15],["into",8],["into",8]]],[[],["result",4]],[[],["result",4]],[[["resultmessage",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["string",3],["result",4]]],[[]],[[]],[[]],[[]],[[["into",8],["vec",3]]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["resultmessage",4]],["bool",15]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null],"p":[[3,"RecordHint"],[3,"RecordId"],[4,"Procedure"],[4,"ProcResult"],[4,"Location"],[4,"Error"],[4,"ResultMessage"],[4,"StrongholdFlags"],[4,"SLIP10DeriveInput"],[3,"ActorSystem"],[3,"Stronghold"],[13,"Counter"],[13,"Generic"],[13,"SLIP10Derive"],[13,"SLIP10Generate"],[13,"BIP39Recover"],[13,"BIP39Generate"],[13,"Ed25519Sign"],[13,"Ed25519PublicKey"],[13,"BIP39MnemonicSentence"],[4,"SerdeProcResult"],[4,"SHRequest"],[4,"SHResults"],[13,"ReadSnapshot"],[13,"WriteSnapshot"],[13,"WriteToVault"],[13,"ClearCache"],[13,"WriteToStore"],[13,"CheckRecord"],[13,"ReadFromStore"],[13,"RevokeData"],[4,"InternalMsg"],[4,"InternalResults"],[3,"InternalActor"],[13,"SLIP10DeriveFromSeed"],[13,"SLIP10DeriveFromKey"],[13,"FillSnapshot"],[13,"ReloadData"],[13,"SLIP10Generate"],[13,"BIP39Generate"],[13,"BIP39Recover"],[13,"Ed25519Sign"],[13,"Ed25519PublicKey"],[13,"RebuildCache"],[4,"SMsg"],[13,"FillSnapshot"],[13,"ReadFromSnapshot"],[13,"WriteSnapshot"],[3,"Provider"],[4,"ClientMsg"],[3,"Client"],[3,"KeyStore"],[3,"SnapshotState"],[3,"Snapshot"],[8,"LoadFromPath"],[4,"VaultFlags"]]},\
"runtime":{"doc":"Stronghold Protected-access Memory Runtime.","t":[12,8,3,3,3,3,0,0,12,12,12,0,0,0,0,0,12,3,11,11,11,11,11,11,11,11,11,11,5,3,13,4,13,13,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,11,5,5,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,0,0,0,0,8,8,17,11,11,10,11,11,10,11,11,10,11,11,11,11,8,11,8,11,8,11,11],"n":["0","Bytes","Guarded","GuardedVec","Secret","ZeroingAlloc","allocator","boxed","boxed","boxed","data","guarded","guarded_vec","secret","sodium","types","0","ZeroingAlloc","alloc","alloc_zeroed","borrow","borrow_mut","dealloc","from","into","try_from","try_into","type_id","zero","Boxed","NoAccess","Prot","ReadOnly","ReadWrite","RefCount","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","drop","eq","eq","fmt","fmt","free","from","from","from","from","into","into","is_empty","is_locked","len","len","lock","lock_memory","mprotect","new","new_unlocked","prot","ptr","random","refs","release","retain","size","to_owned","to_owned","try_from","try_from","try_into","try_into","try_new","type_id","type_id","unlock","unlock_mut","zero","Guarded","Ref","RefMut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed","boxed","clone","clone","clone_into","clone_into","deref","deref","deref_mut","drop","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","into","into","into","new","new","new","random","size","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_new","type_id","type_id","type_id","zero","GuardedVec","GuardedVecVisitor","Ref","RefMut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed","boxed","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deserialize","drop","drop","eq","eq","eq","eq","eq","expecting","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","is_empty","len","marker","new","new","new","new","random","serialize","size","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_new","type_id","type_id","type_id","type_id","visit_seq","zero","RefMut","Secret","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","data","data","deref","deref_mut","drop","eq","fmt","from","from","from","into","into","new","new","random","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","zero","mlock","munlock","bytes","const_eq","rand","zero","Bytes","ContiguousBytes","GARBAGE_VALUE","as_bytes","as_mut_bytes","as_mut_u8_ptr","as_mut_u8_ptr","as_mut_u8_ptr","as_u8_ptr","as_u8_ptr","as_u8_ptr","size","size","size","uninitialized","uninitialized","ConstEq","const_eq","Randomized","randomize","Zeroed","copy_and_zero","zero"],"q":["runtime","","","","","","","","","","","","","","","","runtime::allocator","","","","","","","","","","","","","runtime::boxed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","runtime::guarded","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","runtime::guarded_vec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","runtime::secret","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","runtime::sodium","","runtime::types","","","","runtime::types::bytes","","","","","","","","","","","","","","","","runtime::types::const_eq","","runtime::types::rand","","runtime::types::zero","",""],"d":["","A trait for dealing with Bytes.  Used as the underlying …","A guarded type for protecting fixed-length secrets …","A guarded type for protecting variable-length secrets …","A Type for guarding secrets allocated to the stack.","A Zeroing Allocator which wraps the standard memory …","","","","","Internally protected data for the [<code>Secret</code>].","","","","","","","A Zeroing Allocator which wraps the standard memory …","","","","","Zero the memory before deallocation.","","","","","","Zeroes out memory at pointer in place based on the given …","A protected piece of memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A guarded type for protecting fixed-length secrets …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A guarded type for protecting variable-length secrets …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A mutable [<code>Deref</code>] wrapper around the [<code>Secret</code>]’s …","A Type for guarding secrets allocated to the stack.","","","","","","","Internally protected data for the [<code>Secret</code>].","a reference to the underlying secret data that will be …","","","Ensures that the [<code>Secret</code>]’s underlying memory is <code>munlock</code>…","","","","Creates a new [<code>Secret</code>] from existing, unprotected data, …","","","","Creates a new [<code>Secret</code>] and invokes the provided callback …","Creates a new <code>RefMut</code>.","Creates a new [<code>Secret</code>] filled with random bytes and …","","","","","","","","Creates a new [<code>Secret</code>] filled with zeroed bytes and …","A wrapper around the [<code>sodium_mlock</code>] function.","A wrapper around the [<code>sodium_munlock</code>] function.","","","","","A trait for dealing with Bytes.  Used as the underlying …","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,0,0,0,0,2,3,4,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,5,0,5,5,0,6,6,6,6,5,6,5,6,5,6,5,6,6,5,6,5,6,0,5,6,6,6,5,6,6,6,6,6,6,0,0,6,6,6,6,6,6,6,6,6,5,6,5,6,5,6,6,5,6,6,6,6,0,0,0,7,8,2,2,7,8,2,2,7,8,2,7,2,7,2,7,8,8,7,8,7,7,8,8,2,7,8,2,7,8,2,2,7,8,2,7,8,2,2,2,7,2,7,8,2,7,8,2,2,7,8,2,2,0,0,0,0,9,10,11,3,3,9,10,11,3,3,9,10,3,9,3,9,3,9,10,10,3,9,10,9,9,10,10,3,11,9,10,11,3,9,10,11,3,3,9,10,11,3,3,3,11,9,10,11,3,3,3,3,9,3,9,10,11,3,9,10,11,3,3,9,10,11,3,11,3,0,0,4,12,4,12,12,12,4,12,12,12,4,12,12,4,4,12,4,12,4,12,4,12,4,12,4,12,4,12,4,0,0,0,0,0,0,0,0,0,13,13,13,14,14,13,14,14,13,14,14,14,14,0,15,0,16,0,17,17],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["layout",3]]],[[["layout",3]]],[[]],[[]],[[["layout",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["usize",15]]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["prot",4]],[[]],[[]],[[]],[[]],[[["prot",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],null,[[]],[[["usize",15]]],[[["prot",4]]],[[["usize",15]]],[[["usize",15]]],null,null,[[["usize",15]]],null,[[]],[[["prot",4]]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["usize",15]]],null,null,null,[[]],[[]],[[]],[[],["ref",3]],[[]],[[]],[[],["refmut",3]],[[]],null,null,null,[[]],[[],["guarded",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["refmut",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["ref",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["boxed",3]]],[[["boxed",3]]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[]],[[]],[[],["ref",3]],[[]],[[]],[[]],[[]],[[],["refmut",3]],[[]],null,null,null,[[]],[[],["guardedvec",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["bool",15]],[[["refmut",3]],["bool",15]],[[],["bool",15]],[[["ref",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["usize",15]],null,[[["boxed",3]]],[[["boxed",3]]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4]],[[["usize",15]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,[[],["bool",15]],null,[[]],null,[[]],[[]]],"p":[[3,"ZeroingAlloc"],[3,"Guarded"],[3,"GuardedVec"],[3,"Secret"],[4,"Prot"],[3,"Boxed"],[3,"Ref"],[3,"RefMut"],[3,"Ref"],[3,"RefMut"],[3,"GuardedVecVisitor"],[3,"RefMut"],[8,"ContiguousBytes"],[8,"Bytes"],[8,"ConstEq"],[8,"Randomized"],[8,"Zeroed"]]},\
"stronghold_derive":{"doc":"Proc macros for Stronghold.","t":[24,24,0,5,5,5,5],"n":["GuardDebug","RequestPermissions","comm","build_plain","impl_permission","impl_to_permissioned","match_fields"],"q":["stronghold_derive","","","stronghold_derive::comm","","",""],"d":["A version of the Debug macro that blocks parsing the data …","Implements the [<code>VariantPermission</code>] for struct/ unions …","","","","",""],"i":[0,0,0,0,0,0,0],"f":[null,null,null,[[["ident",3],["dataenum",3]],["tokenstream",3]],[[["ident",3],["dataenum",3]],["tokenstream",3]],[[["ident",3],["dataenum",3]],["tokenstream",3]],[[["fields",4]],["tokenstream",3]]],"p":[]},\
"stronghold_utils":{"doc":"","t":[24,24,0,5,0,3,5,11,11,11,11,11,11,11,11,12,11,11,5,5,5,0,5,5,5,5,5,5],"n":["GuardDebug","RequestPermissions","ask","ask","test_utils","AskActor","ask","borrow","borrow_mut","boxed","from","into","recv","try_from","try_into","tx","type_id","vzip","corrupt","corrupt_file","corrupt_file_at","fresh","seek_to_beginning","bytestring","coinflip","non_empty_bytestring","string","usize"],"q":["stronghold_utils","","","","","stronghold_utils::ask","","","","","","","","","","","","","stronghold_utils::test_utils","","","","","stronghold_utils::test_utils::fresh","","","",""],"d":["A version of the Debug macro that blocks parsing the data …","Implements the [<code>VariantPermission</code>] for struct/ unions …","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,[[],["remotehandle",3]],null,null,[[],["remotehandle",3]],[[]],[[]],[[["mutex",3],["arc",3]],["boxactor",6]],[[]],[[]],[[["sender",6],["context",3]]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[]],[[]],[[["file",3]]],[[["path",3]]],null,[[["file",3]]],[[],[["u8",15],["vec",3]]],[[],["bool",15]],[[],[["u8",15],["vec",3]]],[[],["string",3]],[[["usize",15]],["usize",15]]],"p":[[3,"AskActor"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};