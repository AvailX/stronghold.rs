(function() {var implementors = {};
implementors["crypto"] = [{"text":"impl Unpin for ChaCha20Ietf","synthetic":true,"types":[]},{"text":"impl Unpin for ChaChaPolyIetf","synthetic":true,"types":[]},{"text":"impl Unpin for Poly1305","synthetic":true,"types":[]},{"text":"impl Unpin for XChaCha20","synthetic":true,"types":[]},{"text":"impl Unpin for XChaChaPoly","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["iota_stronghold"] = [{"text":"impl Unpin for SLIP10DeriveInput","synthetic":true,"types":[]},{"text":"impl Unpin for Procedure","synthetic":true,"types":[]},{"text":"impl Unpin for ProcResult","synthetic":true,"types":[]},{"text":"impl Unpin for SerdeProcResult","synthetic":true,"types":[]},{"text":"impl Unpin for SHRequest","synthetic":true,"types":[]},{"text":"impl Unpin for SHResults","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for InternalActor&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for InternalMsg","synthetic":true,"types":[]},{"text":"impl Unpin for InternalResults","synthetic":true,"types":[]},{"text":"impl Unpin for SMsg","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for Bucket&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ReadWrite","synthetic":true,"types":[]},{"text":"impl Unpin for Client","synthetic":true,"types":[]},{"text":"impl Unpin for ClientMsg","synthetic":true,"types":[]},{"text":"impl Unpin for Stronghold","synthetic":true,"types":[]},{"text":"impl Unpin for Provider","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for KeyStore&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Snapshot","synthetic":true,"types":[]},{"text":"impl Unpin for SnapshotState","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Seed","synthetic":true,"types":[]},{"text":"impl Unpin for Key","synthetic":true,"types":[]},{"text":"impl Unpin for Segment","synthetic":true,"types":[]},{"text":"impl Unpin for Chain","synthetic":true,"types":[]},{"text":"impl Unpin for ClientId","synthetic":true,"types":[]},{"text":"impl Unpin for VaultId","synthetic":true,"types":[]},{"text":"impl Unpin for ID","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ResultMessage&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Location","synthetic":true,"types":[]},{"text":"impl Unpin for StrongholdFlags","synthetic":true,"types":[]},{"text":"impl Unpin for VaultFlags","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Secret&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["primitives"] = [{"text":"impl Unpin for MessageAuthCodeInfo","synthetic":true,"types":[]},{"text":"impl Unpin for CipherInfo","synthetic":true,"types":[]},{"text":"impl Unpin for HashInfo","synthetic":true,"types":[]},{"text":"impl Unpin for KeyDervFuncInfo","synthetic":true,"types":[]},{"text":"impl Unpin for PbkdfInfo","synthetic":true,"types":[]},{"text":"impl Unpin for SignInfo","synthetic":true,"types":[]}];
implementors["random"] = [{"text":"impl Unpin for OsRandomErr","synthetic":true,"types":[]},{"text":"impl Unpin for OsRng","synthetic":true,"types":[]}];
implementors["runtime"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for PAGE_SIZE","synthetic":true,"types":[]},{"text":"impl Unpin for GuardedAllocation","synthetic":true,"types":[]},{"text":"impl Unpin for GuardedAllocator","synthetic":true,"types":[]},{"text":"impl Unpin for __kernel_fd_set","synthetic":true,"types":[]},{"text":"impl Unpin for __kernel_fsid_t","synthetic":true,"types":[]},{"text":"impl Unpin for sock_filter","synthetic":true,"types":[]},{"text":"impl Unpin for sock_fprog","synthetic":true,"types":[]},{"text":"impl Unpin for seccomp_data","synthetic":true,"types":[]},{"text":"impl Unpin for Program","synthetic":true,"types":[]},{"text":"impl Unpin for Spec","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ZoneSpec","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["snapshot"] = [{"text":"impl&lt;'a&gt; Unpin for LZ4Decoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LZ4Encoder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Block","synthetic":true,"types":[]},{"text":"impl Unpin for Duplicate","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["store"] = [{"text":"impl&lt;K, V&gt; Unpin for Cache&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Value&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["stronghold_communication"] = [{"text":"impl Unpin for ConnectionManager","synthetic":true,"types":[]},{"text":"impl Unpin for PermissionValue","synthetic":true,"types":[]},{"text":"impl Unpin for PermissionSum","synthetic":true,"types":[]},{"text":"impl Unpin for RequestDirection","synthetic":true,"types":[]},{"text":"impl Unpin for FirewallPermission","synthetic":true,"types":[]},{"text":"impl Unpin for FirewallRule","synthetic":true,"types":[]},{"text":"impl Unpin for FirewallConfiguration","synthetic":true,"types":[]},{"text":"impl&lt;Req, Res, ClientMsg, P&gt; Unpin for SwarmTask&lt;Req, Res, ClientMsg, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RelayConfig","synthetic":true,"types":[]},{"text":"impl Unpin for KeepAlive","synthetic":true,"types":[]},{"text":"impl&lt;Req, ClientMsg&gt; Unpin for CommunicationRequest&lt;Req, ClientMsg&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Req: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FirewallBlocked","synthetic":true,"types":[]},{"text":"impl Unpin for RequestMessageError","synthetic":true,"types":[]},{"text":"impl Unpin for EstablishedConnection","synthetic":true,"types":[]},{"text":"impl&lt;Res&gt; Unpin for CommunicationResults&lt;Res&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Res: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectPeerError","synthetic":true,"types":[]},{"text":"impl&lt;ClientMsg&gt; Unpin for CommunicationActorConfig&lt;ClientMsg&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Req, Res, ClientMsg, P&gt; Unpin for CommunicationActor&lt;Req, Res, ClientMsg, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Res: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MessageProtocol","synthetic":true,"types":[]},{"text":"impl&lt;Req, Res&gt; Unpin for MessageCodec&lt;Req, Res&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Req: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Res: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Req&gt; Unpin for RequestEnvelope&lt;Req&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Req: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for P2PMdnsEvent","synthetic":true,"types":[]},{"text":"impl Unpin for P2PIdentifyInfo","synthetic":true,"types":[]},{"text":"impl Unpin for P2PProtocolsHandlerUpgrErr","synthetic":true,"types":[]},{"text":"impl Unpin for P2PIdentifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for P2POutboundFailure","synthetic":true,"types":[]},{"text":"impl Unpin for P2PInboundFailure","synthetic":true,"types":[]},{"text":"impl&lt;Req, Res&gt; Unpin for P2PReqResEvent&lt;Req, Res&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Req: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Res: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Req, Res&gt; Unpin for P2PEvent&lt;Req, Res&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for BehaviourError","synthetic":true,"types":[]},{"text":"impl Unpin for BehaviourConfig","synthetic":true,"types":[]},{"text":"impl&lt;Req, Res&gt; Unpin for P2PNetworkBehaviour&lt;Req, Res&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Req: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Res: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["stronghold_utils"] = [{"text":"impl&lt;Msg&gt; Unpin for AskActor&lt;Msg&gt;","synthetic":true,"types":[]}];
implementors["vault"] = [{"text":"impl Unpin for Base64","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Key&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TransactionType","synthetic":true,"types":[]},{"text":"impl Unpin for Transaction","synthetic":true,"types":[]},{"text":"impl Unpin for UntypedTransaction","synthetic":true,"types":[]},{"text":"impl Unpin for DataTransaction","synthetic":true,"types":[]},{"text":"impl Unpin for RevocationTransaction","synthetic":true,"types":[]},{"text":"impl Unpin for InitTransaction","synthetic":true,"types":[]},{"text":"impl Unpin for SealedTransaction","synthetic":true,"types":[]},{"text":"impl Unpin for SealedBlob","synthetic":true,"types":[]},{"text":"impl Unpin for RecordHint","synthetic":true,"types":[]},{"text":"impl Unpin for Val","synthetic":true,"types":[]},{"text":"impl Unpin for ChainId","synthetic":true,"types":[]},{"text":"impl Unpin for TransactionId","synthetic":true,"types":[]},{"text":"impl Unpin for BlobId","synthetic":true,"types":[]},{"text":"impl Unpin for Chain","synthetic":true,"types":[]},{"text":"impl Unpin for Kind","synthetic":true,"types":[]},{"text":"impl Unpin for ReadRequest","synthetic":true,"types":[]},{"text":"impl Unpin for ReadResult","synthetic":true,"types":[]},{"text":"impl Unpin for WriteRequest","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteRequest","synthetic":true,"types":[]},{"text":"impl Unpin for RecordId","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Unpin for DBView&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Unpin for DBReader&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PreparedRead","synthetic":true,"types":[]},{"text":"impl&lt;'a, P&gt; Unpin for DBWriter&lt;'a, P&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()