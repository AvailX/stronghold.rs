(function() {var implementors = {};
implementors["communication"] = [{"text":"impl&lt;Req:&nbsp;<a class=\"trait\" href=\"communication/behaviour/protocol/trait.MessageEvent.html\" title=\"trait communication::behaviour::protocol::MessageEvent\">MessageEvent</a>, Res:&nbsp;<a class=\"trait\" href=\"communication/behaviour/protocol/trait.MessageEvent.html\" title=\"trait communication::behaviour::protocol::MessageEvent\">MessageEvent</a>&gt; NetworkBehaviour for <a class=\"struct\" href=\"communication/behaviour/struct.P2PNetworkBehaviour.html\" title=\"struct communication::behaviour::P2PNetworkBehaviour\">P2PNetworkBehaviour</a>&lt;Req, Res&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mdns: NetworkBehaviour,<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: NetworkBehaviourEventProcess&lt;&lt;Mdns as NetworkBehaviour&gt;::OutEvent&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Identify: NetworkBehaviour,<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: NetworkBehaviourEventProcess&lt;&lt;Identify as NetworkBehaviour&gt;::OutEvent&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;RequestResponse&lt;<a class=\"struct\" href=\"communication/behaviour/protocol/struct.MessageCodec.html\" title=\"struct communication::behaviour::protocol::MessageCodec\">MessageCodec</a>&lt;Req, Res&gt;&gt;: NetworkBehaviour,<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: NetworkBehaviourEventProcess&lt;&lt;RequestResponse&lt;<a class=\"struct\" href=\"communication/behaviour/protocol/struct.MessageCodec.html\" title=\"struct communication::behaviour::protocol::MessageCodec\">MessageCodec</a>&lt;Req, Res&gt;&gt; as NetworkBehaviour&gt;::OutEvent&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Relay: NetworkBehaviour,<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: NetworkBehaviourEventProcess&lt;&lt;Relay as NetworkBehaviour&gt;::OutEvent&gt;,&nbsp;</span>","synthetic":false,"types":["communication::behaviour::P2PNetworkBehaviour"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()